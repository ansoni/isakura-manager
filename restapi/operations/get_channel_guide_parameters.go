// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetChannelGuideParams creates a new GetChannelGuideParams object
// no default values defined in spec.
func NewGetChannelGuideParams() GetChannelGuideParams {

	return GetChannelGuideParams{}
}

// GetChannelGuideParams contains all the bound params for the get channel guide operation
// typically these are obtained from a http.Request
//
// swagger:parameters getChannelGuide
type GetChannelGuideParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*
	  Required: true
	  In: path
	*/
	Channel string
	/*Search Param to filter on
	  In: query
	*/
	Search *string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewGetChannelGuideParams() beforehand.
func (o *GetChannelGuideParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	rChannel, rhkChannel, _ := route.Params.GetOK("channel")
	if err := o.bindChannel(rChannel, rhkChannel, route.Formats); err != nil {
		res = append(res, err)
	}

	qSearch, qhkSearch, _ := qs.GetOK("search")
	if err := o.bindSearch(qSearch, qhkSearch, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindChannel binds and validates parameter Channel from path.
func (o *GetChannelGuideParams) bindChannel(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	o.Channel = raw

	return nil
}

// bindSearch binds and validates parameter Search from query.
func (o *GetChannelGuideParams) bindSearch(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false
	if raw == "" { // empty values pass all other validations
		return nil
	}

	o.Search = &raw

	return nil
}
