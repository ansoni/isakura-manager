// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetContentPreviewHandlerFunc turns a function with the right signature into a get content preview handler
type GetContentPreviewHandlerFunc func(GetContentPreviewParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetContentPreviewHandlerFunc) Handle(params GetContentPreviewParams) middleware.Responder {
	return fn(params)
}

// GetContentPreviewHandler interface for that can handle valid get content preview params
type GetContentPreviewHandler interface {
	Handle(GetContentPreviewParams) middleware.Responder
}

// NewGetContentPreview creates a new http.Handler for the get content preview operation
func NewGetContentPreview(ctx *middleware.Context, handler GetContentPreviewHandler) *GetContentPreview {
	return &GetContentPreview{Context: ctx, Handler: handler}
}

/*GetContentPreview swagger:route GET /channels/{channel}/content/{content}/preview getContentPreview

get content info

*/
type GetContentPreview struct {
	Context *middleware.Context
	Handler GetContentPreviewHandler
}

func (o *GetContentPreview) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetContentPreviewParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
