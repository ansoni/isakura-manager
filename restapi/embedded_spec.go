// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Isakura-manager",
    "title": "isakura-manager",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "app redirect",
        "operationId": "getRootRedirect",
        "responses": {
          "301": {
            "description": "woot!"
          }
        }
      }
    },
    "/channels/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get all channels",
        "operationId": "getChannels",
        "parameters": [
          {
            "type": "string",
            "description": "Search Param to look for in programming",
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "woot!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Channel"
              }
            }
          }
        }
      }
    },
    "/channels/guide": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get channel guide",
        "operationId": "getChannelsGuide",
        "parameters": [
          {
            "type": "string",
            "description": "Search Param to filter on",
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "woot!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelGuide"
              }
            }
          }
        }
      }
    },
    "/channels/{channel}/content/{content}/preview": {
      "get": {
        "produces": [
          "video/x-flv"
        ],
        "summary": "get content info",
        "operationId": "getContentPreview",
        "parameters": [
          {
            "type": "string",
            "name": "content",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "channel",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "woot!"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/channels/{channel}/guide": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get channel guide",
        "operationId": "getChannelGuide",
        "parameters": [
          {
            "type": "string",
            "name": "channel",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Search Param to filter on",
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "woot!",
            "schema": {
              "$ref": "#/definitions/ChannelGuide"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/content": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get existing content we have downloaded",
        "operationId": "getContent",
        "responses": {
          "200": {
            "description": "woot!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Content"
              }
            }
          }
        }
      }
    },
    "/content/folders": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get existing content folders",
        "operationId": "getContentFolders",
        "responses": {
          "200": {
            "description": "woot!",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/content/{content_name}": {
      "delete": {
        "summary": "delete a piece of content from library",
        "operationId": "deleteContent",
        "parameters": [
          {
            "type": "string",
            "name": "content_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "woot!"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "broke"
          }
        }
      }
    },
    "/schedules": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get our recording schedules",
        "operationId": "getSchedules",
        "responses": {
          "200": {
            "description": "woot!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Schedule"
              }
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get our recording schedules",
        "operationId": "createSchedule",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "woot!"
          }
        }
      }
    },
    "/schedules/{schedule_name}": {
      "delete": {
        "summary": "delete a recording schedule",
        "operationId": "deleteSchedule",
        "parameters": [
          {
            "type": "string",
            "name": "schedule_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "woot!"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "broke"
          }
        }
      }
    },
    "/ui/{resource}": {
      "get": {
        "summary": "app redirect",
        "operationId": "getUiContent",
        "parameters": [
          {
            "type": "string",
            "name": "resource",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "woot!"
          }
        }
      }
    }
  },
  "definitions": {
    "Channel": {
      "type": "object",
      "properties": {
        "broadcastType": {
          "type": "string"
        },
        "channelName": {
          "type": "string"
        }
      }
    },
    "ChannelGuide": {
      "type": "object",
      "properties": {
        "channelName": {
          "type": "string"
        },
        "guide": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Guide"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Content": {
      "type": "object",
      "properties": {
        "download_date": {
          "type": "string",
          "format": "date-time"
        },
        "local_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Guide": {
      "type": "object",
      "properties": {
        "airdate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Schedule": {
      "type": "object",
      "properties": {
        "appendDate": {
          "type": "boolean"
        },
        "appendTime": {
          "type": "boolean"
        },
        "filter": {
          "type": "string"
        },
        "folder": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prependDate": {
          "type": "boolean"
        },
        "prependTime": {
          "type": "boolean"
        },
        "searches": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "replace": {
                "type": "string"
              },
              "search": {
                "type": "string"
              }
            }
          }
        },
        "watch": {
          "type": "boolean"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Isakura-manager",
    "title": "isakura-manager",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "app redirect",
        "operationId": "getRootRedirect",
        "responses": {
          "301": {
            "description": "woot!"
          }
        }
      }
    },
    "/channels/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get all channels",
        "operationId": "getChannels",
        "parameters": [
          {
            "type": "string",
            "description": "Search Param to look for in programming",
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "woot!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Channel"
              }
            }
          }
        }
      }
    },
    "/channels/guide": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get channel guide",
        "operationId": "getChannelsGuide",
        "parameters": [
          {
            "type": "string",
            "description": "Search Param to filter on",
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "woot!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelGuide"
              }
            }
          }
        }
      }
    },
    "/channels/{channel}/content/{content}/preview": {
      "get": {
        "produces": [
          "video/x-flv"
        ],
        "summary": "get content info",
        "operationId": "getContentPreview",
        "parameters": [
          {
            "type": "string",
            "name": "content",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "channel",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "woot!"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/channels/{channel}/guide": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get channel guide",
        "operationId": "getChannelGuide",
        "parameters": [
          {
            "type": "string",
            "name": "channel",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Search Param to filter on",
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "woot!",
            "schema": {
              "$ref": "#/definitions/ChannelGuide"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/content": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get existing content we have downloaded",
        "operationId": "getContent",
        "responses": {
          "200": {
            "description": "woot!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Content"
              }
            }
          }
        }
      }
    },
    "/content/folders": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get existing content folders",
        "operationId": "getContentFolders",
        "responses": {
          "200": {
            "description": "woot!",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/content/{content_name}": {
      "delete": {
        "summary": "delete a piece of content from library",
        "operationId": "deleteContent",
        "parameters": [
          {
            "type": "string",
            "name": "content_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "woot!"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "broke"
          }
        }
      }
    },
    "/schedules": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get our recording schedules",
        "operationId": "getSchedules",
        "responses": {
          "200": {
            "description": "woot!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Schedule"
              }
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "summary": "get our recording schedules",
        "operationId": "createSchedule",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "woot!"
          }
        }
      }
    },
    "/schedules/{schedule_name}": {
      "delete": {
        "summary": "delete a recording schedule",
        "operationId": "deleteSchedule",
        "parameters": [
          {
            "type": "string",
            "name": "schedule_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "woot!"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "broke"
          }
        }
      }
    },
    "/ui/{resource}": {
      "get": {
        "summary": "app redirect",
        "operationId": "getUiContent",
        "parameters": [
          {
            "type": "string",
            "name": "resource",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "woot!"
          }
        }
      }
    }
  },
  "definitions": {
    "Channel": {
      "type": "object",
      "properties": {
        "broadcastType": {
          "type": "string"
        },
        "channelName": {
          "type": "string"
        }
      }
    },
    "ChannelGuide": {
      "type": "object",
      "properties": {
        "channelName": {
          "type": "string"
        },
        "guide": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Guide"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Content": {
      "type": "object",
      "properties": {
        "download_date": {
          "type": "string",
          "format": "date-time"
        },
        "local_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Guide": {
      "type": "object",
      "properties": {
        "airdate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Schedule": {
      "type": "object",
      "properties": {
        "appendDate": {
          "type": "boolean"
        },
        "appendTime": {
          "type": "boolean"
        },
        "filter": {
          "type": "string"
        },
        "folder": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prependDate": {
          "type": "boolean"
        },
        "prependTime": {
          "type": "boolean"
        },
        "searches": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "replace": {
                "type": "string"
              },
              "search": {
                "type": "string"
              }
            }
          }
        },
        "watch": {
          "type": "boolean"
        }
      }
    }
  }
}`))
}
