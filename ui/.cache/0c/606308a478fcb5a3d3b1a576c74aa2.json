{"id":"node_modules/parse-headers/parse-headers.js","dependencies":[{"name":"/Users/AJohnson/src/go/src/github.com/ansoni/isakura-manager/ui/package.json","includedInParent":true,"mtime":1569493271435},{"name":"/Users/AJohnson/src/go/src/github.com/ansoni/isakura-manager/ui/node_modules/parse-headers/package.json","includedInParent":true,"mtime":1569492171412},{"name":"string.prototype.trim","loc":{"line":1,"column":19},"parent":"/Users/AJohnson/src/go/src/github.com/ansoni/isakura-manager/ui/node_modules/parse-headers/parse-headers.js","resolved":"/Users/AJohnson/src/go/src/github.com/ansoni/isakura-manager/ui/node_modules/string.prototype.trim/index.js"},{"name":"for-each","loc":{"line":2,"column":22},"parent":"/Users/AJohnson/src/go/src/github.com/ansoni/isakura-manager/ui/node_modules/parse-headers/parse-headers.js","resolved":"/Users/AJohnson/src/go/src/github.com/ansoni/isakura-manager/ui/node_modules/for-each/index.js"}],"generated":{"js":"var trim = require('string.prototype.trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/parse-headers/parse-headers.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"node_modules/parse-headers/parse-headers.js":"var trim = require('string.prototype.trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n"},"lineCount":32}},"error":null,"hash":"06aae751e6733b001d3c93bfa5e3dd19","cacheData":{"env":{}}}