// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"node_modules/vue/dist/vue.runtime.esm.js":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*!
 * Vue.js v2.6.10
 * (c) 2014-2019 Evan You
 * Released under the MIT License.
 */

/*  */
var emptyObject = Object.freeze({}); // These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.

function isUndef(v) {
  return v === undefined || v === null;
}

function isDef(v) {
  return v !== undefined && v !== null;
}

function isTrue(v) {
  return v === true;
}

function isFalse(v) {
  return v === false;
}
/**
 * Check if value is primitive.
 */


function isPrimitive(value) {
  return typeof value === 'string' || typeof value === 'number' || // $flow-disable-line
  typeof value === 'symbol' || typeof value === 'boolean';
}
/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */


function isObject(obj) {
  return obj !== null && typeof obj === 'object';
}
/**
 * Get the raw type string of a value, e.g., [object Object].
 */


var _toString = Object.prototype.toString;

function toRawType(value) {
  return _toString.call(value).slice(8, -1);
}
/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */


function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}

function isRegExp(v) {
  return _toString.call(v) === '[object RegExp]';
}
/**
 * Check if val is a valid array index.
 */


function isValidArrayIndex(val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val);
}

function isPromise(val) {
  return isDef(val) && typeof val.then === 'function' && typeof val.catch === 'function';
}
/**
 * Convert a value to a string that is actually rendered.
 */


function toString(val) {
  return val == null ? '' : Array.isArray(val) || isPlainObject(val) && val.toString === _toString ? JSON.stringify(val, null, 2) : String(val);
}
/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */


function toNumber(val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n;
}
/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */


function makeMap(str, expectsLowerCase) {
  var map = Object.create(null);
  var list = str.split(',');

  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }

  return expectsLowerCase ? function (val) {
    return map[val.toLowerCase()];
  } : function (val) {
    return map[val];
  };
}
/**
 * Check if a tag is a built-in tag.
 */


var isBuiltInTag = makeMap('slot,component', true);
/**
 * Check if an attribute is a reserved attribute.
 */

var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');
/**
 * Remove an item from an array.
 */

function remove(arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);

    if (index > -1) {
      return arr.splice(index, 1);
    }
  }
}
/**
 * Check whether an object has the property.
 */


var hasOwnProperty = Object.prototype.hasOwnProperty;

function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}
/**
 * Create a cached version of a pure function.
 */


function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}
/**
 * Camelize a hyphen-delimited string.
 */


var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
});
/**
 * Capitalize a string.
 */

var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
});
/**
 * Hyphenate a camelCase string.
 */

var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase();
});
/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */

function polyfillBind(fn, ctx) {
  function boundFn(a) {
    var l = arguments.length;
    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);
  }

  boundFn._length = fn.length;
  return boundFn;
}

function nativeBind(fn, ctx) {
  return fn.bind(ctx);
}

var bind = Function.prototype.bind ? nativeBind : polyfillBind;
/**
 * Convert an Array-like object to a real Array.
 */

function toArray(list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);

  while (i--) {
    ret[i] = list[i + start];
  }

  return ret;
}
/**
 * Mix properties into target object.
 */


function extend(to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }

  return to;
}
/**
 * Merge an Array of Objects into a single Object.
 */


function toObject(arr) {
  var res = {};

  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }

  return res;
}
/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */


function noop(a, b, c) {}
/**
 * Always return false.
 */


var no = function (a, b, c) {
  return false;
};
/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */


var identity = function (_) {
  return _;
};
/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */


function looseEqual(a, b) {
  if (a === b) {
    return true;
  }

  var isObjectA = isObject(a);
  var isObjectB = isObject(b);

  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);

      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i]);
        });
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime();
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key]);
        });
      } else {
        /* istanbul ignore next */
        return false;
      }
    } catch (e) {
      /* istanbul ignore next */
      return false;
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b);
  } else {
    return false;
  }
}
/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */


function looseIndexOf(arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) {
      return i;
    }
  }

  return -1;
}
/**
 * Ensure a function is called only once.
 */


function once(fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  };
}

var SSR_ATTR = 'data-server-rendered';
var ASSET_TYPES = ['component', 'directive', 'filter'];
var LIFECYCLE_HOOKS = ['beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed', 'activated', 'deactivated', 'errorCaptured', 'serverPrefetch'];
/*  */

var config = {
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
};
/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */

var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;
/**
 * Check if a string starts with $ or _
 */

function isReserved(str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F;
}
/**
 * Define a property.
 */


function def(obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}
/**
 * Parse simple path.
 */


var bailRE = new RegExp("[^" + unicodeRegExp.source + ".$_\\d]");

function parsePath(path) {
  if (bailRE.test(path)) {
    return;
  }

  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) {
        return;
      }

      obj = obj[segments[i]];
    }

    return obj;
  };
}
/*  */
// can we use __proto__?


var hasProto = '__proto__' in {}; // Browser environment sniffing

var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = UA && UA.indexOf('android') > 0 || weexPlatform === 'android';
var isIOS = UA && /iphone|ipad|ipod|ios/.test(UA) || weexPlatform === 'ios';
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/); // Firefox has a "watch" function on Object.prototype...

var nativeWatch = {}.watch;
var supportsPassive = false;

if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', {
      get: function get() {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    }); // https://github.com/facebook/flow/issues/285

    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
} // this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV


var _isServer;

var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }

  return _isServer;
}; // detect devtools


var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;
/* istanbul ignore next */

function isNative(Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString());
}

var hasSymbol = typeof Symbol !== 'undefined' && isNative(Symbol) && typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */
// $flow-disable-line


if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set =
  /*@__PURE__*/
  function () {
    function Set() {
      this.set = Object.create(null);
    }

    Set.prototype.has = function has(key) {
      return this.set[key] === true;
    };

    Set.prototype.add = function add(key) {
      this.set[key] = true;
    };

    Set.prototype.clear = function clear() {
      this.set = Object.create(null);
    };

    return Set;
  }();
}
/*  */


var warn = noop;
var tip = noop;
var generateComponentTrace = noop; // work around flow check

var formatComponentName = noop;

if ("development" !== 'production') {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;

  var classify = function (str) {
    return str.replace(classifyRE, function (c) {
      return c.toUpperCase();
    }).replace(/[-_]/g, '');
  };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && !config.silent) {
      console.error("[Vue warn]: " + msg + trace);
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && !config.silent) {
      console.warn("[Vue tip]: " + msg + (vm ? generateComponentTrace(vm) : ''));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>';
    }

    var options = typeof vm === 'function' && vm.cid != null ? vm.options : vm._isVue ? vm.$options || vm.constructor.options : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;

    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (name ? "<" + classify(name) + ">" : "<Anonymous>") + (file && includeFile !== false ? " at " + file : '');
  };

  var repeat = function (str, n) {
    var res = '';

    while (n) {
      if (n % 2 === 1) {
        res += str;
      }

      if (n > 1) {
        str += str;
      }

      n >>= 1;
    }

    return res;
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;

      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];

          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue;
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }

        tree.push(vm);
        vm = vm.$parent;
      }

      return '\n\nfound in\n\n' + tree.map(function (vm, i) {
        return "" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm) ? formatComponentName(vm[0]) + "... (" + vm[1] + " recursive calls)" : formatComponentName(vm));
      }).join('\n');
    } else {
      return "\n\n(found in " + formatComponentName(vm) + ")";
    }
  };
}
/*  */


var uid = 0;
/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */

var Dep = function Dep() {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub(sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub(sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend() {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify() {
  // stabilize the subscriber list first
  var subs = this.subs.slice();

  if ("development" !== 'production' && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) {
      return a.id - b.id;
    });
  }

  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
}; // The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.


Dep.target = null;
var targetStack = [];

function pushTarget(target) {
  targetStack.push(target);
  Dep.target = target;
}

function popTarget() {
  targetStack.pop();
  Dep.target = targetStack[targetStack.length - 1];
}
/*  */


var VNode = function VNode(tag, data, children, text, elm, context, componentOptions, asyncFactory) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = {
  child: {
    configurable: true
  }
}; // DEPRECATED: alias for componentInstance for backwards compat.

/* istanbul ignore next */

prototypeAccessors.child.get = function () {
  return this.componentInstance;
};

Object.defineProperties(VNode.prototype, prototypeAccessors);

var createEmptyVNode = function (text) {
  if (text === void 0) text = '';
  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node;
};

function createTextVNode(val) {
  return new VNode(undefined, undefined, undefined, String(val));
} // optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.


function cloneVNode(vnode) {
  var cloned = new VNode(vnode.tag, vnode.data, // #7975
  // clone children array to avoid mutating original in case of cloning
  // a child.
  vnode.children && vnode.children.slice(), vnode.text, vnode.elm, vnode.context, vnode.componentOptions, vnode.asyncFactory);
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned;
}
/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */


var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);
var methodsToPatch = ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'];
/**
 * Intercept mutating methods and emit events
 */

methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator() {
    var args = [],
        len = arguments.length;

    while (len--) args[len] = arguments[len];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;

    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break;

      case 'splice':
        inserted = args.slice(2);
        break;
    }

    if (inserted) {
      ob.observeArray(inserted);
    } // notify change


    ob.dep.notify();
    return result;
  });
});
/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);
/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */

var shouldObserve = true;

function toggleObserving(value) {
  shouldObserve = value;
}
/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */


var Observer = function Observer(value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);

  if (Array.isArray(value)) {
    if (hasProto) {
      protoAugment(value, arrayMethods);
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }

    this.observeArray(value);
  } else {
    this.walk(value);
  }
};
/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */


Observer.prototype.walk = function walk(obj) {
  var keys = Object.keys(obj);

  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};
/**
 * Observe a list of Array items.
 */


Observer.prototype.observeArray = function observeArray(items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
}; // helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */


function protoAugment(target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}
/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */

/* istanbul ignore next */


function copyAugment(target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}
/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */


function observe(value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return;
  }

  var ob;

  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (shouldObserve && !isServerRendering() && (Array.isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {
    ob = new Observer(value);
  }

  if (asRootData && ob) {
    ob.vmCount++;
  }

  return ob;
}
/**
 * Define a reactive property on an Object.
 */


function defineReactive$$1(obj, key, val, customSetter, shallow) {
  var dep = new Dep();
  var property = Object.getOwnPropertyDescriptor(obj, key);

  if (property && property.configurable === false) {
    return;
  } // cater for pre-defined getter/setters


  var getter = property && property.get;
  var setter = property && property.set;

  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter() {
      var value = getter ? getter.call(obj) : val;

      if (Dep.target) {
        dep.depend();

        if (childOb) {
          childOb.dep.depend();

          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }

      return value;
    },
    set: function reactiveSetter(newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */

      if (newVal === value || newVal !== newVal && value !== value) {
        return;
      }
      /* eslint-enable no-self-compare */


      if ("development" !== 'production' && customSetter) {
        customSetter();
      } // #7981: for accessor properties without setter


      if (getter && !setter) {
        return;
      }

      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }

      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}
/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */


function set(target, key, val) {
  if ("development" !== 'production' && (isUndef(target) || isPrimitive(target))) {
    warn("Cannot set reactive property on undefined, null, or primitive value: " + target);
  }

  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val;
  }

  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val;
  }

  var ob = target.__ob__;

  if (target._isVue || ob && ob.vmCount) {
    "development" !== 'production' && warn('Avoid adding reactive properties to a Vue instance or its root $data ' + 'at runtime - declare it upfront in the data option.');
    return val;
  }

  if (!ob) {
    target[key] = val;
    return val;
  }

  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val;
}
/**
 * Delete a property and trigger change if necessary.
 */


function del(target, key) {
  if ("development" !== 'production' && (isUndef(target) || isPrimitive(target))) {
    warn("Cannot delete reactive property on undefined, null, or primitive value: " + target);
  }

  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return;
  }

  var ob = target.__ob__;

  if (target._isVue || ob && ob.vmCount) {
    "development" !== 'production' && warn('Avoid deleting properties on a Vue instance or its root $data ' + '- just set it to null.');
    return;
  }

  if (!hasOwn(target, key)) {
    return;
  }

  delete target[key];

  if (!ob) {
    return;
  }

  ob.dep.notify();
}
/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */


function dependArray(value) {
  for (var e = void 0, i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();

    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}
/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */


var strats = config.optionMergeStrategies;
/**
 * Options with restrictions
 */

if ("development" !== 'production') {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn("option \"" + key + "\" can only be used during instance " + 'creation with the `new` keyword.');
    }

    return defaultStrat(parent, child);
  };
}
/**
 * Helper that recursively merges two data objects together.
 */


function mergeData(to, from) {
  if (!from) {
    return to;
  }

  var key, toVal, fromVal;
  var keys = hasSymbol ? Reflect.ownKeys(from) : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i]; // in case the object is already observed...

    if (key === '__ob__') {
      continue;
    }

    toVal = to[key];
    fromVal = from[key];

    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (toVal !== fromVal && isPlainObject(toVal) && isPlainObject(fromVal)) {
      mergeData(toVal, fromVal);
    }
  }

  return to;
}
/**
 * Data
 */


function mergeDataOrFn(parentVal, childVal, vm) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal;
    }

    if (!parentVal) {
      return childVal;
    } // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.


    return function mergedDataFn() {
      return mergeData(typeof childVal === 'function' ? childVal.call(this, this) : childVal, typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal);
    };
  } else {
    return function mergedInstanceDataFn() {
      // instance merge
      var instanceData = typeof childVal === 'function' ? childVal.call(vm, vm) : childVal;
      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm, vm) : parentVal;

      if (instanceData) {
        return mergeData(instanceData, defaultData);
      } else {
        return defaultData;
      }
    };
  }
}

strats.data = function (parentVal, childVal, vm) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
      "development" !== 'production' && warn('The "data" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);
      return parentVal;
    }

    return mergeDataOrFn(parentVal, childVal);
  }

  return mergeDataOrFn(parentVal, childVal, vm);
};
/**
 * Hooks and props are merged as arrays.
 */


function mergeHook(parentVal, childVal) {
  var res = childVal ? parentVal ? parentVal.concat(childVal) : Array.isArray(childVal) ? childVal : [childVal] : parentVal;
  return res ? dedupeHooks(res) : res;
}

function dedupeHooks(hooks) {
  var res = [];

  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }

  return res;
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});
/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */

function mergeAssets(parentVal, childVal, vm, key) {
  var res = Object.create(parentVal || null);

  if (childVal) {
    "development" !== 'production' && assertObjectType(key, childVal, vm);
    return extend(res, childVal);
  } else {
    return res;
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});
/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */

strats.watch = function (parentVal, childVal, vm, key) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) {
    parentVal = undefined;
  }

  if (childVal === nativeWatch) {
    childVal = undefined;
  }
  /* istanbul ignore if */


  if (!childVal) {
    return Object.create(parentVal || null);
  }

  if ("development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }

  if (!parentVal) {
    return childVal;
  }

  var ret = {};
  extend(ret, parentVal);

  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];

    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }

    ret[key$1] = parent ? parent.concat(child) : Array.isArray(child) ? child : [child];
  }

  return ret;
};
/**
 * Other object hashes.
 */


strats.props = strats.methods = strats.inject = strats.computed = function (parentVal, childVal, vm, key) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }

  if (!parentVal) {
    return childVal;
  }

  var ret = Object.create(null);
  extend(ret, parentVal);

  if (childVal) {
    extend(ret, childVal);
  }

  return ret;
};

strats.provide = mergeDataOrFn;
/**
 * Default strategy.
 */

var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined ? parentVal : childVal;
};
/**
 * Validate component names
 */


function checkComponents(options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName(name) {
  if (!new RegExp("^[a-zA-Z][\\-\\.0-9_" + unicodeRegExp.source + "]*$").test(name)) {
    warn('Invalid component name: "' + name + '". Component names ' + 'should conform to valid custom element name in html5 specification.');
  }

  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + name);
  }
}
/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */


function normalizeProps(options, vm) {
  var props = options.props;

  if (!props) {
    return;
  }

  var res = {};
  var i, val, name;

  if (Array.isArray(props)) {
    i = props.length;

    while (i--) {
      val = props[i];

      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = {
          type: null
        };
      } else if ("development" !== 'production') {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val) ? val : {
        type: val
      };
    }
  } else if ("development" !== 'production') {
    warn("Invalid value for option \"props\": expected an Array or an Object, " + "but got " + toRawType(props) + ".", vm);
  }

  options.props = res;
}
/**
 * Normalize all injections into Object-based format
 */


function normalizeInject(options, vm) {
  var inject = options.inject;

  if (!inject) {
    return;
  }

  var normalized = options.inject = {};

  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = {
        from: inject[i]
      };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val) ? extend({
        from: key
      }, val) : {
        from: val
      };
    }
  } else if ("development" !== 'production') {
    warn("Invalid value for option \"inject\": expected an Array or an Object, " + "but got " + toRawType(inject) + ".", vm);
  }
}
/**
 * Normalize raw function directives into object format.
 */


function normalizeDirectives(options) {
  var dirs = options.directives;

  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];

      if (typeof def$$1 === 'function') {
        dirs[key] = {
          bind: def$$1,
          update: def$$1
        };
      }
    }
  }
}

function assertObjectType(name, value, vm) {
  if (!isPlainObject(value)) {
    warn("Invalid value for option \"" + name + "\": expected an Object, " + "but got " + toRawType(value) + ".", vm);
  }
}
/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */


function mergeOptions(parent, child, vm) {
  if ("development" !== 'production') {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child); // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.

  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }

    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;

  for (key in parent) {
    mergeField(key);
  }

  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }

  function mergeField(key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }

  return options;
}
/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */


function resolveAsset(options, type, id, warnMissing) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return;
  }

  var assets = options[type]; // check local registration variations first

  if (hasOwn(assets, id)) {
    return assets[id];
  }

  var camelizedId = camelize(id);

  if (hasOwn(assets, camelizedId)) {
    return assets[camelizedId];
  }

  var PascalCaseId = capitalize(camelizedId);

  if (hasOwn(assets, PascalCaseId)) {
    return assets[PascalCaseId];
  } // fallback to prototype chain


  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];

  if ("development" !== 'production' && warnMissing && !res) {
    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);
  }

  return res;
}
/*  */


function validateProp(key, propOptions, propsData, vm) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key]; // boolean casting

  var booleanIndex = getTypeIndex(Boolean, prop.type);

  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);

      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  } // check default value


  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key); // since the default value is a fresh copy,
    // make sure to observe it.

    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }

  if ("development" !== 'production' && // skip validation for weex recycle-list child component props
  !false) {
    assertProp(prop, key, value, vm, absent);
  }

  return value;
}
/**
 * Get the default value of a prop.
 */


function getPropDefaultValue(vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined;
  }

  var def = prop.default; // warn against non-factory defaults for Object & Array

  if ("development" !== 'production' && isObject(def)) {
    warn('Invalid default value for prop "' + key + '": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);
  } // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger


  if (vm && vm.$options.propsData && vm.$options.propsData[key] === undefined && vm._props[key] !== undefined) {
    return vm._props[key];
  } // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context


  return typeof def === 'function' && getType(prop.type) !== 'Function' ? def.call(vm) : def;
}
/**
 * Assert whether a prop is valid.
 */


function assertProp(prop, name, value, vm, absent) {
  if (prop.required && absent) {
    warn('Missing required prop: "' + name + '"', vm);
    return;
  }

  if (value == null && !prop.required) {
    return;
  }

  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];

  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }

    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(getInvalidTypeMessage(name, value, expectedTypes), vm);
    return;
  }

  var validator = prop.validator;

  if (validator) {
    if (!validator(value)) {
      warn('Invalid prop: custom validator check failed for prop "' + name + '".', vm);
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType(value, type) {
  var valid;
  var expectedType = getType(type);

  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase(); // for primitive wrapper objects

    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }

  return {
    valid: valid,
    expectedType: expectedType
  };
}
/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */


function getType(fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : '';
}

function isSameType(a, b) {
  return getType(a) === getType(b);
}

function getTypeIndex(type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1;
  }

  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i;
    }
  }

  return -1;
}

function getInvalidTypeMessage(name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." + " Expected " + expectedTypes.map(capitalize).join(', ');
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType); // check if we need to specify expected value

  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }

  message += ", got " + receivedType + " "; // check if we need to specify received value

  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }

  return message;
}

function styleValue(value, type) {
  if (type === 'String') {
    return "\"" + value + "\"";
  } else if (type === 'Number') {
    return "" + Number(value);
  } else {
    return "" + value;
  }
}

function isExplicable(value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) {
    return value.toLowerCase() === elem;
  });
}

function isBoolean() {
  var args = [],
      len = arguments.length;

  while (len--) args[len] = arguments[len];

  return args.some(function (elem) {
    return elem.toLowerCase() === 'boolean';
  });
}
/*  */


function handleError(err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();

  try {
    if (vm) {
      var cur = vm;

      while (cur = cur.$parent) {
        var hooks = cur.$options.errorCaptured;

        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;

              if (capture) {
                return;
              }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }

    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling(handler, context, args, vm, info) {
  var res;

  try {
    res = args ? handler.apply(context, args) : handler.call(context);

    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) {
        return handleError(e, vm, info + " (Promise/async)");
      }); // issue #9511
      // avoid catch triggering multiple times when nested calls

      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }

  return res;
}

function globalHandleError(err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info);
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }

  logError(err, vm, info);
}

function logError(err, vm, info) {
  if ("development" !== 'production') {
    warn("Error in " + info + ": \"" + err.toString() + "\"", vm);
  }
  /* istanbul ignore else */


  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err;
  }
}
/*  */


var isUsingMicroTask = false;
var callbacks = [];
var pending = false;

function flushCallbacks() {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;

  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
} // Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).


var timerFunc; // The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:

/* istanbul ignore next, $flow-disable-line */

if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();

  timerFunc = function () {
    p.then(flushCallbacks); // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.

    if (isIOS) {
      setTimeout(noop);
    }
  };

  isUsingMicroTask = true;
} else if (!isIE && typeof MutationObserver !== 'undefined' && (isNative(MutationObserver) || // PhantomJS and iOS 7.x
MutationObserver.toString() === '[object MutationObserverConstructor]')) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });

  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };

  isUsingMicroTask = true;
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Techinically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick(cb, ctx) {
  var _resolve;

  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });

  if (!pending) {
    pending = true;
    timerFunc();
  } // $flow-disable-line


  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    });
  }
}
/*  */

/* not type checking this file because flow doesn't play well with Proxy */


var initProxy;

if ("development" !== 'production') {
  var allowedGlobals = makeMap('Infinity,undefined,NaN,isFinite,isNaN,' + 'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' + 'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' + 'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn("Property or method \"" + key + "\" is not defined on the instance but " + 'referenced during render. Make sure that this property is reactive, ' + 'either in the data option, or for class-based components, by ' + 'initializing the property. ' + 'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.', target);
  };

  var warnReservedPrefix = function (target, key) {
    warn("Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " + 'properties starting with "$" or "_" are not proxied in the Vue instance to ' + 'prevent conflicts with Vue internals' + 'See: https://vuejs.org/v2/api/#data', target);
  };

  var hasProxy = typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set(target, key, value) {
        if (isBuiltInModifier(key)) {
          warn("Avoid overwriting built-in modifier in config.keyCodes: ." + key);
          return false;
        } else {
          target[key] = value;
          return true;
        }
      }
    });
  }

  var hasHandler = {
    has: function has(target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) || typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data);

      if (!has && !isAllowed) {
        if (key in target.$data) {
          warnReservedPrefix(target, key);
        } else {
          warnNonPresent(target, key);
        }
      }

      return has || !isAllowed;
    }
  };
  var getHandler = {
    get: function get(target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) {
          warnReservedPrefix(target, key);
        } else {
          warnNonPresent(target, key);
        }
      }

      return target[key];
    }
  };

  initProxy = function initProxy(vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped ? getHandler : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}
/*  */


var seenObjects = new _Set();
/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */

function traverse(val) {
  _traverse(val, seenObjects);

  seenObjects.clear();
}

function _traverse(val, seen) {
  var i, keys;
  var isA = Array.isArray(val);

  if (!isA && !isObject(val) || Object.isFrozen(val) || val instanceof VNode) {
    return;
  }

  if (val.__ob__) {
    var depId = val.__ob__.dep.id;

    if (seen.has(depId)) {
      return;
    }

    seen.add(depId);
  }

  if (isA) {
    i = val.length;

    while (i--) {
      _traverse(val[i], seen);
    }
  } else {
    keys = Object.keys(val);
    i = keys.length;

    while (i--) {
      _traverse(val[keys[i]], seen);
    }
  }
}

var mark;
var measure;

if ("development" !== 'production') {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */

  if (perf && perf.mark && perf.measure && perf.clearMarks && perf.clearMeasures) {
    mark = function (tag) {
      return perf.mark(tag);
    };

    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag); // perf.clearMeasures(name)
    };
  }
}
/*  */


var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first

  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  };
});

function createFnInvoker(fns, vm) {
  function invoker() {
    var arguments$1 = arguments;
    var fns = invoker.fns;

    if (Array.isArray(fns)) {
      var cloned = fns.slice();

      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler");
    }
  }

  invoker.fns = fns;
  return invoker;
}

function updateListeners(on, oldOn, add, remove$$1, createOnceHandler, vm) {
  var name, def$$1, cur, old, event;

  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);

    if (isUndef(cur)) {
      "development" !== 'production' && warn("Invalid handler for event \"" + event.name + "\": got " + String(cur), vm);
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }

      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }

      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }

  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}
/*  */


function mergeVNodeHook(def, hookKey, hook) {
  if (def instanceof VNode) {
    def = def.data.hook || (def.data.hook = {});
  }

  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook() {
    hook.apply(this, arguments); // important: remove merged hook to ensure it's called only once
    // and prevent memory leak

    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}
/*  */


function extractPropsFromVNodeData(data, Ctor, tag) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;

  if (isUndef(propOptions)) {
    return;
  }

  var res = {};
  var attrs = data.attrs;
  var props = data.props;

  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);

      if ("development" !== 'production') {
        var keyInLowerCase = key.toLowerCase();

        if (key !== keyInLowerCase && attrs && hasOwn(attrs, keyInLowerCase)) {
          tip("Prop \"" + keyInLowerCase + "\" is passed to component " + formatComponentName(tag || Ctor) + ", but the declared prop name is" + " \"" + key + "\". " + "Note that HTML attributes are case-insensitive and camelCased " + "props need to use their kebab-case equivalents when using in-DOM " + "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\".");
        }
      }

      checkProp(res, props, key, altKey, true) || checkProp(res, attrs, key, altKey, false);
    }
  }

  return res;
}

function checkProp(res, hash, key, altKey, preserve) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];

      if (!preserve) {
        delete hash[key];
      }

      return true;
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];

      if (!preserve) {
        delete hash[altKey];
      }

      return true;
    }
  }

  return false;
}
/*  */
// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:
// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.


function simpleNormalizeChildren(children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children);
    }
  }

  return children;
} // 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.


function normalizeChildren(children) {
  return isPrimitive(children) ? [createTextVNode(children)] : Array.isArray(children) ? normalizeArrayChildren(children) : undefined;
}

function isTextNode(node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment);
}

function normalizeArrayChildren(children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;

  for (i = 0; i < children.length; i++) {
    c = children[i];

    if (isUndef(c) || typeof c === 'boolean') {
      continue;
    }

    lastIndex = res.length - 1;
    last = res[lastIndex]; //  nested

    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, (nestedIndex || '') + "_" + i); // merge adjacent text nodes

        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + c[0].text);
          c.shift();
        }

        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) && isDef(c.tag) && isUndef(c.key) && isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }

        res.push(c);
      }
    }
  }

  return res;
}
/*  */


function initProvide(vm) {
  var provide = vm.$options.provide;

  if (provide) {
    vm._provided = typeof provide === 'function' ? provide.call(vm) : provide;
  }
}

function initInjections(vm) {
  var result = resolveInject(vm.$options.inject, vm);

  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if ("development" !== 'production') {
        defineReactive$$1(vm, key, result[key], function () {
          warn("Avoid mutating an injected value directly since the changes will be " + "overwritten whenever the provided component re-renders. " + "injection being mutated: \"" + key + "\"", vm);
        });
      } else {
        defineReactive$$1(vm, key, result[key]);
      }
    });
    toggleObserving(true);
  }
}

function resolveInject(inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol ? Reflect.ownKeys(inject) : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i]; // #6574 in case the inject object is observed...

      if (key === '__ob__') {
        continue;
      }

      var provideKey = inject[key].from;
      var source = vm;

      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break;
        }

        source = source.$parent;
      }

      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function' ? provideDefault.call(vm) : provideDefault;
        } else if ("development" !== 'production') {
          warn("Injection \"" + key + "\" not found", vm);
        }
      }
    }

    return result;
  }
}
/*  */

/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */


function resolveSlots(children, context) {
  if (!children || !children.length) {
    return {};
  }

  var slots = {};

  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data; // remove slot attribute if the node is resolved as a Vue slot node

    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    } // named slots should only be respected if the vnode was rendered in the
    // same context.


    if ((child.context === context || child.fnContext === context) && data && data.slot != null) {
      var name = data.slot;
      var slot = slots[name] || (slots[name] = []);

      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      (slots.default || (slots.default = [])).push(child);
    }
  } // ignore slots that contains only whitespace


  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }

  return slots;
}

function isWhitespace(node) {
  return node.isComment && !node.asyncFactory || node.text === ' ';
}
/*  */


function normalizeScopedSlots(slots, normalSlots, prevSlots) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;

  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized;
  } else if (isStable && prevSlots && prevSlots !== emptyObject && key === prevSlots.$key && !hasNormalSlots && !prevSlots.$hasNormal) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots;
  } else {
    res = {};

    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  } // expose normal slots on scopedSlots


  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  } // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error


  if (slots && Object.isExtensible(slots)) {
    slots._normalized = res;
  }

  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res;
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res) ? [res] // single vnode
    : normalizeChildren(res);
    return res && (res.length === 0 || res.length === 1 && res[0].isComment // #9658
    ) ? undefined : res;
  }; // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.


  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }

  return normalized;
}

function proxyNormalSlot(slots, key) {
  return function () {
    return slots[key];
  };
}
/*  */

/**
 * Runtime helper for rendering v-for lists.
 */


function renderList(val, render) {
  var ret, i, l, keys, key;

  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);

    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);

    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();

      while (!result.done) {
        ret.push(render(result.value, ret.length));
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);

      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i);
      }
    }
  }

  if (!isDef(ret)) {
    ret = [];
  }

  ret._isVList = true;
  return ret;
}
/*  */

/**
 * Runtime helper for rendering <slot>
 */


function renderSlot(name, fallback, props, bindObject) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;

  if (scopedSlotFn) {
    // scoped slot
    props = props || {};

    if (bindObject) {
      if ("development" !== 'production' && !isObject(bindObject)) {
        warn('slot v-bind without argument expects an Object', this);
      }

      props = extend(extend({}, bindObject), props);
    }

    nodes = scopedSlotFn(props) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;

  if (target) {
    return this.$createElement('template', {
      slot: target
    }, nodes);
  } else {
    return nodes;
  }
}
/*  */

/**
 * Runtime helper for resolving filters
 */


function resolveFilter(id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity;
}
/*  */


function isKeyNotMatch(expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1;
  } else {
    return expect !== actual;
  }
}
/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */


function checkKeyCodes(eventKeyCode, key, builtInKeyCode, eventKeyName, builtInKeyName) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;

  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName);
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode);
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key;
  }
}
/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */


function bindObjectProps(data, tag, value, asProp, isSync) {
  if (value) {
    if (!isObject(value)) {
      "development" !== 'production' && warn('v-bind without argument expects an Object or Array value', this);
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }

      var hash;

      var loop = function (key) {
        if (key === 'class' || key === 'style' || isReservedAttribute(key)) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key) ? data.domProps || (data.domProps = {}) : data.attrs || (data.attrs = {});
        }

        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);

        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});

            on["update:" + key] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop(key);
    }
  }

  return data;
}
/*  */

/**
 * Runtime helper for rendering static trees.
 */


function renderStatic(index, isInFor) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index]; // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.

  if (tree && !isInFor) {
    return tree;
  } // otherwise, render a fresh tree.


  tree = cached[index] = this.$options.staticRenderFns[index].call(this._renderProxy, null, this // for render fns generated for functional component templates
  );
  markStatic(tree, "__static__" + index, false);
  return tree;
}
/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */


function markOnce(tree, index, key) {
  markStatic(tree, "__once__" + index + (key ? "_" + key : ""), true);
  return tree;
}

function markStatic(tree, key, isOnce) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], key + "_" + i, isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode(node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}
/*  */


function bindObjectListeners(data, value) {
  if (value) {
    if (!isPlainObject(value)) {
      "development" !== 'production' && warn('v-on without argument expects an Object value', this);
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};

      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }

  return data;
}
/*  */


function resolveScopedSlots(fns, // see flow/vnode
res, // the following are added in 2.6
hasDynamicKeys, contentHashKey) {
  res = res || {
    $stable: !hasDynamicKeys
  };

  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];

    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }

      res[slot.key] = slot.fn;
    }
  }

  if (contentHashKey) {
    res.$key = contentHashKey;
  }

  return res;
}
/*  */


function bindDynamicKeys(baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];

    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ("development" !== 'production' && key !== '' && key !== null) {
      // null is a speical value for explicitly removing a binding
      warn("Invalid value for dynamic directive argument (expected string or null): " + key, this);
    }
  }

  return baseObj;
} // helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.


function prependModifier(value, symbol) {
  return typeof value === 'string' ? symbol + value : value;
}
/*  */


function installRenderHelpers(target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}
/*  */


function FunctionalRenderContext(data, props, children, parent, Ctor) {
  var this$1 = this;
  var options = Ctor.options; // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check

  var contextVm;

  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent); // $flow-disable-line

    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent; // $flow-disable-line

    parent = parent._original;
  }

  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;
  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);

  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(data.scopedSlots, this$1.$slots = resolveSlots(children, parent));
    }

    return this$1.$slots;
  };

  Object.defineProperty(this, 'scopedSlots', {
    enumerable: true,
    get: function get() {
      return normalizeScopedSlots(data.scopedSlots, this.slots());
    }
  }); // support for compiled functional template

  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options; // pre-resolve slots for renderSlot()

    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);

      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }

      return vnode;
    };
  } else {
    this._c = function (a, b, c, d) {
      return createElement(contextVm, a, b, c, d, needNormalization);
    };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent(Ctor, propsData, data, contextVm, children) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;

  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) {
      mergeProps(props, data.attrs);
    }

    if (isDef(data.props)) {
      mergeProps(props, data.props);
    }
  }

  var renderContext = new FunctionalRenderContext(data, props, children, contextVm, Ctor);
  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext);
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);

    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }

    return res;
  }
}

function cloneAndMarkFunctionalResult(vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;

  if ("development" !== 'production') {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }

  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }

  return clone;
}

function mergeProps(to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}
/*  */

/*  */

/*  */

/*  */
// inline hooks to be invoked on component VNodes during patch


var componentVNodeHooks = {
  init: function init(vnode, hydrating) {
    if (vnode.componentInstance && !vnode.componentInstance._isDestroyed && vnode.data.keepAlive) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow

      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(vnode, activeInstance);
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },
  prepatch: function prepatch(oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(child, options.propsData, // updated props
    options.listeners, // updated listeners
    vnode, // new parent vnode
    options.children // new children
    );
  },
  insert: function insert(vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;

    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }

    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true
        /* direct */
        );
      }
    }
  },
  destroy: function destroy(vnode) {
    var componentInstance = vnode.componentInstance;

    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true
        /* direct */
        );
      }
    }
  }
};
var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent(Ctor, data, context, children, tag) {
  if (isUndef(Ctor)) {
    return;
  }

  var baseCtor = context.$options._base; // plain options object: turn it into a constructor

  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  } // if at this stage it's not a constructor or an async component factory,
  // reject.


  if (typeof Ctor !== 'function') {
    if ("development" !== 'production') {
      warn("Invalid Component definition: " + String(Ctor), context);
    }

    return;
  } // async component


  var asyncFactory;

  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);

    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(asyncFactory, data, context, children, tag);
    }
  }

  data = data || {}; // resolve constructor options in case global mixins are applied after
  // component constructor creation

  resolveConstructorOptions(Ctor); // transform component v-model data into props & events

  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  } // extract props


  var propsData = extractPropsFromVNodeData(data, Ctor, tag); // functional component

  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children);
  } // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners


  var listeners = data.on; // replace with listeners with .native modifier
  // so it gets processed during parent component patch.

  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot
    // work around flow
    var slot = data.slot;
    data = {};

    if (slot) {
      data.slot = slot;
    }
  } // install component management hooks onto the placeholder node


  installComponentHooks(data); // return a placeholder vnode

  var name = Ctor.options.name || tag;
  var vnode = new VNode("vue-component-" + Ctor.cid + (name ? "-" + name : ''), data, undefined, undefined, undefined, context, {
    Ctor: Ctor,
    propsData: propsData,
    listeners: listeners,
    tag: tag,
    children: children
  }, asyncFactory);
  return vnode;
}

function createComponentInstanceForVnode(vnode, // we know it's MountedComponentVNode but flow doesn't
parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  }; // check inline-template render functions

  var inlineTemplate = vnode.data.inlineTemplate;

  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }

  return new vnode.componentOptions.Ctor(options);
}

function installComponentHooks(data) {
  var hooks = data.hook || (data.hook = {});

  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];

    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1(f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };

  merged._merged = true;
  return merged;
} // transform component v-model info (value and callback) into
// prop and event handler respectively.


function transformModel(options, data) {
  var prop = options.model && options.model.prop || 'value';
  var event = options.model && options.model.event || 'input';
  (data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;

  if (isDef(existing)) {
    if (Array.isArray(existing) ? existing.indexOf(callback) === -1 : existing !== callback) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}
/*  */


var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2; // wrapper function for providing a more flexible interface
// without getting yelled at by flow

function createElement(context, tag, data, children, normalizationType, alwaysNormalize) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }

  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }

  return _createElement(context, tag, data, children, normalizationType);
}

function _createElement(context, tag, data, children, normalizationType) {
  if (isDef(data) && isDef(data.__ob__)) {
    "development" !== 'production' && warn("Avoid using observed data object as vnode data: " + JSON.stringify(data) + "\n" + 'Always create fresh vnode data objects in each render!', context);
    return createEmptyVNode();
  } // object syntax in v-bind


  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }

  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode();
  } // warn against non-primitive key


  if ("development" !== 'production' && isDef(data) && isDef(data.key) && !isPrimitive(data.key)) {
    {
      warn('Avoid using non-primitive value as key, ' + 'use string/number value instead.', context);
    }
  } // support single function children as default scoped slot


  if (Array.isArray(children) && typeof children[0] === 'function') {
    data = data || {};
    data.scopedSlots = {
      default: children[0]
    };
    children.length = 0;
  }

  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }

  var vnode, ns;

  if (typeof tag === 'string') {
    var Ctor;
    ns = context.$vnode && context.$vnode.ns || config.getTagNamespace(tag);

    if (config.isReservedTag(tag)) {
      // platform built-in elements
      vnode = new VNode(config.parsePlatformTagName(tag), data, children, undefined, undefined, context);
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(tag, data, children, undefined, undefined, context);
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }

  if (Array.isArray(vnode)) {
    return vnode;
  } else if (isDef(vnode)) {
    if (isDef(ns)) {
      applyNS(vnode, ns);
    }

    if (isDef(data)) {
      registerDeepBindings(data);
    }

    return vnode;
  } else {
    return createEmptyVNode();
  }
}

function applyNS(vnode, ns, force) {
  vnode.ns = ns;

  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }

  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];

      if (isDef(child.tag) && (isUndef(child.ns) || isTrue(force) && child.tag !== 'svg')) {
        applyNS(child, ns, force);
      }
    }
  }
} // ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes


function registerDeepBindings(data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }

  if (isObject(data.class)) {
    traverse(data.class);
  }
}
/*  */


function initRender(vm) {
  vm._vnode = null; // the root of the child tree

  vm._staticTrees = null; // v-once cached trees

  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree

  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject; // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates

  vm._c = function (a, b, c, d) {
    return createElement(vm, a, b, c, d, false);
  }; // normalization is always applied for the public version, used in
  // user-written render functions.


  vm.$createElement = function (a, b, c, d) {
    return createElement(vm, a, b, c, d, true);
  }; // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated


  var parentData = parentVnode && parentVnode.data;
  /* istanbul ignore else */

  if ("development" !== 'production') {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);
  }
}

var currentRenderingInstance = null;

function renderMixin(Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this);
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(_parentVnode.data.scopedSlots, vm.$slots, vm.$scopedSlots);
    } // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.


    vm.$vnode = _parentVnode; // render self

    var vnode;

    try {
      // There's no need to maintain a stack becaues all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render"); // return error render result,
      // or previous vnode to prevent render error causing blank component

      /* istanbul ignore else */

      if ("development" !== 'production' && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    } // if the returned array contains only a single node, allow it


    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    } // return empty vnode in case the render function errored out


    if (!(vnode instanceof VNode)) {
      if ("development" !== 'production' && Array.isArray(vnode)) {
        warn('Multiple root nodes returned from render function. Render function ' + 'should return a single root node.', vm);
      }

      vnode = createEmptyVNode();
    } // set parent


    vnode.parent = _parentVnode;
    return vnode;
  };
}
/*  */


function ensureCtor(comp, base) {
  if (comp.__esModule || hasSymbol && comp[Symbol.toStringTag] === 'Module') {
    comp = comp.default;
  }

  return isObject(comp) ? base.extend(comp) : comp;
}

function createAsyncPlaceholder(factory, data, context, children, tag) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = {
    data: data,
    context: context,
    children: children,
    tag: tag
  };
  return node;
}

function resolveAsyncComponent(factory, baseCtor) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp;
  }

  if (isDef(factory.resolved)) {
    return factory.resolved;
  }

  var owner = currentRenderingInstance;

  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp;
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null;
    owner.$on('hook:destroyed', function () {
      return remove(owners, owner);
    });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        owners[i].$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;

        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }

        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor); // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)

      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });
    var reject = once(function (reason) {
      "development" !== 'production' && warn("Failed to resolve async component: " + String(factory) + (reason ? "\nReason: " + reason : ''));

      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });
    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);

          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;

              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;

            if (isUndef(factory.resolved)) {
              reject("development" !== 'production' ? "timeout (" + res.timeout + "ms)" : null);
            }
          }, res.timeout);
        }
      }
    }

    sync = false; // return in case resolved synchronously

    return factory.loading ? factory.loadingComp : factory.resolved;
  }
}
/*  */


function isAsyncPlaceholder(node) {
  return node.isComment && node.asyncFactory;
}
/*  */


function getFirstComponentChild(children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];

      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c;
      }
    }
  }
}
/*  */

/*  */


function initEvents(vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false; // init parent attached events

  var listeners = vm.$options._parentListeners;

  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add(event, fn) {
  target.$on(event, fn);
}

function remove$1(event, fn) {
  target.$off(event, fn);
}

function createOnceHandler(event, fn) {
  var _target = target;
  return function onceHandler() {
    var res = fn.apply(null, arguments);

    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  };
}

function updateComponentListeners(vm, listeners, oldListeners) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin(Vue) {
  var hookRE = /^hook:/;

  Vue.prototype.$on = function (event, fn) {
    var vm = this;

    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn); // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup

      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }

    return vm;
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;

    function on() {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }

    on.fn = fn;
    vm.$on(event, on);
    return vm;
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this; // all

    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm;
    } // array of events


    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }

      return vm;
    } // specific event


    var cbs = vm._events[event];

    if (!cbs) {
      return vm;
    }

    if (!fn) {
      vm._events[event] = null;
      return vm;
    } // specific handler


    var cb;
    var i = cbs.length;

    while (i--) {
      cb = cbs[i];

      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break;
      }
    }

    return vm;
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;

    if ("development" !== 'production') {
      var lowerCaseEvent = event.toLowerCase();

      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip("Event \"" + lowerCaseEvent + "\" is emitted in component " + formatComponentName(vm) + " but the handler is registered for \"" + event + "\". " + "Note that HTML attributes are case-insensitive and you cannot use " + "v-on to listen to camelCase events when using in-DOM templates. " + "You should probably use \"" + hyphenate(event) + "\" instead of \"" + event + "\".");
      }
    }

    var cbs = vm._events[event];

    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";

      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }

    return vm;
  };
}
/*  */


var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  };
}

function initLifecycle(vm) {
  var options = vm.$options; // locate first non-abstract parent

  var parent = options.parent;

  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }

    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;
  vm.$children = [];
  vm.$refs = {};
  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin(Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode; // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.

    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false
      /* removeOnly */
      );
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }

    restoreActiveInstance(); // update __vue__ reference

    if (prevEl) {
      prevEl.__vue__ = null;
    }

    if (vm.$el) {
      vm.$el.__vue__ = vm;
    } // if parent is an HOC, update its $el as well


    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    } // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.

  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;

    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;

    if (vm._isBeingDestroyed) {
      return;
    }

    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true; // remove self from parent

    var parent = vm.$parent;

    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    } // teardown watchers


    if (vm._watcher) {
      vm._watcher.teardown();
    }

    var i = vm._watchers.length;

    while (i--) {
      vm._watchers[i].teardown();
    } // remove reference from data ob
    // frozen object may not have observer.


    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    } // call the last hook...


    vm._isDestroyed = true; // invoke destroy hooks on current rendered tree

    vm.__patch__(vm._vnode, null); // fire destroyed hook


    callHook(vm, 'destroyed'); // turn off all instance listeners.

    vm.$off(); // remove __vue__ reference

    if (vm.$el) {
      vm.$el.__vue__ = null;
    } // release circular reference (#6759)


    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function mountComponent(vm, el, hydrating) {
  vm.$el = el;

  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;

    if ("development" !== 'production') {
      /* istanbul ignore if */
      if (vm.$options.template && vm.$options.template.charAt(0) !== '#' || vm.$options.el || el) {
        warn('You are using the runtime-only build of Vue where the template ' + 'compiler is not available. Either pre-compile the templates into ' + 'render functions, or use the compiler-included build.', vm);
      } else {
        warn('Failed to mount component: template or render function not defined.', vm);
      }
    }
  }

  callHook(vm, 'beforeMount');
  var updateComponent;
  /* istanbul ignore if */

  if ("development" !== 'production' && config.performance && mark) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;
      mark(startTag);

      var vnode = vm._render();

      mark(endTag);
      measure("vue " + name + " render", startTag, endTag);
      mark(startTag);

      vm._update(vnode, hydrating);

      mark(endTag);
      measure("vue " + name + " patch", startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  } // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined


  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true
  /* isRenderWatcher */
  );
  hydrating = false; // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook

  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }

  return vm;
}

function updateChildComponent(vm, propsData, listeners, parentVnode, renderChildren) {
  if ("development" !== 'production') {
    isUpdatingChildComponent = true;
  } // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.
  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.


  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(newScopedSlots && !newScopedSlots.$stable || oldScopedSlots !== emptyObject && !oldScopedSlots.$stable || newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key); // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.

  var needsForceUpdate = !!(renderChildren || // has new static slots
  vm.$options._renderChildren || // has old static slots
  hasDynamicScopedSlot);
  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) {
    // update child tree's parent
    vm._vnode.parent = parentVnode;
  }

  vm.$options._renderChildren = renderChildren; // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render

  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject; // update props

  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];

    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?

      props[key] = validateProp(key, propOptions, propsData, vm);
    }

    toggleObserving(true); // keep a copy of raw propsData

    vm.$options.propsData = propsData;
  } // update listeners


  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners); // resolve slots + force update if has children

  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if ("development" !== 'production') {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree(vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) {
      return true;
    }
  }

  return false;
}

function activateChildComponent(vm, direct) {
  if (direct) {
    vm._directInactive = false;

    if (isInInactiveTree(vm)) {
      return;
    }
  } else if (vm._directInactive) {
    return;
  }

  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;

    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }

    callHook(vm, 'activated');
  }
}

function deactivateChildComponent(vm, direct) {
  if (direct) {
    vm._directInactive = true;

    if (isInInactiveTree(vm)) {
      return;
    }
  }

  if (!vm._inactive) {
    vm._inactive = true;

    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }

    callHook(vm, 'deactivated');
  }
}

function callHook(vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";

  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }

  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }

  popTarget();
}
/*  */


var MAX_UPDATE_COUNT = 100;
var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;
/**
 * Reset the scheduler's state.
 */

function resetSchedulerState() {
  index = queue.length = activatedChildren.length = 0;
  has = {};

  if ("development" !== 'production') {
    circular = {};
  }

  waiting = flushing = false;
} // Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.


var currentFlushTimestamp = 0; // Async edge case fix requires storing an event listener's attach timestamp.

var getNow = Date.now; // Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)

if (inBrowser && !isIE) {
  var performance = window.performance;

  if (performance && typeof performance.now === 'function' && getNow() > document.createEvent('Event').timeStamp) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () {
      return performance.now();
    };
  }
}
/**
 * Flush both queues and run the watchers.
 */


function flushSchedulerQueue() {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id; // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.

  queue.sort(function (a, b) {
    return a.id - b.id;
  }); // do not cache length because more watchers might be pushed
  // as we run existing watchers

  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];

    if (watcher.before) {
      watcher.before();
    }

    id = watcher.id;
    has[id] = null;
    watcher.run(); // in dev build, check and stop circular updates.

    if ("development" !== 'production' && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;

      if (circular[id] > MAX_UPDATE_COUNT) {
        warn('You may have an infinite update loop ' + (watcher.user ? "in watcher with expression \"" + watcher.expression + "\"" : "in a component render function."), watcher.vm);
        break;
      }
    }
  } // keep copies of post queues before resetting state


  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();
  resetSchedulerState(); // call component updated and activated hooks

  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue); // devtool hook

  /* istanbul ignore if */

  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks(queue) {
  var i = queue.length;

  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;

    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}
/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */


function queueActivatedComponent(vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks(queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true
    /* true */
    );
  }
}
/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */


function queueWatcher(watcher) {
  var id = watcher.id;

  if (has[id] == null) {
    has[id] = true;

    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;

      while (i > index && queue[i].id > watcher.id) {
        i--;
      }

      queue.splice(i + 1, 0, watcher);
    } // queue the flush


    if (!waiting) {
      waiting = true;

      if ("development" !== 'production' && !config.async) {
        flushSchedulerQueue();
        return;
      }

      nextTick(flushSchedulerQueue);
    }
  }
}
/*  */


var uid$2 = 0;
/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */

var Watcher = function Watcher(vm, expOrFn, cb, options, isRenderWatcher) {
  this.vm = vm;

  if (isRenderWatcher) {
    vm._watcher = this;
  }

  vm._watchers.push(this); // options


  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }

  this.cb = cb;
  this.id = ++uid$2; // uid for batching

  this.active = true;
  this.dirty = this.lazy; // for lazy watchers

  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression = "development" !== 'production' ? expOrFn.toString() : ''; // parse expression for getter

  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);

    if (!this.getter) {
      this.getter = noop;
      "development" !== 'production' && warn("Failed watching path: \"" + expOrFn + "\" " + 'Watcher only accepts simple dot-delimited paths. ' + 'For full control, use a function instead.', vm);
    }
  }

  this.value = this.lazy ? undefined : this.get();
};
/**
 * Evaluate the getter, and re-collect dependencies.
 */


Watcher.prototype.get = function get() {
  pushTarget(this);
  var value;
  var vm = this.vm;

  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, "getter for watcher \"" + this.expression + "\"");
    } else {
      throw e;
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }

    popTarget();
    this.cleanupDeps();
  }

  return value;
};
/**
 * Add a dependency to this directive.
 */


Watcher.prototype.addDep = function addDep(dep) {
  var id = dep.id;

  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);

    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};
/**
 * Clean up for dependency collection.
 */


Watcher.prototype.cleanupDeps = function cleanupDeps() {
  var i = this.deps.length;

  while (i--) {
    var dep = this.deps[i];

    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }

  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};
/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */


Watcher.prototype.update = function update() {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};
/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */


Watcher.prototype.run = function run() {
  if (this.active) {
    var value = this.get();

    if (value !== this.value || // Deep watchers and watchers on Object/Arrays should fire even
    // when the value is the same, because the value may
    // have mutated.
    isObject(value) || this.deep) {
      // set new value
      var oldValue = this.value;
      this.value = value;

      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, "callback for watcher \"" + this.expression + "\"");
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};
/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */


Watcher.prototype.evaluate = function evaluate() {
  this.value = this.get();
  this.dirty = false;
};
/**
 * Depend on all deps collected by this watcher.
 */


Watcher.prototype.depend = function depend() {
  var i = this.deps.length;

  while (i--) {
    this.deps[i].depend();
  }
};
/**
 * Remove self from all dependencies' subscriber list.
 */


Watcher.prototype.teardown = function teardown() {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }

    var i = this.deps.length;

    while (i--) {
      this.deps[i].removeSub(this);
    }

    this.active = false;
  }
};
/*  */


var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy(target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter() {
    return this[sourceKey][key];
  };

  sharedPropertyDefinition.set = function proxySetter(val) {
    this[sourceKey][key] = val;
  };

  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState(vm) {
  vm._watchers = [];
  var opts = vm.$options;

  if (opts.props) {
    initProps(vm, opts.props);
  }

  if (opts.methods) {
    initMethods(vm, opts.methods);
  }

  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true
    /* asRootData */
    );
  }

  if (opts.computed) {
    initComputed(vm, opts.computed);
  }

  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps(vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {}; // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.

  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent; // root instance props should be converted

  if (!isRoot) {
    toggleObserving(false);
  }

  var loop = function (key) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */

    if ("development" !== 'production') {
      var hyphenatedKey = hyphenate(key);

      if (isReservedAttribute(hyphenatedKey) || config.isReservedAttr(hyphenatedKey)) {
        warn("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop.", vm);
      }

      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          warn("Avoid mutating a prop directly since the value will be " + "overwritten whenever the parent component re-renders. " + "Instead, use a data or computed property based on the prop's " + "value. Prop being mutated: \"" + key + "\"", vm);
        }
      });
    } else {
      defineReactive$$1(props, key, value);
    } // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.


    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop(key);

  toggleObserving(true);
}

function initData(vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function' ? getData(data, vm) : data || {};

  if (!isPlainObject(data)) {
    data = {};
    "development" !== 'production' && warn('data functions should return an object:\n' + 'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function', vm);
  } // proxy data on instance


  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;

  while (i--) {
    var key = keys[i];

    if ("development" !== 'production') {
      if (methods && hasOwn(methods, key)) {
        warn("Method \"" + key + "\" has already been defined as a data property.", vm);
      }
    }

    if (props && hasOwn(props, key)) {
      "development" !== 'production' && warn("The data property \"" + key + "\" is already declared as a prop. " + "Use prop default value instead.", vm);
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  } // observe data


  observe(data, true
  /* asRootData */
  );
}

function getData(data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();

  try {
    return data.call(vm, vm);
  } catch (e) {
    handleError(e, vm, "data()");
    return {};
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = {
  lazy: true
};

function initComputed(vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null); // computed properties are just getters during SSR

  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;

    if ("development" !== 'production' && getter == null) {
      warn("Getter is missing for computed property \"" + key + "\".", vm);
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);
    } // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.


    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if ("development" !== 'production') {
      if (key in vm.$data) {
        warn("The computed property \"" + key + "\" is already defined in data.", vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn("The computed property \"" + key + "\" is already defined as a prop.", vm);
      }
    }
  }
}

function defineComputed(target, key, userDef) {
  var shouldCache = !isServerRendering();

  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache ? createComputedGetter(key) : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get ? shouldCache && userDef.cache !== false ? createComputedGetter(key) : createGetterInvoker(userDef.get) : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }

  if ("development" !== 'production' && sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn("Computed property \"" + key + "\" was assigned to but it has no setter.", this);
    };
  }

  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter(key) {
  return function computedGetter() {
    var watcher = this._computedWatchers && this._computedWatchers[key];

    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }

      if (Dep.target) {
        watcher.depend();
      }

      return watcher.value;
    }
  };
}

function createGetterInvoker(fn) {
  return function computedGetter() {
    return fn.call(this, this);
  };
}

function initMethods(vm, methods) {
  var props = vm.$options.props;

  for (var key in methods) {
    if ("development" !== 'production') {
      if (typeof methods[key] !== 'function') {
        warn("Method \"" + key + "\" has type \"" + typeof methods[key] + "\" in the component definition. " + "Did you reference the function correctly?", vm);
      }

      if (props && hasOwn(props, key)) {
        warn("Method \"" + key + "\" has already been defined as a prop.", vm);
      }

      if (key in vm && isReserved(key)) {
        warn("Method \"" + key + "\" conflicts with an existing Vue instance method. " + "Avoid defining component methods that start with _ or $.");
      }
    }

    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch(vm, watch) {
  for (var key in watch) {
    var handler = watch[key];

    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher(vm, expOrFn, handler, options) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }

  if (typeof handler === 'string') {
    handler = vm[handler];
  }

  return vm.$watch(expOrFn, handler, options);
}

function stateMixin(Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};

  dataDef.get = function () {
    return this._data;
  };

  var propsDef = {};

  propsDef.get = function () {
    return this._props;
  };

  if ("development" !== 'production') {
    dataDef.set = function () {
      warn('Avoid replacing instance root $data. ' + 'Use nested data properties instead.', this);
    };

    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }

  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);
  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (expOrFn, cb, options) {
    var vm = this;

    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options);
    }

    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);

    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, "callback for immediate watcher \"" + watcher.expression + "\"");
      }
    }

    return function unwatchFn() {
      watcher.teardown();
    };
  };
}
/*  */


var uid$3 = 0;

function initMixin(Vue) {
  Vue.prototype._init = function (options) {
    var vm = this; // a uid

    vm._uid = uid$3++;
    var startTag, endTag;
    /* istanbul ignore if */

    if ("development" !== 'production' && config.performance && mark) {
      startTag = "vue-perf-start:" + vm._uid;
      endTag = "vue-perf-end:" + vm._uid;
      mark(startTag);
    } // a flag to avoid this being observed


    vm._isVue = true; // merge options

    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(resolveConstructorOptions(vm.constructor), options || {}, vm);
    }
    /* istanbul ignore else */


    if ("development" !== 'production') {
      initProxy(vm);
    } else {
      vm._renderProxy = vm;
    } // expose real self


    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props

    initState(vm);
    initProvide(vm); // resolve provide after data/props

    callHook(vm, 'created');
    /* istanbul ignore if */

    if ("development" !== 'production' && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure("vue " + vm._name + " init", startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent(vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options); // doing this because it's faster than dynamic enumeration.

  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;
  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions(Ctor) {
  var options = Ctor.options;

  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;

    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions; // check if there are any late-modified/attached options (#4976)

      var modifiedOptions = resolveModifiedOptions(Ctor); // update base extend options

      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }

      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);

      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }

  return options;
}

function resolveModifiedOptions(Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;

  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) {
        modified = {};
      }

      modified[key] = latest[key];
    }
  }

  return modified;
}

function Vue(options) {
  if ("development" !== 'production' && !(this instanceof Vue)) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }

  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);
/*  */

function initUse(Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = this._installedPlugins || (this._installedPlugins = []);

    if (installedPlugins.indexOf(plugin) > -1) {
      return this;
    } // additional parameters


    var args = toArray(arguments, 1);
    args.unshift(this);

    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }

    installedPlugins.push(plugin);
    return this;
  };
}
/*  */


function initMixin$1(Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this;
  };
}
/*  */


function initExtend(Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;
  /**
   * Class inheritance
   */

  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});

    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId];
    }

    var name = extendOptions.name || Super.options.name;

    if ("development" !== 'production' && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent(options) {
      this._init(options);
    };

    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(Super.options, extendOptions);
    Sub['super'] = Super; // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.

    if (Sub.options.props) {
      initProps$1(Sub);
    }

    if (Sub.options.computed) {
      initComputed$1(Sub);
    } // allow further extension/mixin/plugin usage


    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use; // create asset registers, so extended classes
    // can have their private assets too.

    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    }); // enable recursive self-lookup

    if (name) {
      Sub.options.components[name] = Sub;
    } // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.


    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options); // cache constructor

    cachedCtors[SuperId] = Sub;
    return Sub;
  };
}

function initProps$1(Comp) {
  var props = Comp.options.props;

  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1(Comp) {
  var computed = Comp.options.computed;

  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}
/*  */


function initAssetRegisters(Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (id, definition) {
      if (!definition) {
        return this.options[type + 's'][id];
      } else {
        /* istanbul ignore if */
        if ("development" !== 'production' && type === 'component') {
          validateComponentName(id);
        }

        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }

        if (type === 'directive' && typeof definition === 'function') {
          definition = {
            bind: definition,
            update: definition
          };
        }

        this.options[type + 's'][id] = definition;
        return definition;
      }
    };
  });
}
/*  */


function getComponentName(opts) {
  return opts && (opts.Ctor.options.name || opts.tag);
}

function matches(pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1;
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1;
  } else if (isRegExp(pattern)) {
    return pattern.test(name);
  }
  /* istanbul ignore next */


  return false;
}

function pruneCache(keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;

  for (var key in cache) {
    var cachedNode = cache[key];

    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);

      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry(cache, key, keys, current) {
  var cached$$1 = cache[key];

  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }

  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];
var KeepAlive = {
  name: 'keep-alive',
  abstract: true,
  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },
  created: function created() {
    this.cache = Object.create(null);
    this.keys = [];
  },
  destroyed: function destroyed() {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },
  mounted: function mounted() {
    var this$1 = this;
    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) {
        return matches(val, name);
      });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) {
        return !matches(val, name);
      });
    });
  },
  render: function render() {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;

    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;

      if ( // not included
      include && (!name || !matches(include, name)) || // excluded
      exclude && name && matches(exclude, name)) {
        return vnode;
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null // same constructor may get registered as different local components
      // so cid alone is not enough (#3269)
      ? componentOptions.Ctor.cid + (componentOptions.tag ? "::" + componentOptions.tag : '') : vnode.key;

      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance; // make current key freshest

        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key); // prune oldest entry

        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }

    return vnode || slot && slot[0];
  }
};
var builtInComponents = {
  KeepAlive: KeepAlive
};
/*  */

function initGlobalAPI(Vue) {
  // config
  var configDef = {};

  configDef.get = function () {
    return config;
  };

  if ("development" !== 'production') {
    configDef.set = function () {
      warn('Do not replace the Vue.config object, set individual fields instead.');
    };
  }

  Object.defineProperty(Vue, 'config', configDef); // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.

  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };
  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick; // 2.6 explicit observable API

  Vue.observable = function (obj) {
    observe(obj);
    return obj;
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  }); // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.

  Vue.options._base = Vue;
  extend(Vue.options.components, builtInComponents);
  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);
Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});
Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get() {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext;
  }
}); // expose FunctionalRenderContext for ssr runtime helper installation

Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});
Vue.version = '2.6.10';
/*  */
// these are reserved for web because they are directly compiled away
// during template compilation

var isReservedAttr = makeMap('style,class'); // attributes that should be using props for binding

var acceptValue = makeMap('input,textarea,option,select,progress');

var mustUseProp = function (tag, type, attr) {
  return attr === 'value' && acceptValue(tag) && type !== 'button' || attr === 'selected' && tag === 'option' || attr === 'checked' && tag === 'input' || attr === 'muted' && tag === 'video';
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');
var isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');

var convertEnumeratedValue = function (key, value) {
  return isFalsyAttrValue(value) || value === 'false' ? 'false' // allow arbitrary string value for contenteditable
  : key === 'contenteditable' && isValidContentEditableValue(value) ? value : 'true';
};

var isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' + 'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' + 'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' + 'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' + 'required,reversed,scoped,seamless,selected,sortable,translate,' + 'truespeed,typemustmatch,visible');
var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink';
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : '';
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false;
};
/*  */


function genClassForVnode(vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;

  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;

    if (childNode && childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }

  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode && parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }

  return renderClass(data.staticClass, data.class);
}

function mergeClassData(child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class) ? [child.class, parent.class] : parent.class
  };
}

function renderClass(staticClass, dynamicClass) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass));
  }
  /* istanbul ignore next */


  return '';
}

function concat(a, b) {
  return a ? b ? a + ' ' + b : a : b || '';
}

function stringifyClass(value) {
  if (Array.isArray(value)) {
    return stringifyArray(value);
  }

  if (isObject(value)) {
    return stringifyObject(value);
  }

  if (typeof value === 'string') {
    return value;
  }
  /* istanbul ignore next */


  return '';
}

function stringifyArray(value) {
  var res = '';
  var stringified;

  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) {
        res += ' ';
      }

      res += stringified;
    }
  }

  return res;
}

function stringifyObject(value) {
  var res = '';

  for (var key in value) {
    if (value[key]) {
      if (res) {
        res += ' ';
      }

      res += key;
    }
  }

  return res;
}
/*  */


var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};
var isHTMLTag = makeMap('html,body,base,head,link,meta,style,title,' + 'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template,blockquote,iframe,tfoot'); // this map is intentionally selective, only covering SVG elements that may
// contain child elements.

var isSVG = makeMap('svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' + 'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' + 'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view', true);

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag);
};

function getTagNamespace(tag) {
  if (isSVG(tag)) {
    return 'svg';
  } // basic support for MathML
  // note it doesn't support other MathML elements being component roots


  if (tag === 'math') {
    return 'math';
  }
}

var unknownElementCache = Object.create(null);

function isUnknownElement(tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true;
  }

  if (isReservedTag(tag)) {
    return false;
  }

  tag = tag.toLowerCase();
  /* istanbul ignore if */

  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag];
  }

  var el = document.createElement(tag);

  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return unknownElementCache[tag] = el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;
  } else {
    return unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString());
  }
}

var isTextInputType = makeMap('text,number,password,search,email,tel,url');
/*  */

/**
 * Query an element selector if it's not an element already.
 */

function query(el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);

    if (!selected) {
      "development" !== 'production' && warn('Cannot find element: ' + el);
      return document.createElement('div');
    }

    return selected;
  } else {
    return el;
  }
}
/*  */


function createElement$1(tagName, vnode) {
  var elm = document.createElement(tagName);

  if (tagName !== 'select') {
    return elm;
  } // false or null will remove the attribute but undefined will not


  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }

  return elm;
}

function createElementNS(namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName);
}

function createTextNode(text) {
  return document.createTextNode(text);
}

function createComment(text) {
  return document.createComment(text);
}

function insertBefore(parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild(node, child) {
  node.removeChild(child);
}

function appendChild(node, child) {
  node.appendChild(child);
}

function parentNode(node) {
  return node.parentNode;
}

function nextSibling(node) {
  return node.nextSibling;
}

function tagName(node) {
  return node.tagName;
}

function setTextContent(node, text) {
  node.textContent = text;
}

function setStyleScope(node, scopeId) {
  node.setAttribute(scopeId, '');
}

var nodeOps =
/*#__PURE__*/
Object.freeze({
  createElement: createElement$1,
  createElementNS: createElementNS,
  createTextNode: createTextNode,
  createComment: createComment,
  insertBefore: insertBefore,
  removeChild: removeChild,
  appendChild: appendChild,
  parentNode: parentNode,
  nextSibling: nextSibling,
  tagName: tagName,
  setTextContent: setTextContent,
  setStyleScope: setStyleScope
});
/*  */

var ref = {
  create: function create(_, vnode) {
    registerRef(vnode);
  },
  update: function update(oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy(vnode) {
    registerRef(vnode, true);
  }
};

function registerRef(vnode, isRemoval) {
  var key = vnode.data.ref;

  if (!isDef(key)) {
    return;
  }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;

  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}
/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */


var emptyNode = new VNode('', {}, []);
var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode(a, b) {
  return a.key === b.key && (a.tag === b.tag && a.isComment === b.isComment && isDef(a.data) === isDef(b.data) && sameInputType(a, b) || isTrue(a.isAsyncPlaceholder) && a.asyncFactory === b.asyncFactory && isUndef(b.asyncFactory.error));
}

function sameInputType(a, b) {
  if (a.tag !== 'input') {
    return true;
  }

  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB);
}

function createKeyToOldIdx(children, beginIdx, endIdx) {
  var i, key;
  var map = {};

  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;

    if (isDef(key)) {
      map[key] = i;
    }
  }

  return map;
}

function createPatchFunction(backend) {
  var i, j;
  var cbs = {};
  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];

    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt(elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm);
  }

  function createRmCb(childElm, listeners) {
    function remove$$1() {
      if (--remove$$1.listeners === 0) {
        removeNode(childElm);
      }
    }

    remove$$1.listeners = listeners;
    return remove$$1;
  }

  function removeNode(el) {
    var parent = nodeOps.parentNode(el); // element may have already been removed due to v-html / v-text

    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  function isUnknownElement$$1(vnode, inVPre) {
    return !inVPre && !vnode.ns && !(config.ignoredElements.length && config.ignoredElements.some(function (ignore) {
      return isRegExp(ignore) ? ignore.test(vnode.tag) : ignore === vnode.tag;
    })) && config.isUnknownElement(vnode.tag);
  }

  var creatingElmInVPre = 0;

  function createElm(vnode, insertedVnodeQueue, parentElm, refElm, nested, ownerArray, index) {
    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // This vnode was used in a previous render!
      // now it's used as a new node, overwriting its elm would cause
      // potential patch errors down the road when it's used as an insertion
      // reference node. Instead, we clone the node on-demand before creating
      // associated DOM element for it.
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    vnode.isRootInsert = !nested; // for transition enter check

    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return;
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;

    if (isDef(tag)) {
      if ("development" !== 'production') {
        if (data && data.pre) {
          creatingElmInVPre++;
        }

        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the "name" option.', vnode.context);
        }
      }

      vnode.elm = vnode.ns ? nodeOps.createElementNS(vnode.ns, tag) : nodeOps.createElement(tag, vnode);
      setScope(vnode);
      /* istanbul ignore if */

      {
        createChildren(vnode, children, insertedVnodeQueue);

        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }

        insert(parentElm, vnode.elm, refElm);
      }

      if ("development" !== 'production' && data && data.pre) {
        creatingElmInVPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;

    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;

      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false
        /* hydrating */
        );
      } // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.


      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        insert(parentElm, vnode.elm, refElm);

        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }

        return true;
      }
    }
  }

  function initComponent(vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }

    vnode.elm = vnode.componentInstance.$el;

    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode); // make sure to invoke the insert hook

      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
    var i; // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.

    var innerNode = vnode;

    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;

      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }

        insertedVnodeQueue.push(innerNode);
        break;
      }
    } // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself


    insert(parentElm, vnode.elm, refElm);
  }

  function insert(parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (nodeOps.parentNode(ref$$1) === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren(vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      if ("development" !== 'production') {
        checkDuplicateKeys(children);
      }

      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
    }
  }

  function isPatchable(vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }

    return isDef(vnode.tag);
  }

  function invokeCreateHooks(vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }

    i = vnode.data.hook; // Reuse variable

    if (isDef(i)) {
      if (isDef(i.create)) {
        i.create(emptyNode, vnode);
      }

      if (isDef(i.insert)) {
        insertedVnodeQueue.push(vnode);
      }
    }
  } // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.


  function setScope(vnode) {
    var i;

    if (isDef(i = vnode.fnScopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    } else {
      var ancestor = vnode;

      while (ancestor) {
        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
          nodeOps.setStyleScope(vnode.elm, i);
        }

        ancestor = ancestor.parent;
      }
    } // for slot content they should also get the scopeId from the host instance.


    if (isDef(i = activeInstance) && i !== vnode.context && i !== vnode.fnContext && isDef(i = i.$options._scopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    }
  }

  function addVnodes(parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
    }
  }

  function invokeDestroyHook(vnode) {
    var i, j;
    var data = vnode.data;

    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) {
        i(vnode);
      }

      for (i = 0; i < cbs.destroy.length; ++i) {
        cbs.destroy[i](vnode);
      }
    }

    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];

      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else {
          // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook(vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;

      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      } // recursively invoke hooks on child component root node


      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }

      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }

      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, vnodeToMove, refElm; // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions

    var canMove = !removeOnly;

    if ("development" !== 'production') {
      checkDuplicateKeys(newCh);
    }

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) {
        // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) {
        // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) {
          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
        }

        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);

        if (isUndef(idxInOld)) {
          // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
        } else {
          vnodeToMove = oldCh[idxInOld];

          if (sameVnode(vnodeToMove, newStartVnode)) {
            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
          }
        }

        newStartVnode = newCh[++newStartIdx];
      }
    }

    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function checkDuplicateKeys(children) {
    var seenKeys = {};

    for (var i = 0; i < children.length; i++) {
      var vnode = children[i];
      var key = vnode.key;

      if (isDef(key)) {
        if (seenKeys[key]) {
          warn("Duplicate keys detected: '" + key + "'. This may cause an update error.", vnode.context);
        } else {
          seenKeys[key] = true;
        }
      }
    }
  }

  function findIdxInOld(node, oldCh, start, end) {
    for (var i = start; i < end; i++) {
      var c = oldCh[i];

      if (isDef(c) && sameVnode(node, c)) {
        return i;
      }
    }
  }

  function patchVnode(oldVnode, vnode, insertedVnodeQueue, ownerArray, index, removeOnly) {
    if (oldVnode === vnode) {
      return;
    }

    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // clone reused vnode
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }

      return;
    } // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.


    if (isTrue(vnode.isStatic) && isTrue(oldVnode.isStatic) && vnode.key === oldVnode.key && (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))) {
      vnode.componentInstance = oldVnode.componentInstance;
      return;
    }

    var i;
    var data = vnode.data;

    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;

    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) {
        cbs.update[i](oldVnode, vnode);
      }

      if (isDef(i = data.hook) && isDef(i = i.update)) {
        i(oldVnode, vnode);
      }
    }

    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) {
          updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);
        }
      } else if (isDef(ch)) {
        if ("development" !== 'production') {
          checkDuplicateKeys(ch);
        }

        if (isDef(oldVnode.text)) {
          nodeOps.setTextContent(elm, '');
        }

        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }

    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) {
        i(oldVnode, vnode);
      }
    }
  }

  function invokeInsertHook(vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var hydrationBailed = false; // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  // Note: style is excluded because it relies on initial clone for future
  // deep updates (#7063).

  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key'); // Note: this is a browser-only function so we can assume elms are DOM nodes.

  function hydrate(elm, vnode, insertedVnodeQueue, inVPre) {
    var i;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    inVPre = inVPre || data && data.pre;
    vnode.elm = elm;

    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.isAsyncPlaceholder = true;
      return true;
    } // assert node match


    if ("development" !== 'production') {
      if (!assertNodeMatch(elm, vnode, inVPre)) {
        return false;
      }
    }

    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) {
        i(vnode, true
        /* hydrating */
        );
      }

      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true;
      }
    }

    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          // v-html and domProps: innerHTML
          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
            if (i !== elm.innerHTML) {
              /* istanbul ignore if */
              if ("development" !== 'production' && typeof console !== 'undefined' && !hydrationBailed) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('server innerHTML: ', i);
                console.warn('client innerHTML: ', elm.innerHTML);
              }

              return false;
            }
          } else {
            // iterate and compare children lists
            var childrenMatch = true;
            var childNode = elm.firstChild;

            for (var i$1 = 0; i$1 < children.length; i$1++) {
              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                childrenMatch = false;
                break;
              }

              childNode = childNode.nextSibling;
            } // if childNode is not null, it means the actual childNodes list is
            // longer than the virtual children list.


            if (!childrenMatch || childNode) {
              /* istanbul ignore if */
              if ("development" !== 'production' && typeof console !== 'undefined' && !hydrationBailed) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
              }

              return false;
            }
          }
        }
      }

      if (isDef(data)) {
        var fullInvoke = false;

        for (var key in data) {
          if (!isRenderedModule(key)) {
            fullInvoke = true;
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break;
          }
        }

        if (!fullInvoke && data['class']) {
          // ensure collecting deps for deep class bindings for future updates
          traverse(data['class']);
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }

    return true;
  }

  function assertNodeMatch(node, vnode, inVPre) {
    if (isDef(vnode.tag)) {
      return vnode.tag.indexOf('vue-component') === 0 || !isUnknownElement$$1(vnode, inVPre) && vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase());
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3);
    }
  }

  return function patch(oldVnode, vnode, hydrating, removeOnly) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) {
        invokeDestroyHook(oldVnode);
      }

      return;
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);

      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }

          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode;
            } else if ("development" !== 'production') {
              warn('The client-side rendered virtual DOM tree is not matching ' + 'server-rendered content. This is likely caused by incorrect ' + 'HTML markup, for example nesting block-level elements inside ' + '<p>, or missing <tbody>. Bailing hydration and performing ' + 'full client-side render.');
            }
          } // either not server-rendered, or hydration failed.
          // create an empty node and replace it


          oldVnode = emptyNodeAt(oldVnode);
        } // replacing existing element


        var oldElm = oldVnode.elm;
        var parentElm = nodeOps.parentNode(oldElm); // create new node

        createElm(vnode, insertedVnodeQueue, // extremely rare edge case: do not insert if old element is in a
        // leaving transition. Only happens when combining transition +
        // keep-alive + HOCs. (#4590)
        oldElm._leaveCb ? null : parentElm, nodeOps.nextSibling(oldElm)); // update parent placeholder node element, recursively

        if (isDef(vnode.parent)) {
          var ancestor = vnode.parent;
          var patchable = isPatchable(vnode);

          while (ancestor) {
            for (var i = 0; i < cbs.destroy.length; ++i) {
              cbs.destroy[i](ancestor);
            }

            ancestor.elm = vnode.elm;

            if (patchable) {
              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                cbs.create[i$1](emptyNode, ancestor);
              } // #6513
              // invoke insert hooks that may have been merged by create hooks.
              // e.g. for directives that uses the "inserted" hook.


              var insert = ancestor.data.hook.insert;

              if (insert.merged) {
                // start at index 1 to avoid re-invoking component mounted hook
                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                  insert.fns[i$2]();
                }
              }
            } else {
              registerRef(ancestor);
            }

            ancestor = ancestor.parent;
          }
        } // destroy old node


        if (isDef(parentElm)) {
          removeVnodes(parentElm, [oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm;
  };
}
/*  */


var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives(vnode) {
    updateDirectives(vnode, emptyNode);
  }
};

function updateDirectives(oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update(oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);
  var dirsWithInsert = [];
  var dirsWithPostpatch = [];
  var key, oldDir, dir;

  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];

    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);

      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      dir.oldArg = oldDir.arg;
      callHook$1(dir, 'update', vnode, oldVnode);

      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };

    if (isCreate) {
      mergeVNodeHook(vnode, 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode, 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1(dirs, vm) {
  var res = Object.create(null);

  if (!dirs) {
    // $flow-disable-line
    return res;
  }

  var i, dir;

  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];

    if (!dir.modifiers) {
      // $flow-disable-line
      dir.modifiers = emptyModifiers;
    }

    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  } // $flow-disable-line


  return res;
}

function getRawDirName(dir) {
  return dir.rawName || dir.name + "." + Object.keys(dir.modifiers || {}).join('.');
}

function callHook$1(dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];

  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, "directive " + dir.name + " " + hook + " hook");
    }
  }
}

var baseModules = [ref, directives];
/*  */

function updateAttrs(oldVnode, vnode) {
  var opts = vnode.componentOptions;

  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return;
  }

  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return;
  }

  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {}; // clone observed objects, as the user probably wants to mutate it

  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];

    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  } // #4391: in IE9, setting type can reset value for input[type=radio]
  // #6666: IE/Edge forces progress value down to 1 before setting a max

  /* istanbul ignore if */


  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }

  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr(el, key, value) {
  if (el.tagName.indexOf('-') > -1) {
    baseSetAttr(el, key, value);
  } else if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      // technically allowfullscreen is a boolean attribute for <iframe>,
      // but Flash expects a value of "true" when used on <embed> tag
      value = key === 'allowfullscreen' && el.tagName === 'EMBED' ? 'true' : key;
      el.setAttribute(key, value);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, convertEnumeratedValue(key, value));
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    baseSetAttr(el, key, value);
  }
}

function baseSetAttr(el, key, value) {
  if (isFalsyAttrValue(value)) {
    el.removeAttribute(key);
  } else {
    // #7138: IE10 & 11 fires input event when setting placeholder on
    // <textarea>... block the first input event and remove the blocker
    // immediately.

    /* istanbul ignore if */
    if (isIE && !isIE9 && el.tagName === 'TEXTAREA' && key === 'placeholder' && value !== '' && !el.__ieph) {
      var blocker = function (e) {
        e.stopImmediatePropagation();
        el.removeEventListener('input', blocker);
      };

      el.addEventListener('input', blocker); // $flow-disable-line

      el.__ieph = true;
      /* IE placeholder patched */
    }

    el.setAttribute(key, value);
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
};
/*  */

function updateClass(oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticClass) && isUndef(data.class) && (isUndef(oldData) || isUndef(oldData.staticClass) && isUndef(oldData.class))) {
    return;
  }

  var cls = genClassForVnode(vnode); // handle transition classes

  var transitionClass = el._transitionClasses;

  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  } // set the class


  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
};
/*  */

/*  */

/*  */

/*  */
// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.

var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';
/*  */
// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.

function normalizeEvents(on) {
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    var event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  } // This was originally intended to fix #4521 but no longer necessary
  // after 2.5. Keeping it for backwards compat with generated code from < 2.4

  /* istanbul ignore if */


  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function createOnceHandler$1(event, handler, capture) {
  var _target = target$1; // save current target element in closure

  return function onceHandler() {
    var res = handler.apply(null, arguments);

    if (res !== null) {
      remove$2(event, onceHandler, capture, _target);
    }
  };
} // #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
// implementation and does not fire microtasks in between event propagation, so
// safe to exclude.


var useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);

function add$1(name, handler, capture, passive) {
  // async edge case #6566: inner click event triggers patch, event handler
  // attached to outer element during patch, and triggered again. This
  // happens because browsers fire microtask ticks between event propagation.
  // the solution is simple: we save the timestamp when a handler is attached,
  // and the handler would only fire if the event passed to it was fired
  // AFTER it was attached.
  if (useMicrotaskFix) {
    var attachedTimestamp = currentFlushTimestamp;
    var original = handler;

    handler = original._wrapper = function (e) {
      if ( // no bubbling, should always fire.
      // this is just a safety net in case event.timeStamp is unreliable in
      // certain weird environments...
      e.target === e.currentTarget || // event is fired after handler attachment
      e.timeStamp >= attachedTimestamp || // bail for environments that have buggy event.timeStamp implementations
      // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
      // #9681 QtWebEngine event.timeStamp is negative value
      e.timeStamp <= 0 || // #9448 bail if event is fired in another document in a multi-page
      // electron/nw.js app, since event.timeStamp will be using a different
      // starting reference
      e.target.ownerDocument !== document) {
        return original.apply(this, arguments);
      }
    };
  }

  target$1.addEventListener(name, handler, supportsPassive ? {
    capture: capture,
    passive: passive
  } : capture);
}

function remove$2(name, handler, capture, _target) {
  (_target || target$1).removeEventListener(name, handler._wrapper || handler, capture);
}

function updateDOMListeners(oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return;
  }

  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);
  target$1 = undefined;
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
};
/*  */

var svgContainer;

function updateDOMProps(oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return;
  }

  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {}; // clone observed objects, as the user probably wants to mutate it

  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (!(key in props)) {
      elm[key] = '';
    }
  }

  for (key in props) {
    cur = props[key]; // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)

    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) {
        vnode.children.length = 0;
      }

      if (cur === oldProps[key]) {
        continue;
      } // #6601 work around Chrome version <= 55 bug where single textNode
      // replaced by innerHTML/textContent retains its parentNode property


      if (elm.childNodes.length === 1) {
        elm.removeChild(elm.childNodes[0]);
      }
    }

    if (key === 'value' && elm.tagName !== 'PROGRESS') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur; // avoid resetting cursor position when value is the same

      var strCur = isUndef(cur) ? '' : String(cur);

      if (shouldUpdateValue(elm, strCur)) {
        elm.value = strCur;
      }
    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {
      // IE doesn't support innerHTML for SVG elements
      svgContainer = svgContainer || document.createElement('div');
      svgContainer.innerHTML = "<svg>" + cur + "</svg>";
      var svg = svgContainer.firstChild;

      while (elm.firstChild) {
        elm.removeChild(elm.firstChild);
      }

      while (svg.firstChild) {
        elm.appendChild(svg.firstChild);
      }
    } else if ( // skip the update if old and new VDOM state is the same.
    // `value` is handled separately because the DOM value may be temporarily
    // out of sync with VDOM state due to focus, composition and modifiers.
    // This  #4521 by skipping the unnecesarry `checked` update.
    cur !== oldProps[key]) {
      // some property updates can throw
      // e.g. `value` on <progress> w/ non-finite value
      try {
        elm[key] = cur;
      } catch (e) {}
    }
  }
} // check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue(elm, checkVal) {
  return !elm.composing && (elm.tagName === 'OPTION' || isNotInFocusAndDirty(elm, checkVal) || isDirtyWithModifiers(elm, checkVal));
}

function isNotInFocusAndDirty(elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true; // #6157
  // work around IE bug when accessing document.activeElement in an iframe

  try {
    notInFocus = document.activeElement !== elm;
  } catch (e) {}

  return notInFocus && elm.value !== checkVal;
}

function isDirtyWithModifiers(elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime

  if (isDef(modifiers)) {
    if (modifiers.number) {
      return toNumber(value) !== toNumber(newVal);
    }

    if (modifiers.trim) {
      return value.trim() !== newVal.trim();
    }
  }

  return value !== newVal;
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
};
/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res;
}); // merge static and dynamic style data on the same vnode

function normalizeStyleData(data) {
  var style = normalizeStyleBinding(data.style); // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it

  return data.staticStyle ? extend(data.staticStyle, style) : style;
} // normalize possible array / string values into Object


function normalizeStyleBinding(bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle);
  }

  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle);
  }

  return bindingStyle;
}
/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */


function getStyle(vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;

    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;

      if (childNode && childNode.data && (styleData = normalizeStyleData(childNode.data))) {
        extend(res, styleData);
      }
    }
  }

  if (styleData = normalizeStyleData(vnode.data)) {
    extend(res, styleData);
  }

  var parentNode = vnode;

  while (parentNode = parentNode.parent) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }

  return res;
}
/*  */


var cssVarRE = /^--/;
var importantRE = /\s*!important$/;

var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);

    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];
var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);

  if (prop !== 'filter' && prop in emptyStyle) {
    return prop;
  }

  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);

  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;

    if (name in emptyStyle) {
      return name;
    }
  }
});

function updateStyle(oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) && isUndef(oldData.staticStyle) && isUndef(oldData.style)) {
    return;
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {}; // if static style exists, stylebinding already merged into it when doing normalizeStyleData

  var oldStyle = oldStaticStyle || oldStyleBinding;
  var style = normalizeStyleBinding(vnode.data.style) || {}; // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likely wants
  // to mutate it.

  vnode.data.normalizedStyle = isDef(style.__ob__) ? extend({}, style) : style;
  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }

  for (name in newStyle) {
    cur = newStyle[name];

    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
};
/*  */

var whitespaceRE = /\s+/;
/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */

function addClass(el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return;
  }
  /* istanbul ignore else */


  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) {
        return el.classList.add(c);
      });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";

    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}
/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */


function removeClass(el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return;
  }
  /* istanbul ignore else */


  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) {
        return el.classList.remove(c);
      });
    } else {
      el.classList.remove(cls);
    }

    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';

    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }

    cur = cur.trim();

    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}
/*  */


function resolveTransition(def$$1) {
  if (!def$$1) {
    return;
  }
  /* istanbul ignore else */


  if (typeof def$$1 === 'object') {
    var res = {};

    if (def$$1.css !== false) {
      extend(res, autoCssTransition(def$$1.name || 'v'));
    }

    extend(res, def$$1);
    return res;
  } else if (typeof def$$1 === 'string') {
    return autoCssTransition(def$$1);
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: name + "-enter",
    enterToClass: name + "-enter-to",
    enterActiveClass: name + "-enter-active",
    leaveClass: name + "-leave",
    leaveToClass: name + "-leave-to",
    leaveActiveClass: name + "-leave-active"
  };
});
var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation'; // Transition property/event sniffing

var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';

if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }

  if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
} // binding to window is necessary to make hot reload work in IE in strict mode


var raf = inBrowser ? window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout :
/* istanbul ignore next */
function (fn) {
  return fn();
};

function nextFrame(fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass(el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);

  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass(el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }

  removeClass(el, cls);
}

function whenTransitionEnds(el, expectedType, cb) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;

  if (!type) {
    return cb();
  }

  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;

  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };

  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };

  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo(el, expectedType) {
  var styles = window.getComputedStyle(el); // JSDOM may return undefined for transition properties

  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');
  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');
  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);
  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */

  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;
    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;
  }

  var hasTransform = type === TRANSITION && transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  };
}

function getTimeout(delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i]);
  }));
} // Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
// in a locale-dependent way, using a comma instead of a dot.
// If comma is not replaced with a dot, the input will be rounded down (i.e. acting
// as a floor function) causing unexpected behaviors


function toMs(s) {
  return Number(s.slice(0, -1).replace(',', '.')) * 1000;
}
/*  */


function enter(vnode, toggleDisplay) {
  var el = vnode.elm; // call leave callback now

  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;

    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);

  if (isUndef(data)) {
    return;
  }
  /* istanbul ignore if */


  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return;
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration; // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.

  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;

  while (transitionNode && transitionNode.parent) {
    context = transitionNode.context;
    transitionNode = transitionNode.parent;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return;
  }

  var startClass = isAppear && appearClass ? appearClass : enterClass;
  var activeClass = isAppear && appearActiveClass ? appearActiveClass : enterActiveClass;
  var toClass = isAppear && appearToClass ? appearToClass : enterToClass;
  var beforeEnterHook = isAppear ? beforeAppear || beforeEnter : beforeEnter;
  var enterHook = isAppear ? typeof appear === 'function' ? appear : enter : enter;
  var afterEnterHook = isAppear ? afterAppear || afterEnter : afterEnter;
  var enterCancelledHook = isAppear ? appearCancelled || enterCancelled : enterCancelled;
  var explicitEnterDuration = toNumber(isObject(duration) ? duration.enter : duration);

  if ("development" !== 'production' && explicitEnterDuration != null) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);
  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }

    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }

      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }

    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode, 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];

      if (pendingNode && pendingNode.tag === vnode.tag && pendingNode.elm._leaveCb) {
        pendingNode.elm._leaveCb();
      }

      enterHook && enterHook(el, cb);
    });
  } // start enter transition


  beforeEnterHook && beforeEnterHook(el);

  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      removeTransitionClass(el, startClass);

      if (!cb.cancelled) {
        addTransitionClass(el, toClass);

        if (!userWantsControl) {
          if (isValidDuration(explicitEnterDuration)) {
            setTimeout(cb, explicitEnterDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave(vnode, rm) {
  var el = vnode.elm; // call enter callback now

  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;

    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);

  if (isUndef(data) || el.nodeType !== 1) {
    return rm();
  }
  /* istanbul ignore if */


  if (isDef(el._leaveCb)) {
    return;
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;
  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);
  var explicitLeaveDuration = toNumber(isObject(duration) ? duration.leave : duration);

  if ("development" !== 'production' && isDef(explicitLeaveDuration)) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }

    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }

    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }

      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }

    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave() {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return;
    } // record leaving element


    if (!vnode.data.show && el.parentNode) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;
    }

    beforeLeave && beforeLeave(el);

    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        removeTransitionClass(el, leaveClass);

        if (!cb.cancelled) {
          addTransitionClass(el, leaveToClass);

          if (!userWantsControl) {
            if (isValidDuration(explicitLeaveDuration)) {
              setTimeout(cb, explicitLeaveDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        }
      });
    }

    leave && leave(el, cb);

    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
} // only used in dev mode


function checkDuration(val, name, vnode) {
  if (typeof val !== 'number') {
    warn("<transition> explicit " + name + " duration is not a valid number - " + "got " + JSON.stringify(val) + ".", vnode.context);
  } else if (isNaN(val)) {
    warn("<transition> explicit " + name + " duration is NaN - " + 'the duration expression might be incorrect.', vnode.context);
  }
}

function isValidDuration(val) {
  return typeof val === 'number' && !isNaN(val);
}
/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */


function getHookArgumentsLength(fn) {
  if (isUndef(fn)) {
    return false;
  }

  var invokerFns = fn.fns;

  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(Array.isArray(invokerFns) ? invokerFns[0] : invokerFns);
  } else {
    return (fn._length || fn.length) > 1;
  }
}

function _enter(_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1(vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {};
var platformModules = [attrs, klass, events, domProps, style, transition];
/*  */
// the directive module should be applied last, after all
// built-in modules have been applied.

var modules = platformModules.concat(baseModules);
var patch = createPatchFunction({
  nodeOps: nodeOps,
  modules: modules
});
/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

/* istanbul ignore if */

if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;

    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var directive = {
  inserted: function inserted(el, binding, vnode, oldVnode) {
    if (vnode.tag === 'select') {
      // #6903
      if (oldVnode.elm && !oldVnode.elm._vOptions) {
        mergeVNodeHook(vnode, 'postpatch', function () {
          directive.componentUpdated(el, binding, vnode);
        });
      } else {
        setSelected(el, binding, vnode.context);
      }

      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;

      if (!binding.modifiers.lazy) {
        el.addEventListener('compositionstart', onCompositionStart);
        el.addEventListener('compositionend', onCompositionEnd); // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.

        el.addEventListener('change', onCompositionEnd);
        /* istanbul ignore if */

        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },
  componentUpdated: function componentUpdated(el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context); // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.

      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);

      if (curOptions.some(function (o, i) {
        return !looseEqual(o, prevOptions[i]);
      })) {
        // trigger change event if
        // no matching option found for at least one value
        var needReset = el.multiple ? binding.value.some(function (v) {
          return hasNoMatchingOption(v, curOptions);
        }) : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);

        if (needReset) {
          trigger(el, 'change');
        }
      }
    }
  }
};

function setSelected(el, binding, vm) {
  actuallySetSelected(el, binding, vm);
  /* istanbul ignore if */

  if (isIE || isEdge) {
    setTimeout(function () {
      actuallySetSelected(el, binding, vm);
    }, 0);
  }
}

function actuallySetSelected(el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;

  if (isMultiple && !Array.isArray(value)) {
    "development" !== 'production' && warn("<select multiple v-model=\"" + binding.expression + "\"> " + "expects an Array value for its binding, but got " + Object.prototype.toString.call(value).slice(8, -1), vm);
    return;
  }

  var selected, option;

  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];

    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;

      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }

        return;
      }
    }
  }

  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function hasNoMatchingOption(value, options) {
  return options.every(function (o) {
    return !looseEqual(o, value);
  });
}

function getValue(option) {
  return '_value' in option ? option._value : option.value;
}

function onCompositionStart(e) {
  e.target.composing = true;
}

function onCompositionEnd(e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) {
    return;
  }

  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger(el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}
/*  */
// recursively search for possible transition defined inside the component root


function locateNode(vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition) ? locateNode(vnode.componentInstance._vnode) : vnode;
}

var show = {
  bind: function bind(el, ref, vnode) {
    var value = ref.value;
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay = el.style.display === 'none' ? '' : el.style.display;

    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },
  update: function update(el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;
    /* istanbul ignore if */

    if (!value === !oldValue) {
      return;
    }

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;

    if (transition$$1) {
      vnode.data.show = true;

      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },
  unbind: function unbind(el, binding, vnode, oldVnode, isDestroy) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
};
var platformDirectives = {
  model: directive,
  show: show
};
/*  */

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
}; // in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered

function getRealChild(vnode) {
  var compOptions = vnode && vnode.componentOptions;

  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children));
  } else {
    return vnode;
  }
}

function extractTransitionData(comp) {
  var data = {};
  var options = comp.$options; // props

  for (var key in options.propsData) {
    data[key] = comp[key];
  } // events.
  // extract listeners and pass them directly to the transition methods


  var listeners = options._parentListeners;

  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }

  return data;
}

function placeholder(h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    });
  }
}

function hasParentTransition(vnode) {
  while (vnode = vnode.parent) {
    if (vnode.data.transition) {
      return true;
    }
  }
}

function isSameChild(child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag;
}

var isNotTextNode = function (c) {
  return c.tag || isAsyncPlaceholder(c);
};

var isVShowDirective = function (d) {
  return d.name === 'show';
};

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,
  render: function render(h) {
    var this$1 = this;
    var children = this.$slots.default;

    if (!children) {
      return;
    } // filter out text nodes (possible whitespaces)


    children = children.filter(isNotTextNode);
    /* istanbul ignore if */

    if (!children.length) {
      return;
    } // warn multiple elements


    if ("development" !== 'production' && children.length > 1) {
      warn('<transition> can only be used on a single element. Use ' + '<transition-group> for lists.', this.$parent);
    }

    var mode = this.mode; // warn invalid mode

    if ("development" !== 'production' && mode && mode !== 'in-out' && mode !== 'out-in') {
      warn('invalid <transition> mode: ' + mode, this.$parent);
    }

    var rawChild = children[0]; // if this is a component root node and the component's
    // parent container node also has transition, skip.

    if (hasParentTransition(this.$vnode)) {
      return rawChild;
    } // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive


    var child = getRealChild(rawChild);
    /* istanbul ignore if */

    if (!child) {
      return rawChild;
    }

    if (this._leaving) {
      return placeholder(h, rawChild);
    } // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.


    var id = "__transition-" + this._uid + "-";
    child.key = child.key == null ? child.isComment ? id + 'comment' : id + child.tag : isPrimitive(child.key) ? String(child.key).indexOf(id) === 0 ? child.key : id + child.key : child.key;
    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild); // mark v-show
    // so that the transition module can hand over the control to the directive

    if (child.data.directives && child.data.directives.some(isVShowDirective)) {
      child.data.show = true;
    }

    if (oldChild && oldChild.data && !isSameChild(child, oldChild) && !isAsyncPlaceholder(oldChild) && // #6687 component root is a comment node
    !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild.data.transition = extend({}, data); // handle transition mode

      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild);
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild;
        }

        var delayedLeave;

        var performLeave = function () {
          delayedLeave();
        };

        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) {
          delayedLeave = leave;
        });
      }
    }

    return rawChild;
  }
};
/*  */

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);
delete props.mode;
var TransitionGroup = {
  props: props,
  beforeMount: function beforeMount() {
    var this$1 = this;
    var update = this._update;

    this._update = function (vnode, hydrating) {
      var restoreActiveInstance = setActiveInstance(this$1); // force removing pass

      this$1.__patch__(this$1._vnode, this$1.kept, false, // hydrating
      true // removeOnly (!important, avoids unnecessary moves)
      );

      this$1._vnode = this$1.kept;
      restoreActiveInstance();
      update.call(this$1, vnode, hydrating);
    };
  },
  render: function render(h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];

      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c;
          (c.data || (c.data = {})).transition = transitionData;
        } else if ("development" !== 'production') {
          var opts = c.componentOptions;
          var name = opts ? opts.Ctor.options.name || opts.tag || '' : c.tag;
          warn("<transition-group> children must be keyed: <" + name + ">");
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];

      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();

        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }

      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children);
  },
  updated: function updated() {
    var children = this.prevChildren;
    var moveClass = this.moveClass || (this.name || 'v') + '-move';

    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return;
    } // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.


    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation); // force reflow to put everything in position
    // assign to this to avoid being removed in tree-shaking
    // $flow-disable-line

    this._reflow = document.body.offsetHeight;
    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb(e) {
          if (e && e.target !== el) {
            return;
          }

          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },
  methods: {
    hasMove: function hasMove(el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false;
      }
      /* istanbul ignore if */


      if (this._hasMove) {
        return this._hasMove;
      } // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.


      var clone = el.cloneNode();

      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) {
          removeClass(clone, cls);
        });
      }

      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return this._hasMove = info.hasTransform;
    }
  }
};

function callPendingCbs(c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */


  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition(c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation(c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;

  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
};
/*  */
// install platform specific utils

Vue.config.mustUseProp = mustUseProp;
Vue.config.isReservedTag = isReservedTag;
Vue.config.isReservedAttr = isReservedAttr;
Vue.config.getTagNamespace = getTagNamespace;
Vue.config.isUnknownElement = isUnknownElement; // install platform runtime directives & components

extend(Vue.options.directives, platformDirectives);
extend(Vue.options.components, platformComponents); // install platform patch function

Vue.prototype.__patch__ = inBrowser ? patch : noop; // public mount method

Vue.prototype.$mount = function (el, hydrating) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating);
}; // devtools global hook

/* istanbul ignore next */


if (inBrowser) {
  setTimeout(function () {
    if (config.devtools) {
      if (devtools) {
        devtools.emit('init', Vue);
      } else if ("development" !== 'production' && "development" !== 'test') {
        console[console.info ? 'info' : 'log']('Download the Vue Devtools extension for a better development experience:\n' + 'https://github.com/vuejs/vue-devtools');
      }
    }

    if ("development" !== 'production' && "development" !== 'test' && config.productionTip !== false && typeof console !== 'undefined') {
      console[console.info ? 'info' : 'log']("You are running Vue in development mode.\n" + "Make sure to turn on production mode when deploying for production.\n" + "See more tips at https://vuejs.org/guide/deployment.html");
    }
  }, 0);
}
/*  */


var _default = Vue;
exports.default = _default;
},{}],"node_modules/axios/lib/helpers/bind.js":[function(require,module,exports) {
'use strict';

module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};

},{}],"node_modules/axios/node_modules/is-buffer/index.js":[function(require,module,exports) {
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
module.exports = function isBuffer(obj) {
  return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);
};
},{}],"node_modules/axios/lib/utils.js":[function(require,module,exports) {
'use strict';

var bind = require('./helpers/bind');
var isBuffer = require('is-buffer');

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Function equal to merge with the difference being that no reference
 * to original objects is kept.
 *
 * @see merge
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function deepMerge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = deepMerge(result[key], val);
    } else if (typeof val === 'object') {
      result[key] = deepMerge({}, val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  deepMerge: deepMerge,
  extend: extend,
  trim: trim
};

},{"./helpers/bind":"node_modules/axios/lib/helpers/bind.js","is-buffer":"node_modules/axios/node_modules/is-buffer/index.js"}],"node_modules/axios/lib/helpers/buildURL.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};

},{"./../utils":"node_modules/axios/lib/utils.js"}],"node_modules/axios/lib/core/InterceptorManager.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;

},{"./../utils":"node_modules/axios/lib/utils.js"}],"node_modules/axios/lib/core/transformData.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};

},{"./../utils":"node_modules/axios/lib/utils.js"}],"node_modules/axios/lib/cancel/isCancel.js":[function(require,module,exports) {
'use strict';

module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};

},{}],"node_modules/axios/lib/helpers/normalizeHeaderName.js":[function(require,module,exports) {
'use strict';

var utils = require('../utils');

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};

},{"../utils":"node_modules/axios/lib/utils.js"}],"node_modules/axios/lib/core/enhanceError.js":[function(require,module,exports) {
'use strict';

/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};

},{}],"node_modules/axios/lib/core/createError.js":[function(require,module,exports) {
'use strict';

var enhanceError = require('./enhanceError');

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};

},{"./enhanceError":"node_modules/axios/lib/core/enhanceError.js"}],"node_modules/axios/lib/core/settle.js":[function(require,module,exports) {
'use strict';

var createError = require('./createError');

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};

},{"./createError":"node_modules/axios/lib/core/createError.js"}],"node_modules/axios/lib/helpers/parseHeaders.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};

},{"./../utils":"node_modules/axios/lib/utils.js"}],"node_modules/axios/lib/helpers/isURLSameOrigin.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);

},{"./../utils":"node_modules/axios/lib/utils.js"}],"node_modules/axios/lib/helpers/cookies.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);

},{"./../utils":"node_modules/axios/lib/utils.js"}],"node_modules/axios/lib/adapters/xhr.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');
var settle = require('./../core/settle');
var buildURL = require('./../helpers/buildURL');
var parseHeaders = require('./../helpers/parseHeaders');
var isURLSameOrigin = require('./../helpers/isURLSameOrigin');
var createError = require('../core/createError');

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = require('./../helpers/cookies');

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};

},{"./../utils":"node_modules/axios/lib/utils.js","./../core/settle":"node_modules/axios/lib/core/settle.js","./../helpers/buildURL":"node_modules/axios/lib/helpers/buildURL.js","./../helpers/parseHeaders":"node_modules/axios/lib/helpers/parseHeaders.js","./../helpers/isURLSameOrigin":"node_modules/axios/lib/helpers/isURLSameOrigin.js","../core/createError":"node_modules/axios/lib/core/createError.js","./../helpers/cookies":"node_modules/axios/lib/helpers/cookies.js"}],"node_modules/process/browser.js":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"node_modules/axios/lib/defaults.js":[function(require,module,exports) {
var process = require("process");
'use strict';

var utils = require('./utils');
var normalizeHeaderName = require('./helpers/normalizeHeaderName');

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  // Only Node.JS has a process variable that is of [[Class]] process
  if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = require('./adapters/http');
  } else if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = require('./adapters/xhr');
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

},{"./utils":"node_modules/axios/lib/utils.js","./helpers/normalizeHeaderName":"node_modules/axios/lib/helpers/normalizeHeaderName.js","./adapters/http":"node_modules/axios/lib/adapters/xhr.js","./adapters/xhr":"node_modules/axios/lib/adapters/xhr.js","process":"node_modules/process/browser.js"}],"node_modules/axios/lib/helpers/isAbsoluteURL.js":[function(require,module,exports) {
'use strict';

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};

},{}],"node_modules/axios/lib/helpers/combineURLs.js":[function(require,module,exports) {
'use strict';

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};

},{}],"node_modules/axios/lib/core/dispatchRequest.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');
var transformData = require('./transformData');
var isCancel = require('../cancel/isCancel');
var defaults = require('../defaults');
var isAbsoluteURL = require('./../helpers/isAbsoluteURL');
var combineURLs = require('./../helpers/combineURLs');

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};

},{"./../utils":"node_modules/axios/lib/utils.js","./transformData":"node_modules/axios/lib/core/transformData.js","../cancel/isCancel":"node_modules/axios/lib/cancel/isCancel.js","../defaults":"node_modules/axios/lib/defaults.js","./../helpers/isAbsoluteURL":"node_modules/axios/lib/helpers/isAbsoluteURL.js","./../helpers/combineURLs":"node_modules/axios/lib/helpers/combineURLs.js"}],"node_modules/axios/lib/core/mergeConfig.js":[function(require,module,exports) {
'use strict';

var utils = require('../utils');

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  utils.forEach(['url', 'method', 'params', 'data'], function valueFromConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    }
  });

  utils.forEach(['headers', 'auth', 'proxy'], function mergeDeepProperties(prop) {
    if (utils.isObject(config2[prop])) {
      config[prop] = utils.deepMerge(config1[prop], config2[prop]);
    } else if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (utils.isObject(config1[prop])) {
      config[prop] = utils.deepMerge(config1[prop]);
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  utils.forEach([
    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength',
    'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken',
    'socketPath'
  ], function defaultToConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  return config;
};

},{"../utils":"node_modules/axios/lib/utils.js"}],"node_modules/axios/lib/core/Axios.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');
var buildURL = require('../helpers/buildURL');
var InterceptorManager = require('./InterceptorManager');
var dispatchRequest = require('./dispatchRequest');
var mergeConfig = require('./mergeConfig');

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);
  config.method = config.method ? config.method.toLowerCase() : 'get';

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;

},{"./../utils":"node_modules/axios/lib/utils.js","../helpers/buildURL":"node_modules/axios/lib/helpers/buildURL.js","./InterceptorManager":"node_modules/axios/lib/core/InterceptorManager.js","./dispatchRequest":"node_modules/axios/lib/core/dispatchRequest.js","./mergeConfig":"node_modules/axios/lib/core/mergeConfig.js"}],"node_modules/axios/lib/cancel/Cancel.js":[function(require,module,exports) {
'use strict';

/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;

},{}],"node_modules/axios/lib/cancel/CancelToken.js":[function(require,module,exports) {
'use strict';

var Cancel = require('./Cancel');

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;

},{"./Cancel":"node_modules/axios/lib/cancel/Cancel.js"}],"node_modules/axios/lib/helpers/spread.js":[function(require,module,exports) {
'use strict';

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};

},{}],"node_modules/axios/lib/axios.js":[function(require,module,exports) {
'use strict';

var utils = require('./utils');
var bind = require('./helpers/bind');
var Axios = require('./core/Axios');
var mergeConfig = require('./core/mergeConfig');
var defaults = require('./defaults');

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = require('./cancel/Cancel');
axios.CancelToken = require('./cancel/CancelToken');
axios.isCancel = require('./cancel/isCancel');

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = require('./helpers/spread');

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;

},{"./utils":"node_modules/axios/lib/utils.js","./helpers/bind":"node_modules/axios/lib/helpers/bind.js","./core/Axios":"node_modules/axios/lib/core/Axios.js","./core/mergeConfig":"node_modules/axios/lib/core/mergeConfig.js","./defaults":"node_modules/axios/lib/defaults.js","./cancel/Cancel":"node_modules/axios/lib/cancel/Cancel.js","./cancel/CancelToken":"node_modules/axios/lib/cancel/CancelToken.js","./cancel/isCancel":"node_modules/axios/lib/cancel/isCancel.js","./helpers/spread":"node_modules/axios/lib/helpers/spread.js"}],"node_modules/axios/index.js":[function(require,module,exports) {
module.exports = require('./lib/axios');
},{"./lib/axios":"node_modules/axios/lib/axios.js"}],"node_modules/moment/moment.js":[function(require,module,exports) {
var define;
var global = arguments[3];
//! moment.js

;(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks () {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback (callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return (Object.getOwnPropertyNames(obj).length === 0);
        } else {
            var k;
            for (k in obj) {
                if (obj.hasOwnProperty(k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty           : false,
            unusedTokens    : [],
            unusedInput     : [],
            overflow        : -2,
            charsLeftOver   : 0,
            nullInput       : false,
            invalidMonth    : null,
            invalidFormat   : false,
            userInvalidated : false,
            iso             : false,
            parsedDateParts : [],
            meridiem        : null,
            rfc2822         : false,
            weekdayMismatch : false
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this);
            var len = t.length >>> 0;

            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.weekdayMismatch &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated &&
                (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid = isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            }
            else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid (flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        }
        else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment (obj) {
        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
    }

    function absFloor (number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false &&
                (typeof console !==  'undefined') && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (var key in arguments[0]) {
                            arg += key + ': ' + arguments[0][key] + ', ';
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    function set (config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' + (/\d{1,2}/).source);
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) &&
                    !hasOwnProp(childConfig, prop) &&
                    isObject(parentConfig[prop])) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i, res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    };

    function calendar (key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS  : 'h:mm:ss A',
        LT   : 'h:mm A',
        L    : 'MM/DD/YYYY',
        LL   : 'MMMM D, YYYY',
        LLL  : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat (key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate () {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal (number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future : 'in %s',
        past   : '%s ago',
        s  : 'a few seconds',
        ss : '%d seconds',
        m  : 'a minute',
        mm : '%d minutes',
        h  : 'an hour',
        hh : '%d hours',
        d  : 'a day',
        dd : '%d days',
        M  : 'a month',
        MM : '%d months',
        y  : 'a year',
        yy : '%d years'
    };

    function relativeTime (number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return (isFunction(output)) ?
            output(number, withoutSuffix, string, isFuture) :
            output.replace(/%d/i, number);
    }

    function pastFuture (diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias (unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({unit: u, priority: priorities[u]});
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken (token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '', i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1         = /\d/;            //       0 - 9
    var match2         = /\d\d/;          //      00 - 99
    var match3         = /\d{3}/;         //     000 - 999
    var match4         = /\d{4}/;         //    0000 - 9999
    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
    var match1to2      = /\d\d?/;         //       0 - 99
    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
    var match1to3      = /\d{1,3}/;       //       0 - 999
    var match1to4      = /\d{1,4}/;       //       0 - 9999
    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

    var matchUnsigned  = /\d+/;           //       0 - inf
    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

    // any word (or two) characters or numbers including two/three word month in arabic.
    // includes scottish gaelic two word and hyphenated months
    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

    var regexes = {};

    function addRegexToken (token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
            return (isStrict && strictRegex) ? strictRegex : regex;
        };
    }

    function getParseRegexForToken (token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }));
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken (token, callback) {
        var i, func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken (token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY',   4],       0, 'year');
    addFormatToken(0, ['YYYYY',  5],       0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y',      matchSigned);
    addRegexToken('YY',     match1to2, match2);
    addRegexToken('YYYY',   match1to4, match4);
    addRegexToken('YYYYY',  match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear () {
        return isLeapYear(this.year());
    }

    function makeGetSet (unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get (mom, unit) {
        return mom.isValid() ?
            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
    }

    function set$1 (mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
            }
            else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet (units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }


    function stringSet (units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M',    match1to2);
    addRegexToken('MM',   match1to2, match2);
    addRegexToken('MMM',  function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths (m, format) {
        if (!m) {
            return isArray(this._months) ? this._months :
                this._months['standalone'];
        }
        return isArray(this._months) ? this._months[m.month()] :
            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort (m, format) {
        if (!m) {
            return isArray(this._monthsShort) ? this._monthsShort :
                this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse (monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth (mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth (value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth () {
        return daysInMonth(this.year(), this.month());
    }

    var defaultMonthsShortRegex = matchWord;
    function monthsShortRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ?
                this._monthsShortStrictRegex : this._monthsShortRegex;
        }
    }

    var defaultMonthsRegex = matchWord;
    function monthsRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ?
                this._monthsStrictRegex : this._monthsRegex;
        }
    }

    function computeMonthsParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    }

    function createDate (y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate (y) {
        var date;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            var args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear, resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek, resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w',  match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W',  match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek (mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek () {
        return this._week.dow;
    }

    function localeFirstDayOfYear () {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek (input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek (input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d',    match1to2);
    addRegexToken('e',    match1to2);
    addRegexToken('E',    match1to2);
    addRegexToken('dd',   function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd',   function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd',   function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays (ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays (m, format) {
        var weekdays = isArray(this._weekdays) ? this._weekdays :
            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];
        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)
            : (m) ? weekdays[m.day()] : weekdays;
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse (weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
            }
            if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    var defaultWeekdaysRegex = matchWord;
    function weekdaysRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ?
                this._weekdaysStrictRegex : this._weekdaysRegex;
        }
    }

    var defaultWeekdaysShortRegex = matchWord;
    function weekdaysShortRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ?
                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
    }

    var defaultWeekdaysMinRegex = matchWord;
    function weekdaysMinRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ?
                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
    }


    function computeWeekdaysParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom, minp, shortp, longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = this.weekdaysMin(mom, '');
            shortp = this.weekdaysShort(mom, '');
            longp = this.weekdays(mom, '');
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    function meridiem (token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem (isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a',  matchMeridiem);
    addRegexToken('A',  matchMeridiem);
    addRegexToken('H',  match1to2);
    addRegexToken('h',  match1to2);
    addRegexToken('k',  match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM (input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return ((input + '').toLowerCase().charAt(0) === 'p');
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }


    // MOMENTS

    // Setting the hour should keep the time, because the user explicitly
    // specified which hour they want. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    var getSetHour = makeGetSet('Hours', true);

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse
    };

    // internal storage for locale config files
    var locales = {};
    var localeFamilies = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null;
        // TODO: Find a better way to register and load all the locales in Node
        if (!locales[name] && (typeof module !== 'undefined') &&
                module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                var aliasedRequire = require;
                aliasedRequire('./locale/' + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {}
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale (key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            }
            else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            }
            else {
                if ((typeof console !==  'undefined') && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale (name, config) {
        if (config !== null) {
            var locale, parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride',
                        'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);


            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale, tmpLocale, parentConfig = baseConfig;
            // MERGE
            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
                parentConfig = tmpLocale._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow (m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray (config) {
        var i, date, input = [], currentDate, expectedWeekday, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            var curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

    var isoDates = [
        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
        ['YYYY-DDD', /\d{4}-\d{3}/],
        ['YYYY-MM', /\d{4}-\d\d/, false],
        ['YYYYYYMMDD', /[+-]\d{10}/],
        ['YYYYMMDD', /\d{8}/],
        // YYYYMM is NOT allowed by the standard
        ['GGGG[W]WWE', /\d{4}W\d{3}/],
        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
        ['YYYYDDD', /\d{7}/]
    ];

    // iso time formats and regexes
    var isoTimes = [
        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
        ['HH:mm', /\d\d:\d\d/],
        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
        ['HHmmss', /\d\d\d\d\d\d/],
        ['HHmm', /\d\d\d\d/],
        ['HH', /\d\d/]
    ];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    // date from iso format
    function configFromISO(config) {
        var i, l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime, dateFormat, timeFormat, tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10)
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
    };

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10);
            var m = hm % 100, h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));
        if (match) {
            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        // Final attempt, use Input Fallback
        hooks.createFromInputFallback(config);
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
        'discouraged and will be removed in an upcoming major release. Please refer to ' +
        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            // console.log('token', token, 'parsedInput', parsedInput,
            //         'regex', getParseRegexForToken(token, config));
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                }
                else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }


    function meridiemFixWrap (locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
            return obj && parseInt(obj, 10);
        });

        configFromArray(config);
    }

    function createFromConfig (config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig (config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        }  else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC (input, format, locale, strict, isUTC) {
        var c = {};

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if ((isObject(input) && isObjectEmpty(input)) ||
                (isArray(input) && input.length === 0)) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    var prototypeMax = deprecate(
        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +(new Date());
    };

    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

    function isDurationValid(m) {
        for (var key in m) {
            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                return false;
            }
        }

        var unitHasDecimal = false;
        for (var i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration (duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration (obj) {
        return obj instanceof Duration;
    }

    function absRound (number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // FORMATTING

    function offset (token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z',  matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher);

        if (matches === null) {
            return null;
        }

        var chunk   = matches[matches.length - 1] || [];
        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ?
          0 :
          parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset (m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset (input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone (input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC (keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal (keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset () {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            }
            else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset (input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime () {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted () {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted = this.isValid() &&
                compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal () {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset () {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc () {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    // and further modified to allow for strings containing both week and day
    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms : input._milliseconds,
                d  : input._days,
                M  : input._months
            };
        } else if (isNumber(input)) {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y  : 0,
                d  : toInt(match[DATE])                         * sign,
                h  : toInt(match[HOUR])                         * sign,
                m  : toInt(match[MINUTE])                       * sign,
                s  : toInt(match[SECOND])                       * sign,
                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
            };
        } else if (!!(match = isoRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y : parseIso(match[2], sign),
                M : parseIso(match[3], sign),
                w : parseIso(match[4], sign),
                d : parseIso(match[5], sign),
                h : parseIso(match[6], sign),
                m : parseIso(match[7], sign),
                s : parseIso(match[8], sign)
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso (inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return {milliseconds: 0, months: 0};
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract (mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add      = createAdder(1, 'add');
    var subtract = createAdder(-1, 'subtract');

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
    }

    function calendar$1 (time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse';

        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
    }

    function clone () {
        return new Moment(this);
    }

    function isAfter (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween (from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
    }

    function isSame (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
    }

    function isSameOrAfter (input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore (input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff (input, units, asFloat) {
        var that,
            zoneDelta,
            output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year': output = monthDiff(this, that) / 12; break;
            case 'month': output = monthDiff(this, that); break;
            case 'quarter': output = monthDiff(this, that) / 3; break;
            case 'second': output = (this - that) / 1e3; break; // 1000
            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default: output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff (a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString () {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true;
        var m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect () {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment';
        var zone = '';
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        var prefix = '[' + func + '("]';
        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
        var suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format (inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow (withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow (withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale (key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData () {
        return this._locale;
    }

    var MS_PER_SECOND = 1000;
    var MS_PER_MINUTE = 60 * MS_PER_SECOND;
    var MS_PER_HOUR = 60 * MS_PER_MINUTE;
    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return (dividend % divisor + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf () {
        return this._d.valueOf() - ((this._offset || 0) * 60000);
    }

    function unix () {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate () {
        return new Date(this.valueOf());
    }

    function toArray () {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject () {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function toJSON () {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2 () {
        return isValid(this);
    }

    function parsingFlags () {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt () {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        };
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken (token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg',     'weekYear');
    addWeekYearFormatToken('ggggg',    'weekYear');
    addWeekYearFormatToken('GGGG',  'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);


    // PARSING

    addRegexToken('G',      matchSigned);
    addRegexToken('g',      matchSigned);
    addRegexToken('GG',     match1to2, match2);
    addRegexToken('gg',     match1to2, match2);
    addRegexToken('GGGG',   match1to4, match4);
    addRegexToken('gggg',   match1to4, match4);
    addRegexToken('GGGGG',  match1to6, match6);
    addRegexToken('ggggg',  match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy);
    }

    function getSetISOWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input, this.isoWeek(), this.isoWeekday(), 1, 4);
    }

    function getISOWeeksInYear () {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear () {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter (input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D',  match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict ?
          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
          locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD',  match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear (input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m',  match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s',  match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });


    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S',    match1to3, match1);
    addRegexToken('SS',   match1to3, match2);
    addRegexToken('SSS',  match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }
    // MOMENTS

    var getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z',  0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr () {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName () {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add               = add;
    proto.calendar          = calendar$1;
    proto.clone             = clone;
    proto.diff              = diff;
    proto.endOf             = endOf;
    proto.format            = format;
    proto.from              = from;
    proto.fromNow           = fromNow;
    proto.to                = to;
    proto.toNow             = toNow;
    proto.get               = stringGet;
    proto.invalidAt         = invalidAt;
    proto.isAfter           = isAfter;
    proto.isBefore          = isBefore;
    proto.isBetween         = isBetween;
    proto.isSame            = isSame;
    proto.isSameOrAfter     = isSameOrAfter;
    proto.isSameOrBefore    = isSameOrBefore;
    proto.isValid           = isValid$2;
    proto.lang              = lang;
    proto.locale            = locale;
    proto.localeData        = localeData;
    proto.max               = prototypeMax;
    proto.min               = prototypeMin;
    proto.parsingFlags      = parsingFlags;
    proto.set               = stringSet;
    proto.startOf           = startOf;
    proto.subtract          = subtract;
    proto.toArray           = toArray;
    proto.toObject          = toObject;
    proto.toDate            = toDate;
    proto.toISOString       = toISOString;
    proto.inspect           = inspect;
    proto.toJSON            = toJSON;
    proto.toString          = toString;
    proto.unix              = unix;
    proto.valueOf           = valueOf;
    proto.creationData      = creationData;
    proto.year       = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear    = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month       = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week           = proto.weeks        = getSetWeek;
    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
    proto.weeksInYear    = getWeeksInYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.date       = getSetDayOfMonth;
    proto.day        = proto.days             = getSetDayOfWeek;
    proto.weekday    = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear  = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset            = getSetOffset;
    proto.utc                  = setOffsetToUTC;
    proto.local                = setOffsetToLocal;
    proto.parseZone            = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST                = isDaylightSavingTime;
    proto.isLocal              = isLocal;
    proto.isUtcOffset          = isUtcOffset;
    proto.isUtc                = isUtc;
    proto.isUTC                = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

    function createUnix (input) {
        return createLocal(input * 1000);
    }

    function createInZone () {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat (string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar        = calendar;
    proto$1.longDateFormat  = longDateFormat;
    proto$1.invalidDate     = invalidDate;
    proto$1.ordinal         = ordinal;
    proto$1.preparse        = preParsePostFormat;
    proto$1.postformat      = preParsePostFormat;
    proto$1.relativeTime    = relativeTime;
    proto$1.pastFuture      = pastFuture;
    proto$1.set             = set;

    proto$1.months            =        localeMonths;
    proto$1.monthsShort       =        localeMonthsShort;
    proto$1.monthsParse       =        localeMonthsParse;
    proto$1.monthsRegex       = monthsRegex;
    proto$1.monthsShortRegex  = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays       =        localeWeekdays;
    proto$1.weekdaysMin    =        localeWeekdaysMin;
    proto$1.weekdaysShort  =        localeWeekdaysShort;
    proto$1.weekdaysParse  =        localeWeekdaysParse;

    proto$1.weekdaysRegex       =        weekdaysRegex;
    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1 (format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl (format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl (localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths (format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort (format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    // Side effect imports

    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

    var mathAbs = Math.abs;

    function abs () {
        var data           = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days         = mathAbs(this._days);
        this._months       = mathAbs(this._months);

        data.milliseconds  = mathAbs(data.milliseconds);
        data.seconds       = mathAbs(data.seconds);
        data.minutes       = mathAbs(data.minutes);
        data.hours         = mathAbs(data.hours);
        data.months        = mathAbs(data.months);
        data.years         = mathAbs(data.years);

        return this;
    }

    function addSubtract$1 (duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days         += direction * other._days;
        duration._months       += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1 (input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1 (input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil (number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble () {
        var milliseconds = this._milliseconds;
        var days         = this._days;
        var months       = this._months;
        var data         = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0))) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds           = absFloor(milliseconds / 1000);
        data.seconds      = seconds % 60;

        minutes           = absFloor(seconds / 60);
        data.minutes      = minutes % 60;

        hours             = absFloor(minutes / 60);
        data.hours        = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days   = days;
        data.months = months;
        data.years  = years;

        return this;
    }

    function daysToMonths (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
    }

    function monthsToDays (months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
    }

    function as (units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':   return months;
                case 'quarter': return months / 3;
                case 'year':    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week'   : return days / 7     + milliseconds / 6048e5;
                case 'day'    : return days         + milliseconds / 864e5;
                case 'hour'   : return days * 24    + milliseconds / 36e5;
                case 'minute' : return days * 1440  + milliseconds / 6e4;
                case 'second' : return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                default: throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1 () {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs (alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds      = makeAs('s');
    var asMinutes      = makeAs('m');
    var asHours        = makeAs('h');
    var asDays         = makeAs('d');
    var asWeeks        = makeAs('w');
    var asMonths       = makeAs('M');
    var asQuarters     = makeAs('Q');
    var asYears        = makeAs('y');

    function clone$1 () {
        return createDuration(this);
    }

    function get$2 (units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds      = makeGetter('seconds');
    var minutes      = makeGetter('minutes');
    var hours        = makeGetter('hours');
    var days         = makeGetter('days');
    var months       = makeGetter('months');
    var years        = makeGetter('years');

    function weeks () {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        ss: 44,         // a few seconds to seconds
        s : 45,         // seconds to minute
        m : 45,         // minutes to hour
        h : 22,         // hours to day
        d : 26,         // days to month
        M : 11          // months to year
    };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds  = round(duration.as('s'));
        var minutes  = round(duration.as('m'));
        var hours    = round(duration.as('h'));
        var days     = round(duration.as('d'));
        var months   = round(duration.as('M'));
        var years    = round(duration.as('y'));

        var a = seconds <= thresholds.ss && ['s', seconds]  ||
                seconds < thresholds.s   && ['ss', seconds] ||
                minutes <= 1             && ['m']           ||
                minutes < thresholds.m   && ['mm', minutes] ||
                hours   <= 1             && ['h']           ||
                hours   < thresholds.h   && ['hh', hours]   ||
                days    <= 1             && ['d']           ||
                days    < thresholds.d   && ['dd', days]    ||
                months  <= 1             && ['M']           ||
                months  < thresholds.M   && ['MM', months]  ||
                years   <= 1             && ['y']           || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding (roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof(roundingFunction) === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold (threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize (withSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return ((x > 0) - (x < 0)) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000;
        var days         = abs$1(this._days);
        var months       = abs$1(this._months);
        var minutes, hours, years;

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes           = absFloor(seconds / 60);
        hours             = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years  = absFloor(months / 12);
        months %= 12;


        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
        var total = this.asSeconds();

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        var totalSign = total < 0 ? '-' : '';
        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return totalSign + 'P' +
            (Y ? ymSign + Y + 'Y' : '') +
            (M ? ymSign + M + 'M' : '') +
            (D ? daysSign + D + 'D' : '') +
            ((h || m || s) ? 'T' : '') +
            (h ? hmsSign + h + 'H' : '') +
            (m ? hmsSign + m + 'M' : '') +
            (s ? hmsSign + s + 'S' : '');
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid        = isValid$1;
    proto$2.abs            = abs;
    proto$2.add            = add$1;
    proto$2.subtract       = subtract$1;
    proto$2.as             = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds      = asSeconds;
    proto$2.asMinutes      = asMinutes;
    proto$2.asHours        = asHours;
    proto$2.asDays         = asDays;
    proto$2.asWeeks        = asWeeks;
    proto$2.asMonths       = asMonths;
    proto$2.asQuarters     = asQuarters;
    proto$2.asYears        = asYears;
    proto$2.valueOf        = valueOf$1;
    proto$2._bubble        = bubble;
    proto$2.clone          = clone$1;
    proto$2.get            = get$2;
    proto$2.milliseconds   = milliseconds;
    proto$2.seconds        = seconds;
    proto$2.minutes        = minutes;
    proto$2.hours          = hours;
    proto$2.days           = days;
    proto$2.weeks          = weeks;
    proto$2.months         = months;
    proto$2.years          = years;
    proto$2.humanize       = humanize;
    proto$2.toISOString    = toISOString$1;
    proto$2.toString       = toISOString$1;
    proto$2.toJSON         = toISOString$1;
    proto$2.locale         = locale;
    proto$2.localeData     = localeData;

    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
    proto$2.lang = lang;

    // Side effect imports

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    // Side effect imports


    hooks.version = '2.24.0';

    setHookCallback(createLocal);

    hooks.fn                    = proto;
    hooks.min                   = min;
    hooks.max                   = max;
    hooks.now                   = now;
    hooks.utc                   = createUTC;
    hooks.unix                  = createUnix;
    hooks.months                = listMonths;
    hooks.isDate                = isDate;
    hooks.locale                = getSetGlobalLocale;
    hooks.invalid               = createInvalid;
    hooks.duration              = createDuration;
    hooks.isMoment              = isMoment;
    hooks.weekdays              = listWeekdays;
    hooks.parseZone             = createInZone;
    hooks.localeData            = getLocale;
    hooks.isDuration            = isDuration;
    hooks.monthsShort           = listMonthsShort;
    hooks.weekdaysMin           = listWeekdaysMin;
    hooks.defineLocale          = defineLocale;
    hooks.updateLocale          = updateLocale;
    hooks.locales               = listLocales;
    hooks.weekdaysShort         = listWeekdaysShort;
    hooks.normalizeUnits        = normalizeUnits;
    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat        = getCalendarFormat;
    hooks.prototype             = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD',                             // <input type="date" />
        TIME: 'HH:mm',                                  // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW',                             // <input type="week" />
        MONTH: 'YYYY-MM'                                // <input type="month" />
    };

    return hooks;

})));

},{}],"node_modules/parcel-bundler/src/builtins/bundle-url.js":[function(require,module,exports) {
var bundleURL = null;

function getBundleURLCached() {
  if (!bundleURL) {
    bundleURL = getBundleURL();
  }

  return bundleURL;
}

function getBundleURL() {
  // Attempt to find the URL of the current script and use that as the base URL
  try {
    throw new Error();
  } catch (err) {
    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\/\/[^)\n]+/g);

    if (matches) {
      return getBaseURL(matches[0]);
    }
  }

  return '/';
}

function getBaseURL(url) {
  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\/\/.+)\/[^/]+$/, '$1') + '/';
}

exports.getBundleURL = getBundleURLCached;
exports.getBaseURL = getBaseURL;
},{}],"node_modules/parcel-bundler/src/builtins/css-loader.js":[function(require,module,exports) {
var bundle = require('./bundle-url');

function updateLink(link) {
  var newLink = link.cloneNode();

  newLink.onload = function () {
    link.remove();
  };

  newLink.href = link.href.split('?')[0] + '?' + Date.now();
  link.parentNode.insertBefore(newLink, link.nextSibling);
}

var cssTimeout = null;

function reloadCSS() {
  if (cssTimeout) {
    return;
  }

  cssTimeout = setTimeout(function () {
    var links = document.querySelectorAll('link[rel="stylesheet"]');

    for (var i = 0; i < links.length; i++) {
      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {
        updateLink(links[i]);
      }
    }

    cssTimeout = null;
  }, 50);
}

module.exports = reloadCSS;
},{"./bundle-url":"node_modules/parcel-bundler/src/builtins/bundle-url.js"}],"node_modules/vue-hot-reload-api/dist/index.js":[function(require,module,exports) {
var Vue // late bind
var version
var map = Object.create(null)
if (typeof window !== 'undefined') {
  window.__VUE_HOT_MAP__ = map
}
var installed = false
var isBrowserify = false
var initHookName = 'beforeCreate'

exports.install = function (vue, browserify) {
  if (installed) { return }
  installed = true

  Vue = vue.__esModule ? vue.default : vue
  version = Vue.version.split('.').map(Number)
  isBrowserify = browserify

  // compat with < 2.0.0-alpha.7
  if (Vue.config._lifecycleHooks.indexOf('init') > -1) {
    initHookName = 'init'
  }

  exports.compatible = version[0] >= 2
  if (!exports.compatible) {
    console.warn(
      '[HMR] You are using a version of vue-hot-reload-api that is ' +
        'only compatible with Vue.js core ^2.0.0.'
    )
    return
  }
}

/**
 * Create a record for a hot module, which keeps track of its constructor
 * and instances
 *
 * @param {String} id
 * @param {Object} options
 */

exports.createRecord = function (id, options) {
  if(map[id]) { return }

  var Ctor = null
  if (typeof options === 'function') {
    Ctor = options
    options = Ctor.options
  }
  makeOptionsHot(id, options)
  map[id] = {
    Ctor: Ctor,
    options: options,
    instances: []
  }
}

/**
 * Check if module is recorded
 *
 * @param {String} id
 */

exports.isRecorded = function (id) {
  return typeof map[id] !== 'undefined'
}

/**
 * Make a Component options object hot.
 *
 * @param {String} id
 * @param {Object} options
 */

function makeOptionsHot(id, options) {
  if (options.functional) {
    var render = options.render
    options.render = function (h, ctx) {
      var instances = map[id].instances
      if (ctx && instances.indexOf(ctx.parent) < 0) {
        instances.push(ctx.parent)
      }
      return render(h, ctx)
    }
  } else {
    injectHook(options, initHookName, function() {
      var record = map[id]
      if (!record.Ctor) {
        record.Ctor = this.constructor
      }
      record.instances.push(this)
    })
    injectHook(options, 'beforeDestroy', function() {
      var instances = map[id].instances
      instances.splice(instances.indexOf(this), 1)
    })
  }
}

/**
 * Inject a hook to a hot reloadable component so that
 * we can keep track of it.
 *
 * @param {Object} options
 * @param {String} name
 * @param {Function} hook
 */

function injectHook(options, name, hook) {
  var existing = options[name]
  options[name] = existing
    ? Array.isArray(existing) ? existing.concat(hook) : [existing, hook]
    : [hook]
}

function tryWrap(fn) {
  return function (id, arg) {
    try {
      fn(id, arg)
    } catch (e) {
      console.error(e)
      console.warn(
        'Something went wrong during Vue component hot-reload. Full reload required.'
      )
    }
  }
}

function updateOptions (oldOptions, newOptions) {
  for (var key in oldOptions) {
    if (!(key in newOptions)) {
      delete oldOptions[key]
    }
  }
  for (var key$1 in newOptions) {
    oldOptions[key$1] = newOptions[key$1]
  }
}

exports.rerender = tryWrap(function (id, options) {
  var record = map[id]
  if (!options) {
    record.instances.slice().forEach(function (instance) {
      instance.$forceUpdate()
    })
    return
  }
  if (typeof options === 'function') {
    options = options.options
  }
  if (record.Ctor) {
    record.Ctor.options.render = options.render
    record.Ctor.options.staticRenderFns = options.staticRenderFns
    record.instances.slice().forEach(function (instance) {
      instance.$options.render = options.render
      instance.$options.staticRenderFns = options.staticRenderFns
      // reset static trees
      // pre 2.5, all static trees are cached together on the instance
      if (instance._staticTrees) {
        instance._staticTrees = []
      }
      // 2.5.0
      if (Array.isArray(record.Ctor.options.cached)) {
        record.Ctor.options.cached = []
      }
      // 2.5.3
      if (Array.isArray(instance.$options.cached)) {
        instance.$options.cached = []
      }

      // post 2.5.4: v-once trees are cached on instance._staticTrees.
      // Pure static trees are cached on the staticRenderFns array
      // (both already reset above)

      // 2.6: temporarily mark rendered scoped slots as unstable so that
      // child components can be forced to update
      var restore = patchScopedSlots(instance)
      instance.$forceUpdate()
      instance.$nextTick(restore)
    })
  } else {
    // functional or no instance created yet
    record.options.render = options.render
    record.options.staticRenderFns = options.staticRenderFns

    // handle functional component re-render
    if (record.options.functional) {
      // rerender with full options
      if (Object.keys(options).length > 2) {
        updateOptions(record.options, options)
      } else {
        // template-only rerender.
        // need to inject the style injection code for CSS modules
        // to work properly.
        var injectStyles = record.options._injectStyles
        if (injectStyles) {
          var render = options.render
          record.options.render = function (h, ctx) {
            injectStyles.call(ctx)
            return render(h, ctx)
          }
        }
      }
      record.options._Ctor = null
      // 2.5.3
      if (Array.isArray(record.options.cached)) {
        record.options.cached = []
      }
      record.instances.slice().forEach(function (instance) {
        instance.$forceUpdate()
      })
    }
  }
})

exports.reload = tryWrap(function (id, options) {
  var record = map[id]
  if (options) {
    if (typeof options === 'function') {
      options = options.options
    }
    makeOptionsHot(id, options)
    if (record.Ctor) {
      if (version[1] < 2) {
        // preserve pre 2.2 behavior for global mixin handling
        record.Ctor.extendOptions = options
      }
      var newCtor = record.Ctor.super.extend(options)
      // prevent record.options._Ctor from being overwritten accidentally
      newCtor.options._Ctor = record.options._Ctor
      record.Ctor.options = newCtor.options
      record.Ctor.cid = newCtor.cid
      record.Ctor.prototype = newCtor.prototype
      if (newCtor.release) {
        // temporary global mixin strategy used in < 2.0.0-alpha.6
        newCtor.release()
      }
    } else {
      updateOptions(record.options, options)
    }
  }
  record.instances.slice().forEach(function (instance) {
    if (instance.$vnode && instance.$vnode.context) {
      instance.$vnode.context.$forceUpdate()
    } else {
      console.warn(
        'Root or manually mounted instance modified. Full reload required.'
      )
    }
  })
})

// 2.6 optimizes template-compiled scoped slots and skips updates if child
// only uses scoped slots. We need to patch the scoped slots resolving helper
// to temporarily mark all scoped slots as unstable in order to force child
// updates.
function patchScopedSlots (instance) {
  if (!instance._u) { return }
  // https://github.com/vuejs/vue/blob/dev/src/core/instance/render-helpers/resolve-scoped-slots.js
  var original = instance._u
  instance._u = function (slots) {
    try {
      // 2.6.4 ~ 2.6.6
      return original(slots, true)
    } catch (e) {
      // 2.5 / >= 2.6.7
      return original(slots, null, true)
    }
  }
  return function () {
    instance._u = original
  }
}

},{}],"src/Library.vue":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _axios = _interopRequireDefault(require("axios"));

var _moment = _interopRequireDefault(require("moment"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = {
  components: {},
  name: 'Library',
  props: [],
  data: function data() {
    return {
      contents: []
    };
  },
  mounted: function mounted() {
    this.getContents();
  },
  methods: {
    deleteContent: function deleteContent(value) {
      var _this = this;

      var url = this.$buildurl("content/" + value);

      _axios.default.delete(url).then(function (response) {
        _this.getContents();
      });
    },
    getContents: function getContents() {
      var _this2 = this;

      var url = this.$buildurl("content");

      _axios.default.get(url).then(function (response) {
        _this2.contents.splice(0);

        response.data.forEach(function (content, index) {
          _this2.contents.push(content);
        });
      });

      setTimeout(function () {
        this.getContents();
      }, 60000);
    }
  }
};
exports.default = _default;
        var $3473c7 = exports.default || module.exports;
      
      if (typeof $3473c7 === 'function') {
        $3473c7 = $3473c7.options;
      }
    
        /* template */
        Object.assign($3473c7, (function () {
          var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _vm.contents.length == 0 ? _c("div", [_vm._v("No Content")]) : _vm._e(),
      _vm._v(" "),
      _vm._l(_vm.contents, function(content) {
        return _c(
          "md-card",
          [
            _c("div", { staticClass: "md-title" }, [
              _vm._v(_vm._s(content.local_path))
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "md-subhead" }, [
              _vm._v(_vm._s(content.download_date))
            ]),
            _vm._v(" "),
            _c(
              "md-card-actions",
              [
                _c(
                  "md-button",
                  {
                    on: {
                      click: function($event) {
                        return _vm.deleteContent(content.name)
                      }
                    }
                  },
                  [_vm._v("Delete")]
                )
              ],
              1
            )
          ],
          1
        )
      })
    ],
    2
  )
}
var staticRenderFns = []
render._withStripped = true

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: null,
            functional: undefined
          };
        })());
      
    /* hot reload */
    (function () {
      if (module.hot) {
        var api = require('vue-hot-reload-api');
        api.install(require('vue'));
        if (api.compatible) {
          module.hot.accept();
          if (!module.hot.data) {
            api.createRecord('$3473c7', $3473c7);
          } else {
            api.reload('$3473c7', $3473c7);
          }
        }

        
        var reloadCSS = require('_css_loader');
        module.hot.dispose(reloadCSS);
        module.hot.accept(reloadCSS);
      
      }
    })();
},{"axios":"node_modules/axios/index.js","moment":"node_modules/moment/moment.js","_css_loader":"node_modules/parcel-bundler/src/builtins/css-loader.js","vue-hot-reload-api":"node_modules/vue-hot-reload-api/dist/index.js","vue":"node_modules/vue/dist/vue.runtime.esm.js"}],"node_modules/es6-promise/dist/es6-promise.js":[function(require,module,exports) {
var define;
var global = arguments[3];
var process = require("process");
/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   v4.2.8+1e68dce6
 */

(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.ES6Promise = factory());
}(this, (function () { 'use strict';

function objectOrFunction(x) {
  var type = typeof x;
  return x !== null && (type === 'object' || type === 'function');
}

function isFunction(x) {
  return typeof x === 'function';
}



var _isArray = void 0;
if (Array.isArray) {
  _isArray = Array.isArray;
} else {
  _isArray = function (x) {
    return Object.prototype.toString.call(x) === '[object Array]';
  };
}

var isArray = _isArray;

var len = 0;
var vertxNext = void 0;
var customSchedulerFn = void 0;

var asap = function asap(callback, arg) {
  queue[len] = callback;
  queue[len + 1] = arg;
  len += 2;
  if (len === 2) {
    // If len is 2, that means that we need to schedule an async flush.
    // If additional callbacks are queued before the queue is flushed, they
    // will be processed by this flush that we are scheduling.
    if (customSchedulerFn) {
      customSchedulerFn(flush);
    } else {
      scheduleFlush();
    }
  }
};

function setScheduler(scheduleFn) {
  customSchedulerFn = scheduleFn;
}

function setAsap(asapFn) {
  asap = asapFn;
}

var browserWindow = typeof window !== 'undefined' ? window : undefined;
var browserGlobal = browserWindow || {};
var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;
var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';

// test for web worker but not in IE10
var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';

// node
function useNextTick() {
  // node version 0.10.x displays a deprecation warning when nextTick is used recursively
  // see https://github.com/cujojs/when/issues/410 for details
  return function () {
    return process.nextTick(flush);
  };
}

// vertx
function useVertxTimer() {
  if (typeof vertxNext !== 'undefined') {
    return function () {
      vertxNext(flush);
    };
  }

  return useSetTimeout();
}

function useMutationObserver() {
  var iterations = 0;
  var observer = new BrowserMutationObserver(flush);
  var node = document.createTextNode('');
  observer.observe(node, { characterData: true });

  return function () {
    node.data = iterations = ++iterations % 2;
  };
}

// web worker
function useMessageChannel() {
  var channel = new MessageChannel();
  channel.port1.onmessage = flush;
  return function () {
    return channel.port2.postMessage(0);
  };
}

function useSetTimeout() {
  // Store setTimeout reference so es6-promise will be unaffected by
  // other code modifying setTimeout (like sinon.useFakeTimers())
  var globalSetTimeout = setTimeout;
  return function () {
    return globalSetTimeout(flush, 1);
  };
}

var queue = new Array(1000);
function flush() {
  for (var i = 0; i < len; i += 2) {
    var callback = queue[i];
    var arg = queue[i + 1];

    callback(arg);

    queue[i] = undefined;
    queue[i + 1] = undefined;
  }

  len = 0;
}

function attemptVertx() {
  try {
    var vertx = Function('return this')().require('vertx');
    vertxNext = vertx.runOnLoop || vertx.runOnContext;
    return useVertxTimer();
  } catch (e) {
    return useSetTimeout();
  }
}

var scheduleFlush = void 0;
// Decide what async method to use to triggering processing of queued callbacks:
if (isNode) {
  scheduleFlush = useNextTick();
} else if (BrowserMutationObserver) {
  scheduleFlush = useMutationObserver();
} else if (isWorker) {
  scheduleFlush = useMessageChannel();
} else if (browserWindow === undefined && typeof require === 'function') {
  scheduleFlush = attemptVertx();
} else {
  scheduleFlush = useSetTimeout();
}

function then(onFulfillment, onRejection) {
  var parent = this;

  var child = new this.constructor(noop);

  if (child[PROMISE_ID] === undefined) {
    makePromise(child);
  }

  var _state = parent._state;


  if (_state) {
    var callback = arguments[_state - 1];
    asap(function () {
      return invokeCallback(_state, child, callback, parent._result);
    });
  } else {
    subscribe(parent, child, onFulfillment, onRejection);
  }

  return child;
}

/**
  `Promise.resolve` returns a promise that will become resolved with the
  passed `value`. It is shorthand for the following:

  ```javascript
  let promise = new Promise(function(resolve, reject){
    resolve(1);
  });

  promise.then(function(value){
    // value === 1
  });
  ```

  Instead of writing the above, your code now simply becomes the following:

  ```javascript
  let promise = Promise.resolve(1);

  promise.then(function(value){
    // value === 1
  });
  ```

  @method resolve
  @static
  @param {Any} value value that the returned promise will be resolved with
  Useful for tooling.
  @return {Promise} a promise that will become fulfilled with the given
  `value`
*/
function resolve$1(object) {
  /*jshint validthis:true */
  var Constructor = this;

  if (object && typeof object === 'object' && object.constructor === Constructor) {
    return object;
  }

  var promise = new Constructor(noop);
  resolve(promise, object);
  return promise;
}

var PROMISE_ID = Math.random().toString(36).substring(2);

function noop() {}

var PENDING = void 0;
var FULFILLED = 1;
var REJECTED = 2;

function selfFulfillment() {
  return new TypeError("You cannot resolve a promise with itself");
}

function cannotReturnOwn() {
  return new TypeError('A promises callback cannot return that same promise.');
}

function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {
  try {
    then$$1.call(value, fulfillmentHandler, rejectionHandler);
  } catch (e) {
    return e;
  }
}

function handleForeignThenable(promise, thenable, then$$1) {
  asap(function (promise) {
    var sealed = false;
    var error = tryThen(then$$1, thenable, function (value) {
      if (sealed) {
        return;
      }
      sealed = true;
      if (thenable !== value) {
        resolve(promise, value);
      } else {
        fulfill(promise, value);
      }
    }, function (reason) {
      if (sealed) {
        return;
      }
      sealed = true;

      reject(promise, reason);
    }, 'Settle: ' + (promise._label || ' unknown promise'));

    if (!sealed && error) {
      sealed = true;
      reject(promise, error);
    }
  }, promise);
}

function handleOwnThenable(promise, thenable) {
  if (thenable._state === FULFILLED) {
    fulfill(promise, thenable._result);
  } else if (thenable._state === REJECTED) {
    reject(promise, thenable._result);
  } else {
    subscribe(thenable, undefined, function (value) {
      return resolve(promise, value);
    }, function (reason) {
      return reject(promise, reason);
    });
  }
}

function handleMaybeThenable(promise, maybeThenable, then$$1) {
  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {
    handleOwnThenable(promise, maybeThenable);
  } else {
    if (then$$1 === undefined) {
      fulfill(promise, maybeThenable);
    } else if (isFunction(then$$1)) {
      handleForeignThenable(promise, maybeThenable, then$$1);
    } else {
      fulfill(promise, maybeThenable);
    }
  }
}

function resolve(promise, value) {
  if (promise === value) {
    reject(promise, selfFulfillment());
  } else if (objectOrFunction(value)) {
    var then$$1 = void 0;
    try {
      then$$1 = value.then;
    } catch (error) {
      reject(promise, error);
      return;
    }
    handleMaybeThenable(promise, value, then$$1);
  } else {
    fulfill(promise, value);
  }
}

function publishRejection(promise) {
  if (promise._onerror) {
    promise._onerror(promise._result);
  }

  publish(promise);
}

function fulfill(promise, value) {
  if (promise._state !== PENDING) {
    return;
  }

  promise._result = value;
  promise._state = FULFILLED;

  if (promise._subscribers.length !== 0) {
    asap(publish, promise);
  }
}

function reject(promise, reason) {
  if (promise._state !== PENDING) {
    return;
  }
  promise._state = REJECTED;
  promise._result = reason;

  asap(publishRejection, promise);
}

function subscribe(parent, child, onFulfillment, onRejection) {
  var _subscribers = parent._subscribers;
  var length = _subscribers.length;


  parent._onerror = null;

  _subscribers[length] = child;
  _subscribers[length + FULFILLED] = onFulfillment;
  _subscribers[length + REJECTED] = onRejection;

  if (length === 0 && parent._state) {
    asap(publish, parent);
  }
}

function publish(promise) {
  var subscribers = promise._subscribers;
  var settled = promise._state;

  if (subscribers.length === 0) {
    return;
  }

  var child = void 0,
      callback = void 0,
      detail = promise._result;

  for (var i = 0; i < subscribers.length; i += 3) {
    child = subscribers[i];
    callback = subscribers[i + settled];

    if (child) {
      invokeCallback(settled, child, callback, detail);
    } else {
      callback(detail);
    }
  }

  promise._subscribers.length = 0;
}

function invokeCallback(settled, promise, callback, detail) {
  var hasCallback = isFunction(callback),
      value = void 0,
      error = void 0,
      succeeded = true;

  if (hasCallback) {
    try {
      value = callback(detail);
    } catch (e) {
      succeeded = false;
      error = e;
    }

    if (promise === value) {
      reject(promise, cannotReturnOwn());
      return;
    }
  } else {
    value = detail;
  }

  if (promise._state !== PENDING) {
    // noop
  } else if (hasCallback && succeeded) {
    resolve(promise, value);
  } else if (succeeded === false) {
    reject(promise, error);
  } else if (settled === FULFILLED) {
    fulfill(promise, value);
  } else if (settled === REJECTED) {
    reject(promise, value);
  }
}

function initializePromise(promise, resolver) {
  try {
    resolver(function resolvePromise(value) {
      resolve(promise, value);
    }, function rejectPromise(reason) {
      reject(promise, reason);
    });
  } catch (e) {
    reject(promise, e);
  }
}

var id = 0;
function nextId() {
  return id++;
}

function makePromise(promise) {
  promise[PROMISE_ID] = id++;
  promise._state = undefined;
  promise._result = undefined;
  promise._subscribers = [];
}

function validationError() {
  return new Error('Array Methods must be provided an Array');
}

var Enumerator = function () {
  function Enumerator(Constructor, input) {
    this._instanceConstructor = Constructor;
    this.promise = new Constructor(noop);

    if (!this.promise[PROMISE_ID]) {
      makePromise(this.promise);
    }

    if (isArray(input)) {
      this.length = input.length;
      this._remaining = input.length;

      this._result = new Array(this.length);

      if (this.length === 0) {
        fulfill(this.promise, this._result);
      } else {
        this.length = this.length || 0;
        this._enumerate(input);
        if (this._remaining === 0) {
          fulfill(this.promise, this._result);
        }
      }
    } else {
      reject(this.promise, validationError());
    }
  }

  Enumerator.prototype._enumerate = function _enumerate(input) {
    for (var i = 0; this._state === PENDING && i < input.length; i++) {
      this._eachEntry(input[i], i);
    }
  };

  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {
    var c = this._instanceConstructor;
    var resolve$$1 = c.resolve;


    if (resolve$$1 === resolve$1) {
      var _then = void 0;
      var error = void 0;
      var didError = false;
      try {
        _then = entry.then;
      } catch (e) {
        didError = true;
        error = e;
      }

      if (_then === then && entry._state !== PENDING) {
        this._settledAt(entry._state, i, entry._result);
      } else if (typeof _then !== 'function') {
        this._remaining--;
        this._result[i] = entry;
      } else if (c === Promise$1) {
        var promise = new c(noop);
        if (didError) {
          reject(promise, error);
        } else {
          handleMaybeThenable(promise, entry, _then);
        }
        this._willSettleAt(promise, i);
      } else {
        this._willSettleAt(new c(function (resolve$$1) {
          return resolve$$1(entry);
        }), i);
      }
    } else {
      this._willSettleAt(resolve$$1(entry), i);
    }
  };

  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {
    var promise = this.promise;


    if (promise._state === PENDING) {
      this._remaining--;

      if (state === REJECTED) {
        reject(promise, value);
      } else {
        this._result[i] = value;
      }
    }

    if (this._remaining === 0) {
      fulfill(promise, this._result);
    }
  };

  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {
    var enumerator = this;

    subscribe(promise, undefined, function (value) {
      return enumerator._settledAt(FULFILLED, i, value);
    }, function (reason) {
      return enumerator._settledAt(REJECTED, i, reason);
    });
  };

  return Enumerator;
}();

/**
  `Promise.all` accepts an array of promises, and returns a new promise which
  is fulfilled with an array of fulfillment values for the passed promises, or
  rejected with the reason of the first passed promise to be rejected. It casts all
  elements of the passed iterable to promises as it runs this algorithm.

  Example:

  ```javascript
  let promise1 = resolve(1);
  let promise2 = resolve(2);
  let promise3 = resolve(3);
  let promises = [ promise1, promise2, promise3 ];

  Promise.all(promises).then(function(array){
    // The array here would be [ 1, 2, 3 ];
  });
  ```

  If any of the `promises` given to `all` are rejected, the first promise
  that is rejected will be given as an argument to the returned promises's
  rejection handler. For example:

  Example:

  ```javascript
  let promise1 = resolve(1);
  let promise2 = reject(new Error("2"));
  let promise3 = reject(new Error("3"));
  let promises = [ promise1, promise2, promise3 ];

  Promise.all(promises).then(function(array){
    // Code here never runs because there are rejected promises!
  }, function(error) {
    // error.message === "2"
  });
  ```

  @method all
  @static
  @param {Array} entries array of promises
  @param {String} label optional string for labeling the promise.
  Useful for tooling.
  @return {Promise} promise that is fulfilled when all `promises` have been
  fulfilled, or rejected if any of them become rejected.
  @static
*/
function all(entries) {
  return new Enumerator(this, entries).promise;
}

/**
  `Promise.race` returns a new promise which is settled in the same way as the
  first passed promise to settle.

  Example:

  ```javascript
  let promise1 = new Promise(function(resolve, reject){
    setTimeout(function(){
      resolve('promise 1');
    }, 200);
  });

  let promise2 = new Promise(function(resolve, reject){
    setTimeout(function(){
      resolve('promise 2');
    }, 100);
  });

  Promise.race([promise1, promise2]).then(function(result){
    // result === 'promise 2' because it was resolved before promise1
    // was resolved.
  });
  ```

  `Promise.race` is deterministic in that only the state of the first
  settled promise matters. For example, even if other promises given to the
  `promises` array argument are resolved, but the first settled promise has
  become rejected before the other promises became fulfilled, the returned
  promise will become rejected:

  ```javascript
  let promise1 = new Promise(function(resolve, reject){
    setTimeout(function(){
      resolve('promise 1');
    }, 200);
  });

  let promise2 = new Promise(function(resolve, reject){
    setTimeout(function(){
      reject(new Error('promise 2'));
    }, 100);
  });

  Promise.race([promise1, promise2]).then(function(result){
    // Code here never runs
  }, function(reason){
    // reason.message === 'promise 2' because promise 2 became rejected before
    // promise 1 became fulfilled
  });
  ```

  An example real-world use case is implementing timeouts:

  ```javascript
  Promise.race([ajax('foo.json'), timeout(5000)])
  ```

  @method race
  @static
  @param {Array} promises array of promises to observe
  Useful for tooling.
  @return {Promise} a promise which settles in the same way as the first passed
  promise to settle.
*/
function race(entries) {
  /*jshint validthis:true */
  var Constructor = this;

  if (!isArray(entries)) {
    return new Constructor(function (_, reject) {
      return reject(new TypeError('You must pass an array to race.'));
    });
  } else {
    return new Constructor(function (resolve, reject) {
      var length = entries.length;
      for (var i = 0; i < length; i++) {
        Constructor.resolve(entries[i]).then(resolve, reject);
      }
    });
  }
}

/**
  `Promise.reject` returns a promise rejected with the passed `reason`.
  It is shorthand for the following:

  ```javascript
  let promise = new Promise(function(resolve, reject){
    reject(new Error('WHOOPS'));
  });

  promise.then(function(value){
    // Code here doesn't run because the promise is rejected!
  }, function(reason){
    // reason.message === 'WHOOPS'
  });
  ```

  Instead of writing the above, your code now simply becomes the following:

  ```javascript
  let promise = Promise.reject(new Error('WHOOPS'));

  promise.then(function(value){
    // Code here doesn't run because the promise is rejected!
  }, function(reason){
    // reason.message === 'WHOOPS'
  });
  ```

  @method reject
  @static
  @param {Any} reason value that the returned promise will be rejected with.
  Useful for tooling.
  @return {Promise} a promise rejected with the given `reason`.
*/
function reject$1(reason) {
  /*jshint validthis:true */
  var Constructor = this;
  var promise = new Constructor(noop);
  reject(promise, reason);
  return promise;
}

function needsResolver() {
  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
}

function needsNew() {
  throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
}

/**
  Promise objects represent the eventual result of an asynchronous operation. The
  primary way of interacting with a promise is through its `then` method, which
  registers callbacks to receive either a promise's eventual value or the reason
  why the promise cannot be fulfilled.

  Terminology
  -----------

  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
  - `thenable` is an object or function that defines a `then` method.
  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
  - `exception` is a value that is thrown using the throw statement.
  - `reason` is a value that indicates why a promise was rejected.
  - `settled` the final resting state of a promise, fulfilled or rejected.

  A promise can be in one of three states: pending, fulfilled, or rejected.

  Promises that are fulfilled have a fulfillment value and are in the fulfilled
  state.  Promises that are rejected have a rejection reason and are in the
  rejected state.  A fulfillment value is never a thenable.

  Promises can also be said to *resolve* a value.  If this value is also a
  promise, then the original promise's settled state will match the value's
  settled state.  So a promise that *resolves* a promise that rejects will
  itself reject, and a promise that *resolves* a promise that fulfills will
  itself fulfill.


  Basic Usage:
  ------------

  ```js
  let promise = new Promise(function(resolve, reject) {
    // on success
    resolve(value);

    // on failure
    reject(reason);
  });

  promise.then(function(value) {
    // on fulfillment
  }, function(reason) {
    // on rejection
  });
  ```

  Advanced Usage:
  ---------------

  Promises shine when abstracting away asynchronous interactions such as
  `XMLHttpRequest`s.

  ```js
  function getJSON(url) {
    return new Promise(function(resolve, reject){
      let xhr = new XMLHttpRequest();

      xhr.open('GET', url);
      xhr.onreadystatechange = handler;
      xhr.responseType = 'json';
      xhr.setRequestHeader('Accept', 'application/json');
      xhr.send();

      function handler() {
        if (this.readyState === this.DONE) {
          if (this.status === 200) {
            resolve(this.response);
          } else {
            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
          }
        }
      };
    });
  }

  getJSON('/posts.json').then(function(json) {
    // on fulfillment
  }, function(reason) {
    // on rejection
  });
  ```

  Unlike callbacks, promises are great composable primitives.

  ```js
  Promise.all([
    getJSON('/posts'),
    getJSON('/comments')
  ]).then(function(values){
    values[0] // => postsJSON
    values[1] // => commentsJSON

    return values;
  });
  ```

  @class Promise
  @param {Function} resolver
  Useful for tooling.
  @constructor
*/

var Promise$1 = function () {
  function Promise(resolver) {
    this[PROMISE_ID] = nextId();
    this._result = this._state = undefined;
    this._subscribers = [];

    if (noop !== resolver) {
      typeof resolver !== 'function' && needsResolver();
      this instanceof Promise ? initializePromise(this, resolver) : needsNew();
    }
  }

  /**
  The primary way of interacting with a promise is through its `then` method,
  which registers callbacks to receive either a promise's eventual value or the
  reason why the promise cannot be fulfilled.
   ```js
  findUser().then(function(user){
    // user is available
  }, function(reason){
    // user is unavailable, and you are given the reason why
  });
  ```
   Chaining
  --------
   The return value of `then` is itself a promise.  This second, 'downstream'
  promise is resolved with the return value of the first promise's fulfillment
  or rejection handler, or rejected if the handler throws an exception.
   ```js
  findUser().then(function (user) {
    return user.name;
  }, function (reason) {
    return 'default name';
  }).then(function (userName) {
    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
    // will be `'default name'`
  });
   findUser().then(function (user) {
    throw new Error('Found user, but still unhappy');
  }, function (reason) {
    throw new Error('`findUser` rejected and we're unhappy');
  }).then(function (value) {
    // never reached
  }, function (reason) {
    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
  });
  ```
  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.
   ```js
  findUser().then(function (user) {
    throw new PedagogicalException('Upstream error');
  }).then(function (value) {
    // never reached
  }).then(function (value) {
    // never reached
  }, function (reason) {
    // The `PedgagocialException` is propagated all the way down to here
  });
  ```
   Assimilation
  ------------
   Sometimes the value you want to propagate to a downstream promise can only be
  retrieved asynchronously. This can be achieved by returning a promise in the
  fulfillment or rejection handler. The downstream promise will then be pending
  until the returned promise is settled. This is called *assimilation*.
   ```js
  findUser().then(function (user) {
    return findCommentsByAuthor(user);
  }).then(function (comments) {
    // The user's comments are now available
  });
  ```
   If the assimliated promise rejects, then the downstream promise will also reject.
   ```js
  findUser().then(function (user) {
    return findCommentsByAuthor(user);
  }).then(function (comments) {
    // If `findCommentsByAuthor` fulfills, we'll have the value here
  }, function (reason) {
    // If `findCommentsByAuthor` rejects, we'll have the reason here
  });
  ```
   Simple Example
  --------------
   Synchronous Example
   ```javascript
  let result;
   try {
    result = findResult();
    // success
  } catch(reason) {
    // failure
  }
  ```
   Errback Example
   ```js
  findResult(function(result, err){
    if (err) {
      // failure
    } else {
      // success
    }
  });
  ```
   Promise Example;
   ```javascript
  findResult().then(function(result){
    // success
  }, function(reason){
    // failure
  });
  ```
   Advanced Example
  --------------
   Synchronous Example
   ```javascript
  let author, books;
   try {
    author = findAuthor();
    books  = findBooksByAuthor(author);
    // success
  } catch(reason) {
    // failure
  }
  ```
   Errback Example
   ```js
   function foundBooks(books) {
   }
   function failure(reason) {
   }
   findAuthor(function(author, err){
    if (err) {
      failure(err);
      // failure
    } else {
      try {
        findBoooksByAuthor(author, function(books, err) {
          if (err) {
            failure(err);
          } else {
            try {
              foundBooks(books);
            } catch(reason) {
              failure(reason);
            }
          }
        });
      } catch(error) {
        failure(err);
      }
      // success
    }
  });
  ```
   Promise Example;
   ```javascript
  findAuthor().
    then(findBooksByAuthor).
    then(function(books){
      // found books
  }).catch(function(reason){
    // something went wrong
  });
  ```
   @method then
  @param {Function} onFulfilled
  @param {Function} onRejected
  Useful for tooling.
  @return {Promise}
  */

  /**
  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
  as the catch block of a try/catch statement.
  ```js
  function findAuthor(){
  throw new Error('couldn't find that author');
  }
  // synchronous
  try {
  findAuthor();
  } catch(reason) {
  // something went wrong
  }
  // async with promises
  findAuthor().catch(function(reason){
  // something went wrong
  });
  ```
  @method catch
  @param {Function} onRejection
  Useful for tooling.
  @return {Promise}
  */


  Promise.prototype.catch = function _catch(onRejection) {
    return this.then(null, onRejection);
  };

  /**
    `finally` will be invoked regardless of the promise's fate just as native
    try/catch/finally behaves
  
    Synchronous example:
  
    ```js
    findAuthor() {
      if (Math.random() > 0.5) {
        throw new Error();
      }
      return new Author();
    }
  
    try {
      return findAuthor(); // succeed or fail
    } catch(error) {
      return findOtherAuther();
    } finally {
      // always runs
      // doesn't affect the return value
    }
    ```
  
    Asynchronous example:
  
    ```js
    findAuthor().catch(function(reason){
      return findOtherAuther();
    }).finally(function(){
      // author was either found, or not
    });
    ```
  
    @method finally
    @param {Function} callback
    @return {Promise}
  */


  Promise.prototype.finally = function _finally(callback) {
    var promise = this;
    var constructor = promise.constructor;

    if (isFunction(callback)) {
      return promise.then(function (value) {
        return constructor.resolve(callback()).then(function () {
          return value;
        });
      }, function (reason) {
        return constructor.resolve(callback()).then(function () {
          throw reason;
        });
      });
    }

    return promise.then(callback, callback);
  };

  return Promise;
}();

Promise$1.prototype.then = then;
Promise$1.all = all;
Promise$1.race = race;
Promise$1.resolve = resolve$1;
Promise$1.reject = reject$1;
Promise$1._setScheduler = setScheduler;
Promise$1._setAsap = setAsap;
Promise$1._asap = asap;

/*global self*/
function polyfill() {
  var local = void 0;

  if (typeof global !== 'undefined') {
    local = global;
  } else if (typeof self !== 'undefined') {
    local = self;
  } else {
    try {
      local = Function('return this')();
    } catch (e) {
      throw new Error('polyfill failed because global object is unavailable in this environment');
    }
  }

  var P = local.Promise;

  if (P) {
    var promiseToString = null;
    try {
      promiseToString = Object.prototype.toString.call(P.resolve());
    } catch (e) {
      // silently ignored
    }

    if (promiseToString === '[object Promise]' && !P.cast) {
      return;
    }
  }

  local.Promise = Promise$1;
}

// Strange compat..
Promise$1.polyfill = polyfill;
Promise$1.Promise = Promise$1;

return Promise$1;

})));





},{"process":"node_modules/process/browser.js"}],"node_modules/flv.js/src/utils/polyfill.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Polyfill {
  static install() {
    // ES6 Object.setPrototypeOf
    Object.setPrototypeOf = Object.setPrototypeOf || function (obj, proto) {
      obj.__proto__ = proto;
      return obj;
    }; // ES6 Object.assign


    Object.assign = Object.assign || function (target) {
      if (target === undefined || target === null) {
        throw new TypeError('Cannot convert undefined or null to object');
      }

      let output = Object(target);

      for (let i = 1; i < arguments.length; i++) {
        let source = arguments[i];

        if (source !== undefined && source !== null) {
          for (let key in source) {
            if (source.hasOwnProperty(key)) {
              output[key] = source[key];
            }
          }
        }
      }

      return output;
    }; // ES6 Promise (missing support in IE11)


    if (typeof self.Promise !== 'function') {
      require('es6-promise').polyfill();
    }
  }

}

Polyfill.install();
var _default = Polyfill;
exports.default = _default;
},{"es6-promise":"node_modules/es6-promise/dist/es6-promise.js"}],"node_modules/events/events.js":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

var R = typeof Reflect === 'object' ? Reflect : null;
var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {
  return Function.prototype.apply.call(target, receiver, args);
};
var ReflectOwnKeys;

if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys;
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
};

function EventEmitter() {
  EventEmitter.init.call(this);
}

module.exports = EventEmitter; // Backwards-compat with node 0.10.x

EventEmitter.EventEmitter = EventEmitter;
EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.

var defaultMaxListeners = 10;
Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function () {
    return defaultMaxListeners;
  },
  set: function (arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }

    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function () {
  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}; // Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.


EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }

  this._maxListeners = n;
  return this;
};

function $getMaxListeners(that) {
  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return $getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];

  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);

  var doError = type === 'error';
  var events = this._events;
  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.

  if (doError) {
    var er;
    if (args.length > 0) er = args[0];

    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    } // At least give some kind of context to the user


    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];
  if (handler === undefined) return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);

    for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }

  events = target._events;

  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object

      events = target._events;
    }

    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    } // Check for listener leak


    m = $getMaxListeners(target);

    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true; // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax

      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener = function prependListener(type, listener) {
  return _addListener(this, type, listener, true);
};

function onceWrapper() {
  var args = [];

  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);

  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    ReflectApply(this.listener, this.target, args);
  }
}

function _onceWrap(target, type, listener) {
  var state = {
    fired: false,
    wrapFn: undefined,
    target: target,
    type: type,
    listener: listener
  };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }

  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }

  this.prependListener(type, _onceWrap(this, type, listener));
  return this;
}; // Emits a 'removeListener' event if and only if the listener was removed.


EventEmitter.prototype.removeListener = function removeListener(type, listener) {
  var list, events, position, i, originalListener;

  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }

  events = this._events;
  if (events === undefined) return this;
  list = events[type];
  if (list === undefined) return this;

  if (list === listener || list.listener === listener) {
    if (--this._eventsCount === 0) this._events = Object.create(null);else {
      delete events[type];
      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);
    }
  } else if (typeof list !== 'function') {
    position = -1;

    for (i = list.length - 1; i >= 0; i--) {
      if (list[i] === listener || list[i].listener === listener) {
        originalListener = list[i].listener;
        position = i;
        break;
      }
    }

    if (position < 0) return this;
    if (position === 0) list.shift();else {
      spliceOne(list, position);
    }
    if (list.length === 1) events[type] = list[0];
    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);
  }

  return this;
};

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
  var listeners, events, i;
  events = this._events;
  if (events === undefined) return this; // not listening for removeListener, no need to emit

  if (events.removeListener === undefined) {
    if (arguments.length === 0) {
      this._events = Object.create(null);
      this._eventsCount = 0;
    } else if (events[type] !== undefined) {
      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];
    }

    return this;
  } // emit removeListener for all listeners on all events


  if (arguments.length === 0) {
    var keys = Object.keys(events);
    var key;

    for (i = 0; i < keys.length; ++i) {
      key = keys[i];
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }

    this.removeAllListeners('removeListener');
    this._events = Object.create(null);
    this._eventsCount = 0;
    return this;
  }

  listeners = events[type];

  if (typeof listeners === 'function') {
    this.removeListener(type, listeners);
  } else if (listeners !== undefined) {
    // LIFO order
    for (i = listeners.length - 1; i >= 0; i--) {
      this.removeListener(type, listeners[i]);
    }
  }

  return this;
};

function _listeners(target, type, unwrap) {
  var events = target._events;
  if (events === undefined) return [];
  var evlistener = events[type];
  if (evlistener === undefined) return [];
  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];
  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function (emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;

function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);

  for (var i = 0; i < n; ++i) copy[i] = arr[i];

  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++) list[index] = list[index + 1];

  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);

  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }

  return ret;
}
},{}],"node_modules/flv.js/src/utils/logger.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _events = _interopRequireDefault(require("events"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Log {
  static e(tag, msg) {
    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;
    let str = `[${tag}] > ${msg}`;

    if (Log.ENABLE_CALLBACK) {
      Log.emitter.emit('log', 'error', str);
    }

    if (!Log.ENABLE_ERROR) {
      return;
    }

    if (console.error) {
      console.error(str);
    } else if (console.warn) {
      console.warn(str);
    } else {
      console.log(str);
    }
  }

  static i(tag, msg) {
    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;
    let str = `[${tag}] > ${msg}`;

    if (Log.ENABLE_CALLBACK) {
      Log.emitter.emit('log', 'info', str);
    }

    if (!Log.ENABLE_INFO) {
      return;
    }

    if (console.info) {
      console.info(str);
    } else {
      console.log(str);
    }
  }

  static w(tag, msg) {
    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;
    let str = `[${tag}] > ${msg}`;

    if (Log.ENABLE_CALLBACK) {
      Log.emitter.emit('log', 'warn', str);
    }

    if (!Log.ENABLE_WARN) {
      return;
    }

    if (console.warn) {
      console.warn(str);
    } else {
      console.log(str);
    }
  }

  static d(tag, msg) {
    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;
    let str = `[${tag}] > ${msg}`;

    if (Log.ENABLE_CALLBACK) {
      Log.emitter.emit('log', 'debug', str);
    }

    if (!Log.ENABLE_DEBUG) {
      return;
    }

    if (console.debug) {
      console.debug(str);
    } else {
      console.log(str);
    }
  }

  static v(tag, msg) {
    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;
    let str = `[${tag}] > ${msg}`;

    if (Log.ENABLE_CALLBACK) {
      Log.emitter.emit('log', 'verbose', str);
    }

    if (!Log.ENABLE_VERBOSE) {
      return;
    }

    console.log(str);
  }

}

Log.GLOBAL_TAG = 'flv.js';
Log.FORCE_GLOBAL_TAG = false;
Log.ENABLE_ERROR = true;
Log.ENABLE_INFO = true;
Log.ENABLE_WARN = true;
Log.ENABLE_DEBUG = true;
Log.ENABLE_VERBOSE = true;
Log.ENABLE_CALLBACK = false;
Log.emitter = new _events.default();
var _default = Log;
exports.default = _default;
},{"events":"node_modules/events/events.js"}],"node_modules/flv.js/src/io/speed-sampler.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Utility class to calculate realtime network I/O speed
class SpeedSampler {
  constructor() {
    // milliseconds
    this._firstCheckpoint = 0;
    this._lastCheckpoint = 0;
    this._intervalBytes = 0;
    this._totalBytes = 0;
    this._lastSecondBytes = 0; // compatibility detection

    if (self.performance && self.performance.now) {
      this._now = self.performance.now.bind(self.performance);
    } else {
      this._now = Date.now;
    }
  }

  reset() {
    this._firstCheckpoint = this._lastCheckpoint = 0;
    this._totalBytes = this._intervalBytes = 0;
    this._lastSecondBytes = 0;
  }

  addBytes(bytes) {
    if (this._firstCheckpoint === 0) {
      this._firstCheckpoint = this._now();
      this._lastCheckpoint = this._firstCheckpoint;
      this._intervalBytes += bytes;
      this._totalBytes += bytes;
    } else if (this._now() - this._lastCheckpoint < 1000) {
      this._intervalBytes += bytes;
      this._totalBytes += bytes;
    } else {
      // duration >= 1000
      this._lastSecondBytes = this._intervalBytes;
      this._intervalBytes = bytes;
      this._totalBytes += bytes;
      this._lastCheckpoint = this._now();
    }
  }

  get currentKBps() {
    this.addBytes(0);
    let durationSeconds = (this._now() - this._lastCheckpoint) / 1000;
    if (durationSeconds == 0) durationSeconds = 1;
    return this._intervalBytes / durationSeconds / 1024;
  }

  get lastSecondKBps() {
    this.addBytes(0);

    if (this._lastSecondBytes !== 0) {
      return this._lastSecondBytes / 1024;
    } else {
      // lastSecondBytes === 0
      if (this._now() - this._lastCheckpoint >= 500) {
        // if time interval since last checkpoint has exceeded 500ms
        // the speed is nearly accurate
        return this.currentKBps;
      } else {
        // We don't know
        return 0;
      }
    }
  }

  get averageKBps() {
    let durationSeconds = (this._now() - this._firstCheckpoint) / 1000;
    return this._totalBytes / durationSeconds / 1024;
  }

}

var _default = SpeedSampler;
exports.default = _default;
},{}],"node_modules/flv.js/src/utils/exception.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NotImplementedException = exports.InvalidArgumentException = exports.IllegalStateException = exports.RuntimeException = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class RuntimeException {
  constructor(message) {
    this._message = message;
  }

  get name() {
    return 'RuntimeException';
  }

  get message() {
    return this._message;
  }

  toString() {
    return this.name + ': ' + this.message;
  }

}

exports.RuntimeException = RuntimeException;

class IllegalStateException extends RuntimeException {
  constructor(message) {
    super(message);
  }

  get name() {
    return 'IllegalStateException';
  }

}

exports.IllegalStateException = IllegalStateException;

class InvalidArgumentException extends RuntimeException {
  constructor(message) {
    super(message);
  }

  get name() {
    return 'InvalidArgumentException';
  }

}

exports.InvalidArgumentException = InvalidArgumentException;

class NotImplementedException extends RuntimeException {
  constructor(message) {
    super(message);
  }

  get name() {
    return 'NotImplementedException';
  }

}

exports.NotImplementedException = NotImplementedException;
},{}],"node_modules/flv.js/src/io/loader.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BaseLoader = exports.LoaderErrors = exports.LoaderStatus = void 0;

var _exception = require("../utils/exception.js");

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const LoaderStatus = {
  kIdle: 0,
  kConnecting: 1,
  kBuffering: 2,
  kError: 3,
  kComplete: 4
};
exports.LoaderStatus = LoaderStatus;
const LoaderErrors = {
  OK: 'OK',
  EXCEPTION: 'Exception',
  HTTP_STATUS_CODE_INVALID: 'HttpStatusCodeInvalid',
  CONNECTING_TIMEOUT: 'ConnectingTimeout',
  EARLY_EOF: 'EarlyEof',
  UNRECOVERABLE_EARLY_EOF: 'UnrecoverableEarlyEof'
};
/* Loader has callbacks which have following prototypes:
 *     function onContentLengthKnown(contentLength: number): void
 *     function onURLRedirect(url: string): void
 *     function onDataArrival(chunk: ArrayBuffer, byteStart: number, receivedLength: number): void
 *     function onError(errorType: number, errorInfo: {code: number, msg: string}): void
 *     function onComplete(rangeFrom: number, rangeTo: number): void
 */

exports.LoaderErrors = LoaderErrors;

class BaseLoader {
  constructor(typeName) {
    this._type = typeName || 'undefined';
    this._status = LoaderStatus.kIdle;
    this._needStash = false; // callbacks

    this._onContentLengthKnown = null;
    this._onURLRedirect = null;
    this._onDataArrival = null;
    this._onError = null;
    this._onComplete = null;
  }

  destroy() {
    this._status = LoaderStatus.kIdle;
    this._onContentLengthKnown = null;
    this._onURLRedirect = null;
    this._onDataArrival = null;
    this._onError = null;
    this._onComplete = null;
  }

  isWorking() {
    return this._status === LoaderStatus.kConnecting || this._status === LoaderStatus.kBuffering;
  }

  get type() {
    return this._type;
  }

  get status() {
    return this._status;
  }

  get needStashBuffer() {
    return this._needStash;
  }

  get onContentLengthKnown() {
    return this._onContentLengthKnown;
  }

  set onContentLengthKnown(callback) {
    this._onContentLengthKnown = callback;
  }

  get onURLRedirect() {
    return this._onURLRedirect;
  }

  set onURLRedirect(callback) {
    this._onURLRedirect = callback;
  }

  get onDataArrival() {
    return this._onDataArrival;
  }

  set onDataArrival(callback) {
    this._onDataArrival = callback;
  }

  get onError() {
    return this._onError;
  }

  set onError(callback) {
    this._onError = callback;
  }

  get onComplete() {
    return this._onComplete;
  }

  set onComplete(callback) {
    this._onComplete = callback;
  } // pure virtual


  open(dataSource, range) {
    throw new _exception.NotImplementedException('Unimplemented abstract function!');
  }

  abort() {
    throw new _exception.NotImplementedException('Unimplemented abstract function!');
  }

}

exports.BaseLoader = BaseLoader;
},{"../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/utils/browser.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
let Browser = {};

function detect() {
  // modified from jquery-browser-plugin
  let ua = self.navigator.userAgent.toLowerCase();
  let match = /(edge)\/([\w.]+)/.exec(ua) || /(opr)[\/]([\w.]+)/.exec(ua) || /(chrome)[ \/]([\w.]+)/.exec(ua) || /(iemobile)[\/]([\w.]+)/.exec(ua) || /(version)(applewebkit)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(ua) || /(webkit)[ \/]([\w.]+).*(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(ua) || /(webkit)[ \/]([\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || ua.indexOf('trident') >= 0 && /(rv)(?::| )([\w.]+)/.exec(ua) || ua.indexOf('compatible') < 0 && /(firefox)[ \/]([\w.]+)/.exec(ua) || [];
  let platform_match = /(ipad)/.exec(ua) || /(ipod)/.exec(ua) || /(windows phone)/.exec(ua) || /(iphone)/.exec(ua) || /(kindle)/.exec(ua) || /(android)/.exec(ua) || /(windows)/.exec(ua) || /(mac)/.exec(ua) || /(linux)/.exec(ua) || /(cros)/.exec(ua) || [];
  let matched = {
    browser: match[5] || match[3] || match[1] || '',
    version: match[2] || match[4] || '0',
    majorVersion: match[4] || match[2] || '0',
    platform: platform_match[0] || ''
  };
  let browser = {};

  if (matched.browser) {
    browser[matched.browser] = true;
    let versionArray = matched.majorVersion.split('.');
    browser.version = {
      major: parseInt(matched.majorVersion, 10),
      string: matched.version
    };

    if (versionArray.length > 1) {
      browser.version.minor = parseInt(versionArray[1], 10);
    }

    if (versionArray.length > 2) {
      browser.version.build = parseInt(versionArray[2], 10);
    }
  }

  if (matched.platform) {
    browser[matched.platform] = true;
  }

  if (browser.chrome || browser.opr || browser.safari) {
    browser.webkit = true;
  } // MSIE. IE11 has 'rv' identifer


  if (browser.rv || browser.iemobile) {
    if (browser.rv) {
      delete browser.rv;
    }

    let msie = 'msie';
    matched.browser = msie;
    browser[msie] = true;
  } // Microsoft Edge


  if (browser.edge) {
    delete browser.edge;
    let msedge = 'msedge';
    matched.browser = msedge;
    browser[msedge] = true;
  } // Opera 15+


  if (browser.opr) {
    let opera = 'opera';
    matched.browser = opera;
    browser[opera] = true;
  } // Stock android browsers are marked as Safari


  if (browser.safari && browser.android) {
    let android = 'android';
    matched.browser = android;
    browser[android] = true;
  }

  browser.name = matched.browser;
  browser.platform = matched.platform;

  for (let key in Browser) {
    if (Browser.hasOwnProperty(key)) {
      delete Browser[key];
    }
  }

  Object.assign(Browser, browser);
}

detect();
var _default = Browser;
exports.default = _default;
},{}],"node_modules/flv.js/src/io/fetch-stream-loader.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _browser = _interopRequireDefault(require("../utils/browser.js"));

var _loader = require("./loader.js");

var _exception = require("../utils/exception.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* fetch + stream IO loader. Currently working on chrome 43+.
 * fetch provides a better alternative http API to XMLHttpRequest
 *
 * fetch spec   https://fetch.spec.whatwg.org/
 * stream spec  https://streams.spec.whatwg.org/
 */
class FetchStreamLoader extends _loader.BaseLoader {
  static isSupported() {
    try {
      // fetch + stream is broken on Microsoft Edge. Disable before build 15048.
      // see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8196907/
      // Fixed in Jan 10, 2017. Build 15048+ removed from blacklist.
      let isWorkWellEdge = _browser.default.msedge && _browser.default.version.minor >= 15048;
      let browserNotBlacklisted = _browser.default.msedge ? isWorkWellEdge : true;
      return self.fetch && self.ReadableStream && browserNotBlacklisted;
    } catch (e) {
      return false;
    }
  }

  constructor(seekHandler, config) {
    super('fetch-stream-loader');
    this.TAG = 'FetchStreamLoader';
    this._seekHandler = seekHandler;
    this._config = config;
    this._needStash = true;
    this._requestAbort = false;
    this._contentLength = null;
    this._receivedLength = 0;
  }

  destroy() {
    if (this.isWorking()) {
      this.abort();
    }

    super.destroy();
  }

  open(dataSource, range) {
    this._dataSource = dataSource;
    this._range = range;
    let sourceURL = dataSource.url;

    if (this._config.reuseRedirectedURL && dataSource.redirectedURL != undefined) {
      sourceURL = dataSource.redirectedURL;
    }

    let seekConfig = this._seekHandler.getConfig(sourceURL, range);

    let headers = new self.Headers();

    if (typeof seekConfig.headers === 'object') {
      let configHeaders = seekConfig.headers;

      for (let key in configHeaders) {
        if (configHeaders.hasOwnProperty(key)) {
          headers.append(key, configHeaders[key]);
        }
      }
    }

    let params = {
      method: 'GET',
      headers: headers,
      mode: 'cors',
      cache: 'default',
      // The default policy of Fetch API in the whatwg standard
      // Safari incorrectly indicates 'no-referrer' as default policy, fuck it
      referrerPolicy: 'no-referrer-when-downgrade'
    }; // add additional headers

    if (typeof this._config.headers === 'object') {
      for (let key in this._config.headers) {
        headers.append(key, this._config.headers[key]);
      }
    } // cors is enabled by default


    if (dataSource.cors === false) {
      // no-cors means 'disregard cors policy', which can only be used in ServiceWorker
      params.mode = 'same-origin';
    } // withCredentials is disabled by default


    if (dataSource.withCredentials) {
      params.credentials = 'include';
    } // referrerPolicy from config


    if (dataSource.referrerPolicy) {
      params.referrerPolicy = dataSource.referrerPolicy;
    }

    this._status = _loader.LoaderStatus.kConnecting;
    self.fetch(seekConfig.url, params).then(res => {
      if (this._requestAbort) {
        this._requestAbort = false;
        this._status = _loader.LoaderStatus.kIdle;
        return;
      }

      if (res.ok && res.status >= 200 && res.status <= 299) {
        if (res.url !== seekConfig.url) {
          if (this._onURLRedirect) {
            let redirectedURL = this._seekHandler.removeURLParameters(res.url);

            this._onURLRedirect(redirectedURL);
          }
        }

        let lengthHeader = res.headers.get('Content-Length');

        if (lengthHeader != null) {
          this._contentLength = parseInt(lengthHeader);

          if (this._contentLength !== 0) {
            if (this._onContentLengthKnown) {
              this._onContentLengthKnown(this._contentLength);
            }
          }
        }

        return this._pump.call(this, res.body.getReader());
      } else {
        this._status = _loader.LoaderStatus.kError;

        if (this._onError) {
          this._onError(_loader.LoaderErrors.HTTP_STATUS_CODE_INVALID, {
            code: res.status,
            msg: res.statusText
          });
        } else {
          throw new _exception.RuntimeException('FetchStreamLoader: Http code invalid, ' + res.status + ' ' + res.statusText);
        }
      }
    }).catch(e => {
      this._status = _loader.LoaderStatus.kError;

      if (this._onError) {
        this._onError(_loader.LoaderErrors.EXCEPTION, {
          code: -1,
          msg: e.message
        });
      } else {
        throw e;
      }
    });
  }

  abort() {
    this._requestAbort = true;
  }

  _pump(reader) {
    // ReadableStreamReader
    return reader.read().then(result => {
      if (result.done) {
        // First check received length
        if (this._contentLength !== null && this._receivedLength < this._contentLength) {
          // Report Early-EOF
          this._status = _loader.LoaderStatus.kError;
          let type = _loader.LoaderErrors.EARLY_EOF;
          let info = {
            code: -1,
            msg: 'Fetch stream meet Early-EOF'
          };

          if (this._onError) {
            this._onError(type, info);
          } else {
            throw new _exception.RuntimeException(info.msg);
          }
        } else {
          // OK. Download complete
          this._status = _loader.LoaderStatus.kComplete;

          if (this._onComplete) {
            this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);
          }
        }
      } else {
        if (this._requestAbort === true) {
          this._requestAbort = false;
          this._status = _loader.LoaderStatus.kComplete;
          return reader.cancel();
        }

        this._status = _loader.LoaderStatus.kBuffering;
        let chunk = result.value.buffer;
        let byteStart = this._range.from + this._receivedLength;
        this._receivedLength += chunk.byteLength;

        if (this._onDataArrival) {
          this._onDataArrival(chunk, byteStart, this._receivedLength);
        }

        this._pump(reader);
      }
    }).catch(e => {
      if (e.code === 11 && _browser.default.msedge) {
        // InvalidStateError on Microsoft Edge
        // Workaround: Edge may throw InvalidStateError after ReadableStreamReader.cancel() call
        // Ignore the unknown exception.
        // Related issue: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11265202/
        return;
      }

      this._status = _loader.LoaderStatus.kError;
      let type = 0;
      let info = null;

      if ((e.code === 19 || e.message === 'network error') && ( // NETWORK_ERR
      this._contentLength === null || this._contentLength !== null && this._receivedLength < this._contentLength)) {
        type = _loader.LoaderErrors.EARLY_EOF;
        info = {
          code: e.code,
          msg: 'Fetch stream meet Early-EOF'
        };
      } else {
        type = _loader.LoaderErrors.EXCEPTION;
        info = {
          code: e.code,
          msg: e.message
        };
      }

      if (this._onError) {
        this._onError(type, info);
      } else {
        throw new _exception.RuntimeException(info.msg);
      }
    });
  }

}

var _default = FetchStreamLoader;
exports.default = _default;
},{"../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","../utils/browser.js":"node_modules/flv.js/src/utils/browser.js","./loader.js":"node_modules/flv.js/src/io/loader.js","../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/io/xhr-moz-chunked-loader.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _loader = require("./loader.js");

var _exception = require("../utils/exception.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// For FireFox browser which supports `xhr.responseType = 'moz-chunked-arraybuffer'`
class MozChunkedLoader extends _loader.BaseLoader {
  static isSupported() {
    try {
      let xhr = new XMLHttpRequest(); // Firefox 37- requires .open() to be called before setting responseType

      xhr.open('GET', 'https://example.com', true);
      xhr.responseType = 'moz-chunked-arraybuffer';
      return xhr.responseType === 'moz-chunked-arraybuffer';
    } catch (e) {
      _logger.default.w('MozChunkedLoader', e.message);

      return false;
    }
  }

  constructor(seekHandler, config) {
    super('xhr-moz-chunked-loader');
    this.TAG = 'MozChunkedLoader';
    this._seekHandler = seekHandler;
    this._config = config;
    this._needStash = true;
    this._xhr = null;
    this._requestAbort = false;
    this._contentLength = null;
    this._receivedLength = 0;
  }

  destroy() {
    if (this.isWorking()) {
      this.abort();
    }

    if (this._xhr) {
      this._xhr.onreadystatechange = null;
      this._xhr.onprogress = null;
      this._xhr.onloadend = null;
      this._xhr.onerror = null;
      this._xhr = null;
    }

    super.destroy();
  }

  open(dataSource, range) {
    this._dataSource = dataSource;
    this._range = range;
    let sourceURL = dataSource.url;

    if (this._config.reuseRedirectedURL && dataSource.redirectedURL != undefined) {
      sourceURL = dataSource.redirectedURL;
    }

    let seekConfig = this._seekHandler.getConfig(sourceURL, range);

    this._requestURL = seekConfig.url;
    let xhr = this._xhr = new XMLHttpRequest();
    xhr.open('GET', seekConfig.url, true);
    xhr.responseType = 'moz-chunked-arraybuffer';
    xhr.onreadystatechange = this._onReadyStateChange.bind(this);
    xhr.onprogress = this._onProgress.bind(this);
    xhr.onloadend = this._onLoadEnd.bind(this);
    xhr.onerror = this._onXhrError.bind(this); // cors is auto detected and enabled by xhr
    // withCredentials is disabled by default

    if (dataSource.withCredentials) {
      xhr.withCredentials = true;
    }

    if (typeof seekConfig.headers === 'object') {
      let headers = seekConfig.headers;

      for (let key in headers) {
        if (headers.hasOwnProperty(key)) {
          xhr.setRequestHeader(key, headers[key]);
        }
      }
    } // add additional headers


    if (typeof this._config.headers === 'object') {
      let headers = this._config.headers;

      for (let key in headers) {
        if (headers.hasOwnProperty(key)) {
          xhr.setRequestHeader(key, headers[key]);
        }
      }
    }

    this._status = _loader.LoaderStatus.kConnecting;
    xhr.send();
  }

  abort() {
    this._requestAbort = true;

    if (this._xhr) {
      this._xhr.abort();
    }

    this._status = _loader.LoaderStatus.kComplete;
  }

  _onReadyStateChange(e) {
    let xhr = e.target;

    if (xhr.readyState === 2) {
      // HEADERS_RECEIVED
      if (xhr.responseURL != undefined && xhr.responseURL !== this._requestURL) {
        if (this._onURLRedirect) {
          let redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);

          this._onURLRedirect(redirectedURL);
        }
      }

      if (xhr.status !== 0 && (xhr.status < 200 || xhr.status > 299)) {
        this._status = _loader.LoaderStatus.kError;

        if (this._onError) {
          this._onError(_loader.LoaderErrors.HTTP_STATUS_CODE_INVALID, {
            code: xhr.status,
            msg: xhr.statusText
          });
        } else {
          throw new _exception.RuntimeException('MozChunkedLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);
        }
      } else {
        this._status = _loader.LoaderStatus.kBuffering;
      }
    }
  }

  _onProgress(e) {
    if (this._status === _loader.LoaderStatus.kError) {
      // Ignore error response
      return;
    }

    if (this._contentLength === null) {
      if (e.total !== null && e.total !== 0) {
        this._contentLength = e.total;

        if (this._onContentLengthKnown) {
          this._onContentLengthKnown(this._contentLength);
        }
      }
    }

    let chunk = e.target.response;
    let byteStart = this._range.from + this._receivedLength;
    this._receivedLength += chunk.byteLength;

    if (this._onDataArrival) {
      this._onDataArrival(chunk, byteStart, this._receivedLength);
    }
  }

  _onLoadEnd(e) {
    if (this._requestAbort === true) {
      this._requestAbort = false;
      return;
    } else if (this._status === _loader.LoaderStatus.kError) {
      return;
    }

    this._status = _loader.LoaderStatus.kComplete;

    if (this._onComplete) {
      this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);
    }
  }

  _onXhrError(e) {
    this._status = _loader.LoaderStatus.kError;
    let type = 0;
    let info = null;

    if (this._contentLength && e.loaded < this._contentLength) {
      type = _loader.LoaderErrors.EARLY_EOF;
      info = {
        code: -1,
        msg: 'Moz-Chunked stream meet Early-Eof'
      };
    } else {
      type = _loader.LoaderErrors.EXCEPTION;
      info = {
        code: -1,
        msg: e.constructor.name + ' ' + e.type
      };
    }

    if (this._onError) {
      this._onError(type, info);
    } else {
      throw new _exception.RuntimeException(info.msg);
    }
  }

}

var _default = MozChunkedLoader;
exports.default = _default;
},{"../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","./loader.js":"node_modules/flv.js/src/io/loader.js","../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/io/xhr-msstream-loader.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _loader = require("./loader.js");

var _exception = require("../utils/exception.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Notice: ms-stream may cause IE/Edge browser crash if seek too frequently!!!
 * The browser may crash in wininet.dll. Disable for now.
 *
 * For IE11/Edge browser by microsoft which supports `xhr.responseType = 'ms-stream'`
 * Notice that ms-stream API sucks. The buffer is always expanding along with downloading.
 *
 * We need to abort the xhr if buffer size exceeded limit size (e.g. 16 MiB), then do reconnect.
 * in order to release previous ArrayBuffer to avoid memory leak
 *
 * Otherwise, the ArrayBuffer will increase to a terrible size that equals final file size.
 */
class MSStreamLoader extends _loader.BaseLoader {
  static isSupported() {
    try {
      if (typeof self.MSStream === 'undefined' || typeof self.MSStreamReader === 'undefined') {
        return false;
      }

      let xhr = new XMLHttpRequest();
      xhr.open('GET', 'https://example.com', true);
      xhr.responseType = 'ms-stream';
      return xhr.responseType === 'ms-stream';
    } catch (e) {
      _logger.default.w('MSStreamLoader', e.message);

      return false;
    }
  }

  constructor(seekHandler, config) {
    super('xhr-msstream-loader');
    this.TAG = 'MSStreamLoader';
    this._seekHandler = seekHandler;
    this._config = config;
    this._needStash = true;
    this._xhr = null;
    this._reader = null; // MSStreamReader

    this._totalRange = null;
    this._currentRange = null;
    this._currentRequestURL = null;
    this._currentRedirectedURL = null;
    this._contentLength = null;
    this._receivedLength = 0;
    this._bufferLimit = 16 * 1024 * 1024; // 16MB

    this._lastTimeBufferSize = 0;
    this._isReconnecting = false;
  }

  destroy() {
    if (this.isWorking()) {
      this.abort();
    }

    if (this._reader) {
      this._reader.onprogress = null;
      this._reader.onload = null;
      this._reader.onerror = null;
      this._reader = null;
    }

    if (this._xhr) {
      this._xhr.onreadystatechange = null;
      this._xhr = null;
    }

    super.destroy();
  }

  open(dataSource, range) {
    this._internalOpen(dataSource, range, false);
  }

  _internalOpen(dataSource, range, isSubrange) {
    this._dataSource = dataSource;

    if (!isSubrange) {
      this._totalRange = range;
    } else {
      this._currentRange = range;
    }

    let sourceURL = dataSource.url;

    if (this._config.reuseRedirectedURL) {
      if (this._currentRedirectedURL != undefined) {
        sourceURL = this._currentRedirectedURL;
      } else if (dataSource.redirectedURL != undefined) {
        sourceURL = dataSource.redirectedURL;
      }
    }

    let seekConfig = this._seekHandler.getConfig(sourceURL, range);

    this._currentRequestURL = seekConfig.url;
    let reader = this._reader = new self.MSStreamReader();
    reader.onprogress = this._msrOnProgress.bind(this);
    reader.onload = this._msrOnLoad.bind(this);
    reader.onerror = this._msrOnError.bind(this);
    let xhr = this._xhr = new XMLHttpRequest();
    xhr.open('GET', seekConfig.url, true);
    xhr.responseType = 'ms-stream';
    xhr.onreadystatechange = this._xhrOnReadyStateChange.bind(this);
    xhr.onerror = this._xhrOnError.bind(this);

    if (dataSource.withCredentials) {
      xhr.withCredentials = true;
    }

    if (typeof seekConfig.headers === 'object') {
      let headers = seekConfig.headers;

      for (let key in headers) {
        if (headers.hasOwnProperty(key)) {
          xhr.setRequestHeader(key, headers[key]);
        }
      }
    } // add additional headers


    if (typeof this._config.headers === 'object') {
      let headers = this._config.headers;

      for (let key in headers) {
        if (headers.hasOwnProperty(key)) {
          xhr.setRequestHeader(key, headers[key]);
        }
      }
    }

    if (this._isReconnecting) {
      this._isReconnecting = false;
    } else {
      this._status = _loader.LoaderStatus.kConnecting;
    }

    xhr.send();
  }

  abort() {
    this._internalAbort();

    this._status = _loader.LoaderStatus.kComplete;
  }

  _internalAbort() {
    if (this._reader) {
      if (this._reader.readyState === 1) {
        // LOADING
        this._reader.abort();
      }

      this._reader.onprogress = null;
      this._reader.onload = null;
      this._reader.onerror = null;
      this._reader = null;
    }

    if (this._xhr) {
      this._xhr.abort();

      this._xhr.onreadystatechange = null;
      this._xhr = null;
    }
  }

  _xhrOnReadyStateChange(e) {
    let xhr = e.target;

    if (xhr.readyState === 2) {
      // HEADERS_RECEIVED
      if (xhr.status >= 200 && xhr.status <= 299) {
        this._status = _loader.LoaderStatus.kBuffering;

        if (xhr.responseURL != undefined) {
          let redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);

          if (xhr.responseURL !== this._currentRequestURL && redirectedURL !== this._currentRedirectedURL) {
            this._currentRedirectedURL = redirectedURL;

            if (this._onURLRedirect) {
              this._onURLRedirect(redirectedURL);
            }
          }
        }

        let lengthHeader = xhr.getResponseHeader('Content-Length');

        if (lengthHeader != null && this._contentLength == null) {
          let length = parseInt(lengthHeader);

          if (length > 0) {
            this._contentLength = length;

            if (this._onContentLengthKnown) {
              this._onContentLengthKnown(this._contentLength);
            }
          }
        }
      } else {
        this._status = _loader.LoaderStatus.kError;

        if (this._onError) {
          this._onError(_loader.LoaderErrors.HTTP_STATUS_CODE_INVALID, {
            code: xhr.status,
            msg: xhr.statusText
          });
        } else {
          throw new _exception.RuntimeException('MSStreamLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);
        }
      }
    } else if (xhr.readyState === 3) {
      // LOADING
      if (xhr.status >= 200 && xhr.status <= 299) {
        this._status = _loader.LoaderStatus.kBuffering;
        let msstream = xhr.response;

        this._reader.readAsArrayBuffer(msstream);
      }
    }
  }

  _xhrOnError(e) {
    this._status = _loader.LoaderStatus.kError;
    let type = _loader.LoaderErrors.EXCEPTION;
    let info = {
      code: -1,
      msg: e.constructor.name + ' ' + e.type
    };

    if (this._onError) {
      this._onError(type, info);
    } else {
      throw new _exception.RuntimeException(info.msg);
    }
  }

  _msrOnProgress(e) {
    let reader = e.target;
    let bigbuffer = reader.result;

    if (bigbuffer == null) {
      // result may be null, workaround for buggy M$
      this._doReconnectIfNeeded();

      return;
    }

    let slice = bigbuffer.slice(this._lastTimeBufferSize);
    this._lastTimeBufferSize = bigbuffer.byteLength;
    let byteStart = this._totalRange.from + this._receivedLength;
    this._receivedLength += slice.byteLength;

    if (this._onDataArrival) {
      this._onDataArrival(slice, byteStart, this._receivedLength);
    }

    if (bigbuffer.byteLength >= this._bufferLimit) {
      _logger.default.v(this.TAG, `MSStream buffer exceeded max size near ${byteStart + slice.byteLength}, reconnecting...`);

      this._doReconnectIfNeeded();
    }
  }

  _doReconnectIfNeeded() {
    if (this._contentLength == null || this._receivedLength < this._contentLength) {
      this._isReconnecting = true;
      this._lastTimeBufferSize = 0;

      this._internalAbort();

      let range = {
        from: this._totalRange.from + this._receivedLength,
        to: -1
      };

      this._internalOpen(this._dataSource, range, true);
    }
  }

  _msrOnLoad(e) {
    // actually it is onComplete event
    this._status = _loader.LoaderStatus.kComplete;

    if (this._onComplete) {
      this._onComplete(this._totalRange.from, this._totalRange.from + this._receivedLength - 1);
    }
  }

  _msrOnError(e) {
    this._status = _loader.LoaderStatus.kError;
    let type = 0;
    let info = null;

    if (this._contentLength && this._receivedLength < this._contentLength) {
      type = _loader.LoaderErrors.EARLY_EOF;
      info = {
        code: -1,
        msg: 'MSStream meet Early-Eof'
      };
    } else {
      type = _loader.LoaderErrors.EARLY_EOF;
      info = {
        code: -1,
        msg: e.constructor.name + ' ' + e.type
      };
    }

    if (this._onError) {
      this._onError(type, info);
    } else {
      throw new _exception.RuntimeException(info.msg);
    }
  }

}

var _default = MSStreamLoader;
exports.default = _default;
},{"../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","./loader.js":"node_modules/flv.js/src/io/loader.js","../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/io/xhr-range-loader.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _speedSampler = _interopRequireDefault(require("./speed-sampler.js"));

var _loader = require("./loader.js");

var _exception = require("../utils/exception.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Universal IO Loader, implemented by adding Range header in xhr's request header
class RangeLoader extends _loader.BaseLoader {
  static isSupported() {
    try {
      let xhr = new XMLHttpRequest();
      xhr.open('GET', 'https://example.com', true);
      xhr.responseType = 'arraybuffer';
      return xhr.responseType === 'arraybuffer';
    } catch (e) {
      _logger.default.w('RangeLoader', e.message);

      return false;
    }
  }

  constructor(seekHandler, config) {
    super('xhr-range-loader');
    this.TAG = 'RangeLoader';
    this._seekHandler = seekHandler;
    this._config = config;
    this._needStash = false;
    this._chunkSizeKBList = [128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192];
    this._currentChunkSizeKB = 384;
    this._currentSpeedNormalized = 0;
    this._zeroSpeedChunkCount = 0;
    this._xhr = null;
    this._speedSampler = new _speedSampler.default();
    this._requestAbort = false;
    this._waitForTotalLength = false;
    this._totalLengthReceived = false;
    this._currentRequestURL = null;
    this._currentRedirectedURL = null;
    this._currentRequestRange = null;
    this._totalLength = null; // size of the entire file

    this._contentLength = null; // Content-Length of entire request range

    this._receivedLength = 0; // total received bytes

    this._lastTimeLoaded = 0; // received bytes of current request sub-range
  }

  destroy() {
    if (this.isWorking()) {
      this.abort();
    }

    if (this._xhr) {
      this._xhr.onreadystatechange = null;
      this._xhr.onprogress = null;
      this._xhr.onload = null;
      this._xhr.onerror = null;
      this._xhr = null;
    }

    super.destroy();
  }

  get currentSpeed() {
    return this._speedSampler.lastSecondKBps;
  }

  open(dataSource, range) {
    this._dataSource = dataSource;
    this._range = range;
    this._status = _loader.LoaderStatus.kConnecting;
    let useRefTotalLength = false;

    if (this._dataSource.filesize != undefined && this._dataSource.filesize !== 0) {
      useRefTotalLength = true;
      this._totalLength = this._dataSource.filesize;
    }

    if (!this._totalLengthReceived && !useRefTotalLength) {
      // We need total filesize
      this._waitForTotalLength = true;

      this._internalOpen(this._dataSource, {
        from: 0,
        to: -1
      });
    } else {
      // We have filesize, start loading
      this._openSubRange();
    }
  }

  _openSubRange() {
    let chunkSize = this._currentChunkSizeKB * 1024;
    let from = this._range.from + this._receivedLength;
    let to = from + chunkSize;

    if (this._contentLength != null) {
      if (to - this._range.from >= this._contentLength) {
        to = this._range.from + this._contentLength - 1;
      }
    }

    this._currentRequestRange = {
      from,
      to
    };

    this._internalOpen(this._dataSource, this._currentRequestRange);
  }

  _internalOpen(dataSource, range) {
    this._lastTimeLoaded = 0;
    let sourceURL = dataSource.url;

    if (this._config.reuseRedirectedURL) {
      if (this._currentRedirectedURL != undefined) {
        sourceURL = this._currentRedirectedURL;
      } else if (dataSource.redirectedURL != undefined) {
        sourceURL = dataSource.redirectedURL;
      }
    }

    let seekConfig = this._seekHandler.getConfig(sourceURL, range);

    this._currentRequestURL = seekConfig.url;
    let xhr = this._xhr = new XMLHttpRequest();
    xhr.open('GET', seekConfig.url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onreadystatechange = this._onReadyStateChange.bind(this);
    xhr.onprogress = this._onProgress.bind(this);
    xhr.onload = this._onLoad.bind(this);
    xhr.onerror = this._onXhrError.bind(this);

    if (dataSource.withCredentials) {
      xhr.withCredentials = true;
    }

    if (typeof seekConfig.headers === 'object') {
      let headers = seekConfig.headers;

      for (let key in headers) {
        if (headers.hasOwnProperty(key)) {
          xhr.setRequestHeader(key, headers[key]);
        }
      }
    } // add additional headers


    if (typeof this._config.headers === 'object') {
      let headers = this._config.headers;

      for (let key in headers) {
        if (headers.hasOwnProperty(key)) {
          xhr.setRequestHeader(key, headers[key]);
        }
      }
    }

    xhr.send();
  }

  abort() {
    this._requestAbort = true;

    this._internalAbort();

    this._status = _loader.LoaderStatus.kComplete;
  }

  _internalAbort() {
    if (this._xhr) {
      this._xhr.onreadystatechange = null;
      this._xhr.onprogress = null;
      this._xhr.onload = null;
      this._xhr.onerror = null;

      this._xhr.abort();

      this._xhr = null;
    }
  }

  _onReadyStateChange(e) {
    let xhr = e.target;

    if (xhr.readyState === 2) {
      // HEADERS_RECEIVED
      if (xhr.responseURL != undefined) {
        // if the browser support this property
        let redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);

        if (xhr.responseURL !== this._currentRequestURL && redirectedURL !== this._currentRedirectedURL) {
          this._currentRedirectedURL = redirectedURL;

          if (this._onURLRedirect) {
            this._onURLRedirect(redirectedURL);
          }
        }
      }

      if (xhr.status >= 200 && xhr.status <= 299) {
        if (this._waitForTotalLength) {
          return;
        }

        this._status = _loader.LoaderStatus.kBuffering;
      } else {
        this._status = _loader.LoaderStatus.kError;

        if (this._onError) {
          this._onError(_loader.LoaderErrors.HTTP_STATUS_CODE_INVALID, {
            code: xhr.status,
            msg: xhr.statusText
          });
        } else {
          throw new _exception.RuntimeException('RangeLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);
        }
      }
    }
  }

  _onProgress(e) {
    if (this._status === _loader.LoaderStatus.kError) {
      // Ignore error response
      return;
    }

    if (this._contentLength === null) {
      let openNextRange = false;

      if (this._waitForTotalLength) {
        this._waitForTotalLength = false;
        this._totalLengthReceived = true;
        openNextRange = true;
        let total = e.total;

        this._internalAbort();

        if (total != null & total !== 0) {
          this._totalLength = total;
        }
      } // calculate currrent request range's contentLength


      if (this._range.to === -1) {
        this._contentLength = this._totalLength - this._range.from;
      } else {
        // to !== -1
        this._contentLength = this._range.to - this._range.from + 1;
      }

      if (openNextRange) {
        this._openSubRange();

        return;
      }

      if (this._onContentLengthKnown) {
        this._onContentLengthKnown(this._contentLength);
      }
    }

    let delta = e.loaded - this._lastTimeLoaded;
    this._lastTimeLoaded = e.loaded;

    this._speedSampler.addBytes(delta);
  }

  _normalizeSpeed(input) {
    let list = this._chunkSizeKBList;
    let last = list.length - 1;
    let mid = 0;
    let lbound = 0;
    let ubound = last;

    if (input < list[0]) {
      return list[0];
    }

    while (lbound <= ubound) {
      mid = lbound + Math.floor((ubound - lbound) / 2);

      if (mid === last || input >= list[mid] && input < list[mid + 1]) {
        return list[mid];
      } else if (list[mid] < input) {
        lbound = mid + 1;
      } else {
        ubound = mid - 1;
      }
    }
  }

  _onLoad(e) {
    if (this._status === _loader.LoaderStatus.kError) {
      // Ignore error response
      return;
    }

    if (this._waitForTotalLength) {
      this._waitForTotalLength = false;
      return;
    }

    this._lastTimeLoaded = 0;
    let KBps = this._speedSampler.lastSecondKBps;

    if (KBps === 0) {
      this._zeroSpeedChunkCount++;

      if (this._zeroSpeedChunkCount >= 3) {
        // Try get currentKBps after 3 chunks
        KBps = this._speedSampler.currentKBps;
      }
    }

    if (KBps !== 0) {
      let normalized = this._normalizeSpeed(KBps);

      if (this._currentSpeedNormalized !== normalized) {
        this._currentSpeedNormalized = normalized;
        this._currentChunkSizeKB = normalized;
      }
    }

    let chunk = e.target.response;
    let byteStart = this._range.from + this._receivedLength;
    this._receivedLength += chunk.byteLength;
    let reportComplete = false;

    if (this._contentLength != null && this._receivedLength < this._contentLength) {
      // continue load next chunk
      this._openSubRange();
    } else {
      reportComplete = true;
    } // dispatch received chunk


    if (this._onDataArrival) {
      this._onDataArrival(chunk, byteStart, this._receivedLength);
    }

    if (reportComplete) {
      this._status = _loader.LoaderStatus.kComplete;

      if (this._onComplete) {
        this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);
      }
    }
  }

  _onXhrError(e) {
    this._status = _loader.LoaderStatus.kError;
    let type = 0;
    let info = null;

    if (this._contentLength && this._receivedLength > 0 && this._receivedLength < this._contentLength) {
      type = _loader.LoaderErrors.EARLY_EOF;
      info = {
        code: -1,
        msg: 'RangeLoader meet Early-Eof'
      };
    } else {
      type = _loader.LoaderErrors.EXCEPTION;
      info = {
        code: -1,
        msg: e.constructor.name + ' ' + e.type
      };
    }

    if (this._onError) {
      this._onError(type, info);
    } else {
      throw new _exception.RuntimeException(info.msg);
    }
  }

}

var _default = RangeLoader;
exports.default = _default;
},{"../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","./speed-sampler.js":"node_modules/flv.js/src/io/speed-sampler.js","./loader.js":"node_modules/flv.js/src/io/loader.js","../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/io/websocket-loader.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _loader = require("./loader.js");

var _exception = require("../utils/exception.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// For FLV over WebSocket live stream
class WebSocketLoader extends _loader.BaseLoader {
  static isSupported() {
    try {
      return typeof self.WebSocket !== 'undefined';
    } catch (e) {
      return false;
    }
  }

  constructor() {
    super('websocket-loader');
    this.TAG = 'WebSocketLoader';
    this._needStash = true;
    this._ws = null;
    this._requestAbort = false;
    this._receivedLength = 0;
  }

  destroy() {
    if (this._ws) {
      this.abort();
    }

    super.destroy();
  }

  open(dataSource) {
    try {
      let ws = this._ws = new self.WebSocket(dataSource.url);
      ws.binaryType = 'arraybuffer';
      ws.onopen = this._onWebSocketOpen.bind(this);
      ws.onclose = this._onWebSocketClose.bind(this);
      ws.onmessage = this._onWebSocketMessage.bind(this);
      ws.onerror = this._onWebSocketError.bind(this);
      this._status = _loader.LoaderStatus.kConnecting;
    } catch (e) {
      this._status = _loader.LoaderStatus.kError;
      let info = {
        code: e.code,
        msg: e.message
      };

      if (this._onError) {
        this._onError(_loader.LoaderErrors.EXCEPTION, info);
      } else {
        throw new _exception.RuntimeException(info.msg);
      }
    }
  }

  abort() {
    let ws = this._ws;

    if (ws && (ws.readyState === 0 || ws.readyState === 1)) {
      // CONNECTING || OPEN
      this._requestAbort = true;
      ws.close();
    }

    this._ws = null;
    this._status = _loader.LoaderStatus.kComplete;
  }

  _onWebSocketOpen(e) {
    this._status = _loader.LoaderStatus.kBuffering;
  }

  _onWebSocketClose(e) {
    if (this._requestAbort === true) {
      this._requestAbort = false;
      return;
    }

    this._status = _loader.LoaderStatus.kComplete;

    if (this._onComplete) {
      this._onComplete(0, this._receivedLength - 1);
    }
  }

  _onWebSocketMessage(e) {
    if (e.data instanceof ArrayBuffer) {
      this._dispatchArrayBuffer(e.data);
    } else if (e.data instanceof Blob) {
      let reader = new FileReader();

      reader.onload = () => {
        this._dispatchArrayBuffer(reader.result);
      };

      reader.readAsArrayBuffer(e.data);
    } else {
      this._status = _loader.LoaderStatus.kError;
      let info = {
        code: -1,
        msg: 'Unsupported WebSocket message type: ' + e.data.constructor.name
      };

      if (this._onError) {
        this._onError(_loader.LoaderErrors.EXCEPTION, info);
      } else {
        throw new _exception.RuntimeException(info.msg);
      }
    }
  }

  _dispatchArrayBuffer(arraybuffer) {
    let chunk = arraybuffer;
    let byteStart = this._receivedLength;
    this._receivedLength += chunk.byteLength;

    if (this._onDataArrival) {
      this._onDataArrival(chunk, byteStart, this._receivedLength);
    }
  }

  _onWebSocketError(e) {
    this._status = _loader.LoaderStatus.kError;
    let info = {
      code: e.code,
      msg: e.message
    };

    if (this._onError) {
      this._onError(_loader.LoaderErrors.EXCEPTION, info);
    } else {
      throw new _exception.RuntimeException(info.msg);
    }
  }

}

var _default = WebSocketLoader;
exports.default = _default;
},{"../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","./loader.js":"node_modules/flv.js/src/io/loader.js","../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/io/range-seek-handler.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class RangeSeekHandler {
  constructor(zeroStart) {
    this._zeroStart = zeroStart || false;
  }

  getConfig(url, range) {
    let headers = {};

    if (range.from !== 0 || range.to !== -1) {
      let param;

      if (range.to !== -1) {
        param = `bytes=${range.from.toString()}-${range.to.toString()}`;
      } else {
        param = `bytes=${range.from.toString()}-`;
      }

      headers['Range'] = param;
    } else if (this._zeroStart) {
      headers['Range'] = 'bytes=0-';
    }

    return {
      url: url,
      headers: headers
    };
  }

  removeURLParameters(seekedURL) {
    return seekedURL;
  }

}

var _default = RangeSeekHandler;
exports.default = _default;
},{}],"node_modules/flv.js/src/io/param-seek-handler.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class ParamSeekHandler {
  constructor(paramStart, paramEnd) {
    this._startName = paramStart;
    this._endName = paramEnd;
  }

  getConfig(baseUrl, range) {
    let url = baseUrl;

    if (range.from !== 0 || range.to !== -1) {
      let needAnd = true;

      if (url.indexOf('?') === -1) {
        url += '?';
        needAnd = false;
      }

      if (needAnd) {
        url += '&';
      }

      url += `${this._startName}=${range.from.toString()}`;

      if (range.to !== -1) {
        url += `&${this._endName}=${range.to.toString()}`;
      }
    }

    return {
      url: url,
      headers: {}
    };
  }

  removeURLParameters(seekedURL) {
    let baseURL = seekedURL.split('?')[0];
    let params = undefined;
    let queryIndex = seekedURL.indexOf('?');

    if (queryIndex !== -1) {
      params = seekedURL.substring(queryIndex + 1);
    }

    let resultParams = '';

    if (params != undefined && params.length > 0) {
      let pairs = params.split('&');

      for (let i = 0; i < pairs.length; i++) {
        let pair = pairs[i].split('=');
        let requireAnd = i > 0;

        if (pair[0] !== this._startName && pair[0] !== this._endName) {
          if (requireAnd) {
            resultParams += '&';
          }

          resultParams += pairs[i];
        }
      }
    }

    return resultParams.length === 0 ? baseURL : baseURL + '?' + resultParams;
  }

}

var _default = ParamSeekHandler;
exports.default = _default;
},{}],"node_modules/flv.js/src/io/io-controller.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _speedSampler = _interopRequireDefault(require("./speed-sampler.js"));

var _loader = require("./loader.js");

var _fetchStreamLoader = _interopRequireDefault(require("./fetch-stream-loader.js"));

var _xhrMozChunkedLoader = _interopRequireDefault(require("./xhr-moz-chunked-loader.js"));

var _xhrMsstreamLoader = _interopRequireDefault(require("./xhr-msstream-loader.js"));

var _xhrRangeLoader = _interopRequireDefault(require("./xhr-range-loader.js"));

var _websocketLoader = _interopRequireDefault(require("./websocket-loader.js"));

var _rangeSeekHandler = _interopRequireDefault(require("./range-seek-handler.js"));

var _paramSeekHandler = _interopRequireDefault(require("./param-seek-handler.js"));

var _exception = require("../utils/exception.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * DataSource: {
 *     url: string,
 *     filesize: number,
 *     cors: boolean,
 *     withCredentials: boolean
 * }
 * 
 */
// Manage IO Loaders
class IOController {
  constructor(dataSource, config, extraData) {
    this.TAG = 'IOController';
    this._config = config;
    this._extraData = extraData;
    this._stashInitialSize = 1024 * 384; // default initial size: 384KB

    if (config.stashInitialSize != undefined && config.stashInitialSize > 0) {
      // apply from config
      this._stashInitialSize = config.stashInitialSize;
    }

    this._stashUsed = 0;
    this._stashSize = this._stashInitialSize;
    this._bufferSize = 1024 * 1024 * 3; // initial size: 3MB

    this._stashBuffer = new ArrayBuffer(this._bufferSize);
    this._stashByteStart = 0;
    this._enableStash = true;

    if (config.enableStashBuffer === false) {
      this._enableStash = false;
    }

    this._loader = null;
    this._loaderClass = null;
    this._seekHandler = null;
    this._dataSource = dataSource;
    this._isWebSocketURL = /wss?:\/\/(.+?)/.test(dataSource.url);
    this._refTotalLength = dataSource.filesize ? dataSource.filesize : null;
    this._totalLength = this._refTotalLength;
    this._fullRequestFlag = false;
    this._currentRange = null;
    this._redirectedURL = null;
    this._speedNormalized = 0;
    this._speedSampler = new _speedSampler.default();
    this._speedNormalizeList = [64, 128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096];
    this._isEarlyEofReconnecting = false;
    this._paused = false;
    this._resumeFrom = 0;
    this._onDataArrival = null;
    this._onSeeked = null;
    this._onError = null;
    this._onComplete = null;
    this._onRedirect = null;
    this._onRecoveredEarlyEof = null;

    this._selectSeekHandler();

    this._selectLoader();

    this._createLoader();
  }

  destroy() {
    if (this._loader.isWorking()) {
      this._loader.abort();
    }

    this._loader.destroy();

    this._loader = null;
    this._loaderClass = null;
    this._dataSource = null;
    this._stashBuffer = null;
    this._stashUsed = this._stashSize = this._bufferSize = this._stashByteStart = 0;
    this._currentRange = null;
    this._speedSampler = null;
    this._isEarlyEofReconnecting = false;
    this._onDataArrival = null;
    this._onSeeked = null;
    this._onError = null;
    this._onComplete = null;
    this._onRedirect = null;
    this._onRecoveredEarlyEof = null;
    this._extraData = null;
  }

  isWorking() {
    return this._loader && this._loader.isWorking() && !this._paused;
  }

  isPaused() {
    return this._paused;
  }

  get status() {
    return this._loader.status;
  }

  get extraData() {
    return this._extraData;
  }

  set extraData(data) {
    this._extraData = data;
  } // prototype: function onDataArrival(chunks: ArrayBuffer, byteStart: number): number


  get onDataArrival() {
    return this._onDataArrival;
  }

  set onDataArrival(callback) {
    this._onDataArrival = callback;
  }

  get onSeeked() {
    return this._onSeeked;
  }

  set onSeeked(callback) {
    this._onSeeked = callback;
  } // prototype: function onError(type: number, info: {code: number, msg: string}): void


  get onError() {
    return this._onError;
  }

  set onError(callback) {
    this._onError = callback;
  }

  get onComplete() {
    return this._onComplete;
  }

  set onComplete(callback) {
    this._onComplete = callback;
  }

  get onRedirect() {
    return this._onRedirect;
  }

  set onRedirect(callback) {
    this._onRedirect = callback;
  }

  get onRecoveredEarlyEof() {
    return this._onRecoveredEarlyEof;
  }

  set onRecoveredEarlyEof(callback) {
    this._onRecoveredEarlyEof = callback;
  }

  get currentURL() {
    return this._dataSource.url;
  }

  get hasRedirect() {
    return this._redirectedURL != null || this._dataSource.redirectedURL != undefined;
  }

  get currentRedirectedURL() {
    return this._redirectedURL || this._dataSource.redirectedURL;
  } // in KB/s


  get currentSpeed() {
    if (this._loaderClass === _xhrRangeLoader.default) {
      // SpeedSampler is inaccuracy if loader is RangeLoader
      return this._loader.currentSpeed;
    }

    return this._speedSampler.lastSecondKBps;
  }

  get loaderType() {
    return this._loader.type;
  }

  _selectSeekHandler() {
    let config = this._config;

    if (config.seekType === 'range') {
      this._seekHandler = new _rangeSeekHandler.default(this._config.rangeLoadZeroStart);
    } else if (config.seekType === 'param') {
      let paramStart = config.seekParamStart || 'bstart';
      let paramEnd = config.seekParamEnd || 'bend';
      this._seekHandler = new _paramSeekHandler.default(paramStart, paramEnd);
    } else if (config.seekType === 'custom') {
      if (typeof config.customSeekHandler !== 'function') {
        throw new _exception.InvalidArgumentException('Custom seekType specified in config but invalid customSeekHandler!');
      }

      this._seekHandler = new config.customSeekHandler();
    } else {
      throw new _exception.InvalidArgumentException(`Invalid seekType in config: ${config.seekType}`);
    }
  }

  _selectLoader() {
    if (this._config.customLoader != null) {
      this._loaderClass = this._config.customLoader;
    } else if (this._isWebSocketURL) {
      this._loaderClass = _websocketLoader.default;
    } else if (_fetchStreamLoader.default.isSupported()) {
      this._loaderClass = _fetchStreamLoader.default;
    } else if (_xhrMozChunkedLoader.default.isSupported()) {
      this._loaderClass = _xhrMozChunkedLoader.default;
    } else if (_xhrRangeLoader.default.isSupported()) {
      this._loaderClass = _xhrRangeLoader.default;
    } else {
      throw new _exception.RuntimeException('Your browser doesn\'t support xhr with arraybuffer responseType!');
    }
  }

  _createLoader() {
    this._loader = new this._loaderClass(this._seekHandler, this._config);

    if (this._loader.needStashBuffer === false) {
      this._enableStash = false;
    }

    this._loader.onContentLengthKnown = this._onContentLengthKnown.bind(this);
    this._loader.onURLRedirect = this._onURLRedirect.bind(this);
    this._loader.onDataArrival = this._onLoaderChunkArrival.bind(this);
    this._loader.onComplete = this._onLoaderComplete.bind(this);
    this._loader.onError = this._onLoaderError.bind(this);
  }

  open(optionalFrom) {
    this._currentRange = {
      from: 0,
      to: -1
    };

    if (optionalFrom) {
      this._currentRange.from = optionalFrom;
    }

    this._speedSampler.reset();

    if (!optionalFrom) {
      this._fullRequestFlag = true;
    }

    this._loader.open(this._dataSource, Object.assign({}, this._currentRange));
  }

  abort() {
    this._loader.abort();

    if (this._paused) {
      this._paused = false;
      this._resumeFrom = 0;
    }
  }

  pause() {
    if (this.isWorking()) {
      this._loader.abort();

      if (this._stashUsed !== 0) {
        this._resumeFrom = this._stashByteStart;
        this._currentRange.to = this._stashByteStart - 1;
      } else {
        this._resumeFrom = this._currentRange.to + 1;
      }

      this._stashUsed = 0;
      this._stashByteStart = 0;
      this._paused = true;
    }
  }

  resume() {
    if (this._paused) {
      this._paused = false;
      let bytes = this._resumeFrom;
      this._resumeFrom = 0;

      this._internalSeek(bytes, true);
    }
  }

  seek(bytes) {
    this._paused = false;
    this._stashUsed = 0;
    this._stashByteStart = 0;

    this._internalSeek(bytes, true);
  }
  /**
   * When seeking request is from media seeking, unconsumed stash data should be dropped
   * However, stash data shouldn't be dropped if seeking requested from http reconnection
   *
   * @dropUnconsumed: Ignore and discard all unconsumed data in stash buffer
   */


  _internalSeek(bytes, dropUnconsumed) {
    if (this._loader.isWorking()) {
      this._loader.abort();
    } // dispatch & flush stash buffer before seek


    this._flushStashBuffer(dropUnconsumed);

    this._loader.destroy();

    this._loader = null;
    let requestRange = {
      from: bytes,
      to: -1
    };
    this._currentRange = {
      from: requestRange.from,
      to: -1
    };

    this._speedSampler.reset();

    this._stashSize = this._stashInitialSize;

    this._createLoader();

    this._loader.open(this._dataSource, requestRange);

    if (this._onSeeked) {
      this._onSeeked();
    }
  }

  updateUrl(url) {
    if (!url || typeof url !== 'string' || url.length === 0) {
      throw new _exception.InvalidArgumentException('Url must be a non-empty string!');
    }

    this._dataSource.url = url; // TODO: replace with new url
  }

  _expandBuffer(expectedBytes) {
    let bufferNewSize = this._stashSize;

    while (bufferNewSize + 1024 * 1024 * 1 < expectedBytes) {
      bufferNewSize *= 2;
    }

    bufferNewSize += 1024 * 1024 * 1; // bufferSize = stashSize + 1MB

    if (bufferNewSize === this._bufferSize) {
      return;
    }

    let newBuffer = new ArrayBuffer(bufferNewSize);

    if (this._stashUsed > 0) {
      // copy existing data into new buffer
      let stashOldArray = new Uint8Array(this._stashBuffer, 0, this._stashUsed);
      let stashNewArray = new Uint8Array(newBuffer, 0, bufferNewSize);
      stashNewArray.set(stashOldArray, 0);
    }

    this._stashBuffer = newBuffer;
    this._bufferSize = bufferNewSize;
  }

  _normalizeSpeed(input) {
    let list = this._speedNormalizeList;
    let last = list.length - 1;
    let mid = 0;
    let lbound = 0;
    let ubound = last;

    if (input < list[0]) {
      return list[0];
    } // binary search


    while (lbound <= ubound) {
      mid = lbound + Math.floor((ubound - lbound) / 2);

      if (mid === last || input >= list[mid] && input < list[mid + 1]) {
        return list[mid];
      } else if (list[mid] < input) {
        lbound = mid + 1;
      } else {
        ubound = mid - 1;
      }
    }
  }

  _adjustStashSize(normalized) {
    let stashSizeKB = 0;

    if (this._config.isLive) {
      // live stream: always use single normalized speed for size of stashSizeKB
      stashSizeKB = normalized;
    } else {
      if (normalized < 512) {
        stashSizeKB = normalized;
      } else if (normalized >= 512 && normalized <= 1024) {
        stashSizeKB = Math.floor(normalized * 1.5);
      } else {
        stashSizeKB = normalized * 2;
      }
    }

    if (stashSizeKB > 8192) {
      stashSizeKB = 8192;
    }

    let bufferSize = stashSizeKB * 1024 + 1024 * 1024 * 1; // stashSize + 1MB

    if (this._bufferSize < bufferSize) {
      this._expandBuffer(bufferSize);
    }

    this._stashSize = stashSizeKB * 1024;
  }

  _dispatchChunks(chunks, byteStart) {
    this._currentRange.to = byteStart + chunks.byteLength - 1;
    return this._onDataArrival(chunks, byteStart);
  }

  _onURLRedirect(redirectedURL) {
    this._redirectedURL = redirectedURL;

    if (this._onRedirect) {
      this._onRedirect(redirectedURL);
    }
  }

  _onContentLengthKnown(contentLength) {
    if (contentLength && this._fullRequestFlag) {
      this._totalLength = contentLength;
      this._fullRequestFlag = false;
    }
  }

  _onLoaderChunkArrival(chunk, byteStart, receivedLength) {
    if (!this._onDataArrival) {
      throw new _exception.IllegalStateException('IOController: No existing consumer (onDataArrival) callback!');
    }

    if (this._paused) {
      return;
    }

    if (this._isEarlyEofReconnecting) {
      // Auto-reconnect for EarlyEof succeed, notify to upper-layer by callback
      this._isEarlyEofReconnecting = false;

      if (this._onRecoveredEarlyEof) {
        this._onRecoveredEarlyEof();
      }
    }

    this._speedSampler.addBytes(chunk.byteLength); // adjust stash buffer size according to network speed dynamically


    let KBps = this._speedSampler.lastSecondKBps;

    if (KBps !== 0) {
      let normalized = this._normalizeSpeed(KBps);

      if (this._speedNormalized !== normalized) {
        this._speedNormalized = normalized;

        this._adjustStashSize(normalized);
      }
    }

    if (!this._enableStash) {
      // disable stash
      if (this._stashUsed === 0) {
        // dispatch chunk directly to consumer;
        // check ret value (consumed bytes) and stash unconsumed to stashBuffer
        let consumed = this._dispatchChunks(chunk, byteStart);

        if (consumed < chunk.byteLength) {
          // unconsumed data remain.
          let remain = chunk.byteLength - consumed;

          if (remain > this._bufferSize) {
            this._expandBuffer(remain);
          }

          let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);
          stashArray.set(new Uint8Array(chunk, consumed), 0);
          this._stashUsed += remain;
          this._stashByteStart = byteStart + consumed;
        }
      } else {
        // else: Merge chunk into stashBuffer, and dispatch stashBuffer to consumer.
        if (this._stashUsed + chunk.byteLength > this._bufferSize) {
          this._expandBuffer(this._stashUsed + chunk.byteLength);
        }

        let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);
        stashArray.set(new Uint8Array(chunk), this._stashUsed);
        this._stashUsed += chunk.byteLength;

        let consumed = this._dispatchChunks(this._stashBuffer.slice(0, this._stashUsed), this._stashByteStart);

        if (consumed < this._stashUsed && consumed > 0) {
          // unconsumed data remain
          let remainArray = new Uint8Array(this._stashBuffer, consumed);
          stashArray.set(remainArray, 0);
        }

        this._stashUsed -= consumed;
        this._stashByteStart += consumed;
      }
    } else {
      // enable stash
      if (this._stashUsed === 0 && this._stashByteStart === 0) {
        // seeked? or init chunk?
        // This is the first chunk after seek action
        this._stashByteStart = byteStart;
      }

      if (this._stashUsed + chunk.byteLength <= this._stashSize) {
        // just stash
        let stashArray = new Uint8Array(this._stashBuffer, 0, this._stashSize);
        stashArray.set(new Uint8Array(chunk), this._stashUsed);
        this._stashUsed += chunk.byteLength;
      } else {
        // stashUsed + chunkSize > stashSize, size limit exceeded
        let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);

        if (this._stashUsed > 0) {
          // There're stash datas in buffer
          // dispatch the whole stashBuffer, and stash remain data
          // then append chunk to stashBuffer (stash)
          let buffer = this._stashBuffer.slice(0, this._stashUsed);

          let consumed = this._dispatchChunks(buffer, this._stashByteStart);

          if (consumed < buffer.byteLength) {
            if (consumed > 0) {
              let remainArray = new Uint8Array(buffer, consumed);
              stashArray.set(remainArray, 0);
              this._stashUsed = remainArray.byteLength;
              this._stashByteStart += consumed;
            }
          } else {
            this._stashUsed = 0;
            this._stashByteStart += consumed;
          }

          if (this._stashUsed + chunk.byteLength > this._bufferSize) {
            this._expandBuffer(this._stashUsed + chunk.byteLength);

            stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);
          }

          stashArray.set(new Uint8Array(chunk), this._stashUsed);
          this._stashUsed += chunk.byteLength;
        } else {
          // stash buffer empty, but chunkSize > stashSize (oh, holy shit)
          // dispatch chunk directly and stash remain data
          let consumed = this._dispatchChunks(chunk, byteStart);

          if (consumed < chunk.byteLength) {
            let remain = chunk.byteLength - consumed;

            if (remain > this._bufferSize) {
              this._expandBuffer(remain);

              stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);
            }

            stashArray.set(new Uint8Array(chunk, consumed), 0);
            this._stashUsed += remain;
            this._stashByteStart = byteStart + consumed;
          }
        }
      }
    }
  }

  _flushStashBuffer(dropUnconsumed) {
    if (this._stashUsed > 0) {
      let buffer = this._stashBuffer.slice(0, this._stashUsed);

      let consumed = this._dispatchChunks(buffer, this._stashByteStart);

      let remain = buffer.byteLength - consumed;

      if (consumed < buffer.byteLength) {
        if (dropUnconsumed) {
          _logger.default.w(this.TAG, `${remain} bytes unconsumed data remain when flush buffer, dropped`);
        } else {
          if (consumed > 0) {
            let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);
            let remainArray = new Uint8Array(buffer, consumed);
            stashArray.set(remainArray, 0);
            this._stashUsed = remainArray.byteLength;
            this._stashByteStart += consumed;
          }

          return 0;
        }
      }

      this._stashUsed = 0;
      this._stashByteStart = 0;
      return remain;
    }

    return 0;
  }

  _onLoaderComplete(from, to) {
    // Force-flush stash buffer, and drop unconsumed data
    this._flushStashBuffer(true);

    if (this._onComplete) {
      this._onComplete(this._extraData);
    }
  }

  _onLoaderError(type, data) {
    _logger.default.e(this.TAG, `Loader error, code = ${data.code}, msg = ${data.msg}`);

    this._flushStashBuffer(false);

    if (this._isEarlyEofReconnecting) {
      // Auto-reconnect for EarlyEof failed, throw UnrecoverableEarlyEof error to upper-layer
      this._isEarlyEofReconnecting = false;
      type = _loader.LoaderErrors.UNRECOVERABLE_EARLY_EOF;
    }

    switch (type) {
      case _loader.LoaderErrors.EARLY_EOF:
        {
          if (!this._config.isLive) {
            // Do internal http reconnect if not live stream
            if (this._totalLength) {
              let nextFrom = this._currentRange.to + 1;

              if (nextFrom < this._totalLength) {
                _logger.default.w(this.TAG, 'Connection lost, trying reconnect...');

                this._isEarlyEofReconnecting = true;

                this._internalSeek(nextFrom, false);
              }

              return;
            } // else: We don't know totalLength, throw UnrecoverableEarlyEof

          } // live stream: throw UnrecoverableEarlyEof error to upper-layer


          type = _loader.LoaderErrors.UNRECOVERABLE_EARLY_EOF;
          break;
        }

      case _loader.LoaderErrors.UNRECOVERABLE_EARLY_EOF:
      case _loader.LoaderErrors.CONNECTING_TIMEOUT:
      case _loader.LoaderErrors.HTTP_STATUS_CODE_INVALID:
      case _loader.LoaderErrors.EXCEPTION:
        break;
    }

    if (this._onError) {
      this._onError(type, data);
    } else {
      throw new _exception.RuntimeException('IOException: ' + data.msg);
    }
  }

}

var _default = IOController;
exports.default = _default;
},{"../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","./speed-sampler.js":"node_modules/flv.js/src/io/speed-sampler.js","./loader.js":"node_modules/flv.js/src/io/loader.js","./fetch-stream-loader.js":"node_modules/flv.js/src/io/fetch-stream-loader.js","./xhr-moz-chunked-loader.js":"node_modules/flv.js/src/io/xhr-moz-chunked-loader.js","./xhr-msstream-loader.js":"node_modules/flv.js/src/io/xhr-msstream-loader.js","./xhr-range-loader.js":"node_modules/flv.js/src/io/xhr-range-loader.js","./websocket-loader.js":"node_modules/flv.js/src/io/websocket-loader.js","./range-seek-handler.js":"node_modules/flv.js/src/io/range-seek-handler.js","./param-seek-handler.js":"node_modules/flv.js/src/io/param-seek-handler.js","../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/config.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createDefaultConfig = createDefaultConfig;
exports.defaultConfig = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const defaultConfig = {
  enableWorker: false,
  enableStashBuffer: true,
  stashInitialSize: undefined,
  isLive: false,
  lazyLoad: true,
  lazyLoadMaxDuration: 3 * 60,
  lazyLoadRecoverDuration: 30,
  deferLoadAfterSourceOpen: true,
  // autoCleanupSourceBuffer: default as false, leave unspecified
  autoCleanupMaxBackwardDuration: 3 * 60,
  autoCleanupMinBackwardDuration: 2 * 60,
  statisticsInfoReportInterval: 600,
  fixAudioTimestampGap: true,
  accurateSeek: false,
  seekType: 'range',
  // [range, param, custom]
  seekParamStart: 'bstart',
  seekParamEnd: 'bend',
  rangeLoadZeroStart: false,
  customSeekHandler: undefined,
  reuseRedirectedURL: false,
  // referrerPolicy: leave as unspecified
  headers: undefined,
  customLoader: undefined
};
exports.defaultConfig = defaultConfig;

function createDefaultConfig() {
  return Object.assign({}, defaultConfig);
}
},{}],"node_modules/flv.js/src/core/features.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ioController = _interopRequireDefault(require("../io/io-controller.js"));

var _config = require("../config.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Features {
  static supportMSEH264Playback() {
    return window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"');
  }

  static supportNetworkStreamIO() {
    let ioctl = new _ioController.default({}, (0, _config.createDefaultConfig)());
    let loaderType = ioctl.loaderType;
    ioctl.destroy();
    return loaderType == 'fetch-stream-loader' || loaderType == 'xhr-moz-chunked-loader';
  }

  static getNetworkLoaderTypeName() {
    let ioctl = new _ioController.default({}, (0, _config.createDefaultConfig)());
    let loaderType = ioctl.loaderType;
    ioctl.destroy();
    return loaderType;
  }

  static supportNativeMediaPlayback(mimeType) {
    if (Features.videoElement == undefined) {
      Features.videoElement = window.document.createElement('video');
    }

    let canPlay = Features.videoElement.canPlayType(mimeType);
    return canPlay === 'probably' || canPlay == 'maybe';
  }

  static getFeatureList() {
    let features = {
      mseFlvPlayback: false,
      mseLiveFlvPlayback: false,
      networkStreamIO: false,
      networkLoaderName: '',
      nativeMP4H264Playback: false,
      nativeWebmVP8Playback: false,
      nativeWebmVP9Playback: false
    };
    features.mseFlvPlayback = Features.supportMSEH264Playback();
    features.networkStreamIO = Features.supportNetworkStreamIO();
    features.networkLoaderName = Features.getNetworkLoaderTypeName();
    features.mseLiveFlvPlayback = features.mseFlvPlayback && features.networkStreamIO;
    features.nativeMP4H264Playback = Features.supportNativeMediaPlayback('video/mp4; codecs="avc1.42001E, mp4a.40.2"');
    features.nativeWebmVP8Playback = Features.supportNativeMediaPlayback('video/webm; codecs="vp8.0, vorbis"');
    features.nativeWebmVP9Playback = Features.supportNativeMediaPlayback('video/webm; codecs="vp9"');
    return features;
  }

}

var _default = Features;
exports.default = _default;
},{"../io/io-controller.js":"node_modules/flv.js/src/io/io-controller.js","../config.js":"node_modules/flv.js/src/config.js"}],"node_modules/flv.js/src/player/player-events.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const PlayerEvents = {
  ERROR: 'error',
  LOADING_COMPLETE: 'loading_complete',
  RECOVERED_EARLY_EOF: 'recovered_early_eof',
  MEDIA_INFO: 'media_info',
  METADATA_ARRIVED: 'metadata_arrived',
  SCRIPTDATA_ARRIVED: 'scriptdata_arrived',
  STATISTICS_INFO: 'statistics_info'
};
var _default = PlayerEvents;
exports.default = _default;
},{}],"node_modules/flv.js/src/utils/logging-control.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _events = _interopRequireDefault(require("events"));

var _logger = _interopRequireDefault(require("./logger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class LoggingControl {
  static get forceGlobalTag() {
    return _logger.default.FORCE_GLOBAL_TAG;
  }

  static set forceGlobalTag(enable) {
    _logger.default.FORCE_GLOBAL_TAG = enable;

    LoggingControl._notifyChange();
  }

  static get globalTag() {
    return _logger.default.GLOBAL_TAG;
  }

  static set globalTag(tag) {
    _logger.default.GLOBAL_TAG = tag;

    LoggingControl._notifyChange();
  }

  static get enableAll() {
    return _logger.default.ENABLE_VERBOSE && _logger.default.ENABLE_DEBUG && _logger.default.ENABLE_INFO && _logger.default.ENABLE_WARN && _logger.default.ENABLE_ERROR;
  }

  static set enableAll(enable) {
    _logger.default.ENABLE_VERBOSE = enable;
    _logger.default.ENABLE_DEBUG = enable;
    _logger.default.ENABLE_INFO = enable;
    _logger.default.ENABLE_WARN = enable;
    _logger.default.ENABLE_ERROR = enable;

    LoggingControl._notifyChange();
  }

  static get enableDebug() {
    return _logger.default.ENABLE_DEBUG;
  }

  static set enableDebug(enable) {
    _logger.default.ENABLE_DEBUG = enable;

    LoggingControl._notifyChange();
  }

  static get enableVerbose() {
    return _logger.default.ENABLE_VERBOSE;
  }

  static set enableVerbose(enable) {
    _logger.default.ENABLE_VERBOSE = enable;

    LoggingControl._notifyChange();
  }

  static get enableInfo() {
    return _logger.default.ENABLE_INFO;
  }

  static set enableInfo(enable) {
    _logger.default.ENABLE_INFO = enable;

    LoggingControl._notifyChange();
  }

  static get enableWarn() {
    return _logger.default.ENABLE_WARN;
  }

  static set enableWarn(enable) {
    _logger.default.ENABLE_WARN = enable;

    LoggingControl._notifyChange();
  }

  static get enableError() {
    return _logger.default.ENABLE_ERROR;
  }

  static set enableError(enable) {
    _logger.default.ENABLE_ERROR = enable;

    LoggingControl._notifyChange();
  }

  static getConfig() {
    return {
      globalTag: _logger.default.GLOBAL_TAG,
      forceGlobalTag: _logger.default.FORCE_GLOBAL_TAG,
      enableVerbose: _logger.default.ENABLE_VERBOSE,
      enableDebug: _logger.default.ENABLE_DEBUG,
      enableInfo: _logger.default.ENABLE_INFO,
      enableWarn: _logger.default.ENABLE_WARN,
      enableError: _logger.default.ENABLE_ERROR,
      enableCallback: _logger.default.ENABLE_CALLBACK
    };
  }

  static applyConfig(config) {
    _logger.default.GLOBAL_TAG = config.globalTag;
    _logger.default.FORCE_GLOBAL_TAG = config.forceGlobalTag;
    _logger.default.ENABLE_VERBOSE = config.enableVerbose;
    _logger.default.ENABLE_DEBUG = config.enableDebug;
    _logger.default.ENABLE_INFO = config.enableInfo;
    _logger.default.ENABLE_WARN = config.enableWarn;
    _logger.default.ENABLE_ERROR = config.enableError;
    _logger.default.ENABLE_CALLBACK = config.enableCallback;
  }

  static _notifyChange() {
    let emitter = LoggingControl.emitter;

    if (emitter.listenerCount('change') > 0) {
      let config = LoggingControl.getConfig();
      emitter.emit('change', config);
    }
  }

  static registerListener(listener) {
    LoggingControl.emitter.addListener('change', listener);
  }

  static removeListener(listener) {
    LoggingControl.emitter.removeListener('change', listener);
  }

  static addLogListener(listener) {
    _logger.default.emitter.addListener('log', listener);

    if (_logger.default.emitter.listenerCount('log') > 0) {
      _logger.default.ENABLE_CALLBACK = true;

      LoggingControl._notifyChange();
    }
  }

  static removeLogListener(listener) {
    _logger.default.emitter.removeListener('log', listener);

    if (_logger.default.emitter.listenerCount('log') === 0) {
      _logger.default.ENABLE_CALLBACK = false;

      LoggingControl._notifyChange();
    }
  }

}

LoggingControl.emitter = new _events.default();
var _default = LoggingControl;
exports.default = _default;
},{"events":"node_modules/events/events.js","./logger.js":"node_modules/flv.js/src/utils/logger.js"}],"node_modules/flv.js/src/core/media-info.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class MediaInfo {
  constructor() {
    this.mimeType = null;
    this.duration = null;
    this.hasAudio = null;
    this.hasVideo = null;
    this.audioCodec = null;
    this.videoCodec = null;
    this.audioDataRate = null;
    this.videoDataRate = null;
    this.audioSampleRate = null;
    this.audioChannelCount = null;
    this.width = null;
    this.height = null;
    this.fps = null;
    this.profile = null;
    this.level = null;
    this.refFrames = null;
    this.chromaFormat = null;
    this.sarNum = null;
    this.sarDen = null;
    this.metadata = null;
    this.segments = null; // MediaInfo[]

    this.segmentCount = null;
    this.hasKeyframesIndex = null;
    this.keyframesIndex = null;
  }

  isComplete() {
    let audioInfoComplete = this.hasAudio === false || this.hasAudio === true && this.audioCodec != null && this.audioSampleRate != null && this.audioChannelCount != null;
    let videoInfoComplete = this.hasVideo === false || this.hasVideo === true && this.videoCodec != null && this.width != null && this.height != null && this.fps != null && this.profile != null && this.level != null && this.refFrames != null && this.chromaFormat != null && this.sarNum != null && this.sarDen != null; // keyframesIndex may not be present

    return this.mimeType != null && this.duration != null && this.metadata != null && this.hasKeyframesIndex != null && audioInfoComplete && videoInfoComplete;
  }

  isSeekable() {
    return this.hasKeyframesIndex === true;
  }

  getNearestKeyframe(milliseconds) {
    if (this.keyframesIndex == null) {
      return null;
    }

    let table = this.keyframesIndex;

    let keyframeIdx = this._search(table.times, milliseconds);

    return {
      index: keyframeIdx,
      milliseconds: table.times[keyframeIdx],
      fileposition: table.filepositions[keyframeIdx]
    };
  }

  _search(list, value) {
    let idx = 0;
    let last = list.length - 1;
    let mid = 0;
    let lbound = 0;
    let ubound = last;

    if (value < list[0]) {
      idx = 0;
      lbound = ubound + 1; // skip search
    }

    while (lbound <= ubound) {
      mid = lbound + Math.floor((ubound - lbound) / 2);

      if (mid === last || value >= list[mid] && value < list[mid + 1]) {
        idx = mid;
        break;
      } else if (list[mid] < value) {
        lbound = mid + 1;
      } else {
        ubound = mid - 1;
      }
    }

    return idx;
  }

}

var _default = MediaInfo;
exports.default = _default;
},{}],"node_modules/flv.js/src/utils/utf8-conv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * This file is derived from C++ project libWinTF8 (https://github.com/m13253/libWinTF8)
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function checkContinuation(uint8array, start, checkLength) {
  let array = uint8array;

  if (start + checkLength < array.length) {
    while (checkLength--) {
      if ((array[++start] & 0xC0) !== 0x80) return false;
    }

    return true;
  } else {
    return false;
  }
}

function decodeUTF8(uint8array) {
  let out = [];
  let input = uint8array;
  let i = 0;
  let length = uint8array.length;

  while (i < length) {
    if (input[i] < 0x80) {
      out.push(String.fromCharCode(input[i]));
      ++i;
      continue;
    } else if (input[i] < 0xC0) {// fallthrough
    } else if (input[i] < 0xE0) {
      if (checkContinuation(input, i, 1)) {
        let ucs4 = (input[i] & 0x1F) << 6 | input[i + 1] & 0x3F;

        if (ucs4 >= 0x80) {
          out.push(String.fromCharCode(ucs4 & 0xFFFF));
          i += 2;
          continue;
        }
      }
    } else if (input[i] < 0xF0) {
      if (checkContinuation(input, i, 2)) {
        let ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;

        if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {
          out.push(String.fromCharCode(ucs4 & 0xFFFF));
          i += 3;
          continue;
        }
      }
    } else if (input[i] < 0xF8) {
      if (checkContinuation(input, i, 3)) {
        let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 | (input[i + 2] & 0x3F) << 6 | input[i + 3] & 0x3F;

        if (ucs4 > 0x10000 && ucs4 < 0x110000) {
          ucs4 -= 0x10000;
          out.push(String.fromCharCode(ucs4 >>> 10 | 0xD800));
          out.push(String.fromCharCode(ucs4 & 0x3FF | 0xDC00));
          i += 4;
          continue;
        }
      }
    }

    out.push(String.fromCharCode(0xFFFD));
    ++i;
  }

  return out.join('');
}

var _default = decodeUTF8;
exports.default = _default;
},{}],"node_modules/flv.js/src/demux/amf-parser.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _utf8Conv = _interopRequireDefault(require("../utils/utf8-conv.js"));

var _exception = require("../utils/exception.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
let le = function () {
  let buf = new ArrayBuffer(2);
  new DataView(buf).setInt16(0, 256, true); // little-endian write

  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE
}();

class AMF {
  static parseScriptData(arrayBuffer, dataOffset, dataSize) {
    let data = {};

    try {
      let name = AMF.parseValue(arrayBuffer, dataOffset, dataSize);
      let value = AMF.parseValue(arrayBuffer, dataOffset + name.size, dataSize - name.size);
      data[name.data] = value.data;
    } catch (e) {
      _logger.default.e('AMF', e.toString());
    }

    return data;
  }

  static parseObject(arrayBuffer, dataOffset, dataSize) {
    if (dataSize < 3) {
      throw new _exception.IllegalStateException('Data not enough when parse ScriptDataObject');
    }

    let name = AMF.parseString(arrayBuffer, dataOffset, dataSize);
    let value = AMF.parseValue(arrayBuffer, dataOffset + name.size, dataSize - name.size);
    let isObjectEnd = value.objectEnd;
    return {
      data: {
        name: name.data,
        value: value.data
      },
      size: name.size + value.size,
      objectEnd: isObjectEnd
    };
  }

  static parseVariable(arrayBuffer, dataOffset, dataSize) {
    return AMF.parseObject(arrayBuffer, dataOffset, dataSize);
  }

  static parseString(arrayBuffer, dataOffset, dataSize) {
    if (dataSize < 2) {
      throw new _exception.IllegalStateException('Data not enough when parse String');
    }

    let v = new DataView(arrayBuffer, dataOffset, dataSize);
    let length = v.getUint16(0, !le);
    let str;

    if (length > 0) {
      str = (0, _utf8Conv.default)(new Uint8Array(arrayBuffer, dataOffset + 2, length));
    } else {
      str = '';
    }

    return {
      data: str,
      size: 2 + length
    };
  }

  static parseLongString(arrayBuffer, dataOffset, dataSize) {
    if (dataSize < 4) {
      throw new _exception.IllegalStateException('Data not enough when parse LongString');
    }

    let v = new DataView(arrayBuffer, dataOffset, dataSize);
    let length = v.getUint32(0, !le);
    let str;

    if (length > 0) {
      str = (0, _utf8Conv.default)(new Uint8Array(arrayBuffer, dataOffset + 4, length));
    } else {
      str = '';
    }

    return {
      data: str,
      size: 4 + length
    };
  }

  static parseDate(arrayBuffer, dataOffset, dataSize) {
    if (dataSize < 10) {
      throw new _exception.IllegalStateException('Data size invalid when parse Date');
    }

    let v = new DataView(arrayBuffer, dataOffset, dataSize);
    let timestamp = v.getFloat64(0, !le);
    let localTimeOffset = v.getInt16(8, !le);
    timestamp += localTimeOffset * 60 * 1000; // get UTC time

    return {
      data: new Date(timestamp),
      size: 8 + 2
    };
  }

  static parseValue(arrayBuffer, dataOffset, dataSize) {
    if (dataSize < 1) {
      throw new _exception.IllegalStateException('Data not enough when parse Value');
    }

    let v = new DataView(arrayBuffer, dataOffset, dataSize);
    let offset = 1;
    let type = v.getUint8(0);
    let value;
    let objectEnd = false;

    try {
      switch (type) {
        case 0:
          // Number(Double) type
          value = v.getFloat64(1, !le);
          offset += 8;
          break;

        case 1:
          {
            // Boolean type
            let b = v.getUint8(1);
            value = b ? true : false;
            offset += 1;
            break;
          }

        case 2:
          {
            // String type
            let amfstr = AMF.parseString(arrayBuffer, dataOffset + 1, dataSize - 1);
            value = amfstr.data;
            offset += amfstr.size;
            break;
          }

        case 3:
          {
            // Object(s) type
            value = {};
            let terminal = 0; // workaround for malformed Objects which has missing ScriptDataObjectEnd

            if ((v.getUint32(dataSize - 4, !le) & 0x00FFFFFF) === 9) {
              terminal = 3;
            }

            while (offset < dataSize - 4) {
              // 4 === type(UI8) + ScriptDataObjectEnd(UI24)
              let amfobj = AMF.parseObject(arrayBuffer, dataOffset + offset, dataSize - offset - terminal);
              if (amfobj.objectEnd) break;
              value[amfobj.data.name] = amfobj.data.value;
              offset += amfobj.size;
            }

            if (offset <= dataSize - 3) {
              let marker = v.getUint32(offset - 1, !le) & 0x00FFFFFF;

              if (marker === 9) {
                offset += 3;
              }
            }

            break;
          }

        case 8:
          {
            // ECMA array type (Mixed array)
            value = {};
            offset += 4; // ECMAArrayLength(UI32)

            let terminal = 0; // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd

            if ((v.getUint32(dataSize - 4, !le) & 0x00FFFFFF) === 9) {
              terminal = 3;
            }

            while (offset < dataSize - 8) {
              // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)
              let amfvar = AMF.parseVariable(arrayBuffer, dataOffset + offset, dataSize - offset - terminal);
              if (amfvar.objectEnd) break;
              value[amfvar.data.name] = amfvar.data.value;
              offset += amfvar.size;
            }

            if (offset <= dataSize - 3) {
              let marker = v.getUint32(offset - 1, !le) & 0x00FFFFFF;

              if (marker === 9) {
                offset += 3;
              }
            }

            break;
          }

        case 9:
          // ScriptDataObjectEnd
          value = undefined;
          offset = 1;
          objectEnd = true;
          break;

        case 10:
          {
            // Strict array type
            // ScriptDataValue[n]. NOTE: according to video_file_format_spec_v10_1.pdf
            value = [];
            let strictArrayLength = v.getUint32(1, !le);
            offset += 4;

            for (let i = 0; i < strictArrayLength; i++) {
              let val = AMF.parseValue(arrayBuffer, dataOffset + offset, dataSize - offset);
              value.push(val.data);
              offset += val.size;
            }

            break;
          }

        case 11:
          {
            // Date type
            let date = AMF.parseDate(arrayBuffer, dataOffset + 1, dataSize - 1);
            value = date.data;
            offset += date.size;
            break;
          }

        case 12:
          {
            // Long string type
            let amfLongStr = AMF.parseString(arrayBuffer, dataOffset + 1, dataSize - 1);
            value = amfLongStr.data;
            offset += amfLongStr.size;
            break;
          }

        default:
          // ignore and skip
          offset = dataSize;

          _logger.default.w('AMF', 'Unsupported AMF value type ' + type);

      }
    } catch (e) {
      _logger.default.e('AMF', e.toString());
    }

    return {
      data: value,
      size: offset,
      objectEnd: objectEnd
    };
  }

}

var _default = AMF;
exports.default = _default;
},{"../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","../utils/utf8-conv.js":"node_modules/flv.js/src/utils/utf8-conv.js","../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/demux/exp-golomb.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _exception = require("../utils/exception.js");

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Exponential-Golomb buffer decoder
class ExpGolomb {
  constructor(uint8array) {
    this.TAG = 'ExpGolomb';
    this._buffer = uint8array;
    this._buffer_index = 0;
    this._total_bytes = uint8array.byteLength;
    this._total_bits = uint8array.byteLength * 8;
    this._current_word = 0;
    this._current_word_bits_left = 0;
  }

  destroy() {
    this._buffer = null;
  }

  _fillCurrentWord() {
    let buffer_bytes_left = this._total_bytes - this._buffer_index;
    if (buffer_bytes_left <= 0) throw new _exception.IllegalStateException('ExpGolomb: _fillCurrentWord() but no bytes available');
    let bytes_read = Math.min(4, buffer_bytes_left);
    let word = new Uint8Array(4);
    word.set(this._buffer.subarray(this._buffer_index, this._buffer_index + bytes_read));
    this._current_word = new DataView(word.buffer).getUint32(0, false);
    this._buffer_index += bytes_read;
    this._current_word_bits_left = bytes_read * 8;
  }

  readBits(bits) {
    if (bits > 32) throw new _exception.InvalidArgumentException('ExpGolomb: readBits() bits exceeded max 32bits!');

    if (bits <= this._current_word_bits_left) {
      let result = this._current_word >>> 32 - bits;
      this._current_word <<= bits;
      this._current_word_bits_left -= bits;
      return result;
    }

    let result = this._current_word_bits_left ? this._current_word : 0;
    result = result >>> 32 - this._current_word_bits_left;
    let bits_need_left = bits - this._current_word_bits_left;

    this._fillCurrentWord();

    let bits_read_next = Math.min(bits_need_left, this._current_word_bits_left);
    let result2 = this._current_word >>> 32 - bits_read_next;
    this._current_word <<= bits_read_next;
    this._current_word_bits_left -= bits_read_next;
    result = result << bits_read_next | result2;
    return result;
  }

  readBool() {
    return this.readBits(1) === 1;
  }

  readByte() {
    return this.readBits(8);
  }

  _skipLeadingZero() {
    let zero_count;

    for (zero_count = 0; zero_count < this._current_word_bits_left; zero_count++) {
      if (0 !== (this._current_word & 0x80000000 >>> zero_count)) {
        this._current_word <<= zero_count;
        this._current_word_bits_left -= zero_count;
        return zero_count;
      }
    }

    this._fillCurrentWord();

    return zero_count + this._skipLeadingZero();
  }

  readUEG() {
    // unsigned exponential golomb
    let leading_zeros = this._skipLeadingZero();

    return this.readBits(leading_zeros + 1) - 1;
  }

  readSEG() {
    // signed exponential golomb
    let value = this.readUEG();

    if (value & 0x01) {
      return value + 1 >>> 1;
    } else {
      return -1 * (value >>> 1);
    }
  }

}

var _default = ExpGolomb;
exports.default = _default;
},{"../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/demux/sps-parser.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _expGolomb = _interopRequireDefault(require("./exp-golomb.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class SPSParser {
  static _ebsp2rbsp(uint8array) {
    let src = uint8array;
    let src_length = src.byteLength;
    let dst = new Uint8Array(src_length);
    let dst_idx = 0;

    for (let i = 0; i < src_length; i++) {
      if (i >= 2) {
        // Unescape: Skip 0x03 after 00 00
        if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {
          continue;
        }
      }

      dst[dst_idx] = src[i];
      dst_idx++;
    }

    return new Uint8Array(dst.buffer, 0, dst_idx);
  }

  static parseSPS(uint8array) {
    let rbsp = SPSParser._ebsp2rbsp(uint8array);

    let gb = new _expGolomb.default(rbsp);
    gb.readByte();
    let profile_idc = gb.readByte(); // profile_idc

    gb.readByte(); // constraint_set_flags[5] + reserved_zero[3]

    let level_idc = gb.readByte(); // level_idc

    gb.readUEG(); // seq_parameter_set_id

    let profile_string = SPSParser.getProfileString(profile_idc);
    let level_string = SPSParser.getLevelString(level_idc);
    let chroma_format_idc = 1;
    let chroma_format = 420;
    let chroma_format_table = [0, 420, 422, 444];
    let bit_depth = 8;

    if (profile_idc === 100 || profile_idc === 110 || profile_idc === 122 || profile_idc === 244 || profile_idc === 44 || profile_idc === 83 || profile_idc === 86 || profile_idc === 118 || profile_idc === 128 || profile_idc === 138 || profile_idc === 144) {
      chroma_format_idc = gb.readUEG();

      if (chroma_format_idc === 3) {
        gb.readBits(1); // separate_colour_plane_flag
      }

      if (chroma_format_idc <= 3) {
        chroma_format = chroma_format_table[chroma_format_idc];
      }

      bit_depth = gb.readUEG() + 8; // bit_depth_luma_minus8

      gb.readUEG(); // bit_depth_chroma_minus8

      gb.readBits(1); // qpprime_y_zero_transform_bypass_flag

      if (gb.readBool()) {
        // seq_scaling_matrix_present_flag
        let scaling_list_count = chroma_format_idc !== 3 ? 8 : 12;

        for (let i = 0; i < scaling_list_count; i++) {
          if (gb.readBool()) {
            // seq_scaling_list_present_flag
            if (i < 6) {
              SPSParser._skipScalingList(gb, 16);
            } else {
              SPSParser._skipScalingList(gb, 64);
            }
          }
        }
      }
    }

    gb.readUEG(); // log2_max_frame_num_minus4

    let pic_order_cnt_type = gb.readUEG();

    if (pic_order_cnt_type === 0) {
      gb.readUEG(); // log2_max_pic_order_cnt_lsb_minus_4
    } else if (pic_order_cnt_type === 1) {
      gb.readBits(1); // delta_pic_order_always_zero_flag

      gb.readSEG(); // offset_for_non_ref_pic

      gb.readSEG(); // offset_for_top_to_bottom_field

      let num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();

      for (let i = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {
        gb.readSEG(); // offset_for_ref_frame
      }
    }

    let ref_frames = gb.readUEG(); // max_num_ref_frames

    gb.readBits(1); // gaps_in_frame_num_value_allowed_flag

    let pic_width_in_mbs_minus1 = gb.readUEG();
    let pic_height_in_map_units_minus1 = gb.readUEG();
    let frame_mbs_only_flag = gb.readBits(1);

    if (frame_mbs_only_flag === 0) {
      gb.readBits(1); // mb_adaptive_frame_field_flag
    }

    gb.readBits(1); // direct_8x8_inference_flag

    let frame_crop_left_offset = 0;
    let frame_crop_right_offset = 0;
    let frame_crop_top_offset = 0;
    let frame_crop_bottom_offset = 0;
    let frame_cropping_flag = gb.readBool();

    if (frame_cropping_flag) {
      frame_crop_left_offset = gb.readUEG();
      frame_crop_right_offset = gb.readUEG();
      frame_crop_top_offset = gb.readUEG();
      frame_crop_bottom_offset = gb.readUEG();
    }

    let sar_width = 1,
        sar_height = 1;
    let fps = 0,
        fps_fixed = true,
        fps_num = 0,
        fps_den = 0;
    let vui_parameters_present_flag = gb.readBool();

    if (vui_parameters_present_flag) {
      if (gb.readBool()) {
        // aspect_ratio_info_present_flag
        let aspect_ratio_idc = gb.readByte();
        let sar_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];
        let sar_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1];

        if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {
          sar_width = sar_w_table[aspect_ratio_idc - 1];
          sar_height = sar_h_table[aspect_ratio_idc - 1];
        } else if (aspect_ratio_idc === 255) {
          sar_width = gb.readByte() << 8 | gb.readByte();
          sar_height = gb.readByte() << 8 | gb.readByte();
        }
      }

      if (gb.readBool()) {
        // overscan_info_present_flag
        gb.readBool(); // overscan_appropriate_flag
      }

      if (gb.readBool()) {
        // video_signal_type_present_flag
        gb.readBits(4); // video_format & video_full_range_flag

        if (gb.readBool()) {
          // colour_description_present_flag
          gb.readBits(24); // colour_primaries & transfer_characteristics & matrix_coefficients
        }
      }

      if (gb.readBool()) {
        // chroma_loc_info_present_flag
        gb.readUEG(); // chroma_sample_loc_type_top_field

        gb.readUEG(); // chroma_sample_loc_type_bottom_field
      }

      if (gb.readBool()) {
        // timing_info_present_flag
        let num_units_in_tick = gb.readBits(32);
        let time_scale = gb.readBits(32);
        fps_fixed = gb.readBool(); // fixed_frame_rate_flag

        fps_num = time_scale;
        fps_den = num_units_in_tick * 2;
        fps = fps_num / fps_den;
      }
    }

    let sarScale = 1;

    if (sar_width !== 1 || sar_height !== 1) {
      sarScale = sar_width / sar_height;
    }

    let crop_unit_x = 0,
        crop_unit_y = 0;

    if (chroma_format_idc === 0) {
      crop_unit_x = 1;
      crop_unit_y = 2 - frame_mbs_only_flag;
    } else {
      let sub_wc = chroma_format_idc === 3 ? 1 : 2;
      let sub_hc = chroma_format_idc === 1 ? 2 : 1;
      crop_unit_x = sub_wc;
      crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);
    }

    let codec_width = (pic_width_in_mbs_minus1 + 1) * 16;
    let codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);
    codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;
    codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;
    let present_width = Math.ceil(codec_width * sarScale);
    gb.destroy();
    gb = null;
    return {
      profile_string: profile_string,
      // baseline, high, high10, ...
      level_string: level_string,
      // 3, 3.1, 4, 4.1, 5, 5.1, ...
      bit_depth: bit_depth,
      // 8bit, 10bit, ...
      ref_frames: ref_frames,
      chroma_format: chroma_format,
      // 4:2:0, 4:2:2, ...
      chroma_format_string: SPSParser.getChromaFormatString(chroma_format),
      frame_rate: {
        fixed: fps_fixed,
        fps: fps,
        fps_den: fps_den,
        fps_num: fps_num
      },
      sar_ratio: {
        width: sar_width,
        height: sar_height
      },
      codec_size: {
        width: codec_width,
        height: codec_height
      },
      present_size: {
        width: present_width,
        height: codec_height
      }
    };
  }

  static _skipScalingList(gb, count) {
    let last_scale = 8,
        next_scale = 8;
    let delta_scale = 0;

    for (let i = 0; i < count; i++) {
      if (next_scale !== 0) {
        delta_scale = gb.readSEG();
        next_scale = (last_scale + delta_scale + 256) % 256;
      }

      last_scale = next_scale === 0 ? last_scale : next_scale;
    }
  }

  static getProfileString(profile_idc) {
    switch (profile_idc) {
      case 66:
        return 'Baseline';

      case 77:
        return 'Main';

      case 88:
        return 'Extended';

      case 100:
        return 'High';

      case 110:
        return 'High10';

      case 122:
        return 'High422';

      case 244:
        return 'High444';

      default:
        return 'Unknown';
    }
  }

  static getLevelString(level_idc) {
    return (level_idc / 10).toFixed(1);
  }

  static getChromaFormatString(chroma) {
    switch (chroma) {
      case 420:
        return '4:2:0';

      case 422:
        return '4:2:2';

      case 444:
        return '4:4:4';

      default:
        return 'Unknown';
    }
  }

}

var _default = SPSParser;
exports.default = _default;
},{"./exp-golomb.js":"node_modules/flv.js/src/demux/exp-golomb.js"}],"node_modules/flv.js/src/demux/demux-errors.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const DemuxErrors = {
  OK: 'OK',
  FORMAT_ERROR: 'FormatError',
  FORMAT_UNSUPPORTED: 'FormatUnsupported',
  CODEC_UNSUPPORTED: 'CodecUnsupported'
};
var _default = DemuxErrors;
exports.default = _default;
},{}],"node_modules/flv.js/src/demux/flv-demuxer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _amfParser = _interopRequireDefault(require("./amf-parser.js"));

var _spsParser = _interopRequireDefault(require("./sps-parser.js"));

var _demuxErrors = _interopRequireDefault(require("./demux-errors.js"));

var _mediaInfo = _interopRequireDefault(require("../core/media-info.js"));

var _exception = require("../utils/exception.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function Swap16(src) {
  return src >>> 8 & 0xFF | (src & 0xFF) << 8;
}

function Swap32(src) {
  return (src & 0xFF000000) >>> 24 | (src & 0x00FF0000) >>> 8 | (src & 0x0000FF00) << 8 | (src & 0x000000FF) << 24;
}

function ReadBig32(array, index) {
  return array[index] << 24 | array[index + 1] << 16 | array[index + 2] << 8 | array[index + 3];
}

class FLVDemuxer {
  constructor(probeData, config) {
    this.TAG = 'FLVDemuxer';
    this._config = config;
    this._onError = null;
    this._onMediaInfo = null;
    this._onMetaDataArrived = null;
    this._onScriptDataArrived = null;
    this._onTrackMetadata = null;
    this._onDataAvailable = null;
    this._dataOffset = probeData.dataOffset;
    this._firstParse = true;
    this._dispatch = false;
    this._hasAudio = probeData.hasAudioTrack;
    this._hasVideo = probeData.hasVideoTrack;
    this._hasAudioFlagOverrided = false;
    this._hasVideoFlagOverrided = false;
    this._audioInitialMetadataDispatched = false;
    this._videoInitialMetadataDispatched = false;
    this._mediaInfo = new _mediaInfo.default();
    this._mediaInfo.hasAudio = this._hasAudio;
    this._mediaInfo.hasVideo = this._hasVideo;
    this._metadata = null;
    this._audioMetadata = null;
    this._videoMetadata = null;
    this._naluLengthSize = 4;
    this._timestampBase = 0; // int32, in milliseconds

    this._timescale = 1000;
    this._duration = 0; // int32, in milliseconds

    this._durationOverrided = false;
    this._referenceFrameRate = {
      fixed: true,
      fps: 23.976,
      fps_num: 23976,
      fps_den: 1000
    };
    this._flvSoundRateTable = [5500, 11025, 22050, 44100, 48000];
    this._mpegSamplingRates = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];
    this._mpegAudioV10SampleRateTable = [44100, 48000, 32000, 0];
    this._mpegAudioV20SampleRateTable = [22050, 24000, 16000, 0];
    this._mpegAudioV25SampleRateTable = [11025, 12000, 8000, 0];
    this._mpegAudioL1BitRateTable = [0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, -1];
    this._mpegAudioL2BitRateTable = [0, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, -1];
    this._mpegAudioL3BitRateTable = [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1];
    this._videoTrack = {
      type: 'video',
      id: 1,
      sequenceNumber: 0,
      samples: [],
      length: 0
    };
    this._audioTrack = {
      type: 'audio',
      id: 2,
      sequenceNumber: 0,
      samples: [],
      length: 0
    };

    this._littleEndian = function () {
      let buf = new ArrayBuffer(2);
      new DataView(buf).setInt16(0, 256, true); // little-endian write

      return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE
    }();
  }

  destroy() {
    this._mediaInfo = null;
    this._metadata = null;
    this._audioMetadata = null;
    this._videoMetadata = null;
    this._videoTrack = null;
    this._audioTrack = null;
    this._onError = null;
    this._onMediaInfo = null;
    this._onMetaDataArrived = null;
    this._onScriptDataArrived = null;
    this._onTrackMetadata = null;
    this._onDataAvailable = null;
  }

  static probe(buffer) {
    let data = new Uint8Array(buffer);
    let mismatch = {
      match: false
    };

    if (data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01) {
      return mismatch;
    }

    let hasAudio = (data[4] & 4) >>> 2 !== 0;
    let hasVideo = (data[4] & 1) !== 0;
    let offset = ReadBig32(data, 5);

    if (offset < 9) {
      return mismatch;
    }

    return {
      match: true,
      consumed: offset,
      dataOffset: offset,
      hasAudioTrack: hasAudio,
      hasVideoTrack: hasVideo
    };
  }

  bindDataSource(loader) {
    loader.onDataArrival = this.parseChunks.bind(this);
    return this;
  } // prototype: function(type: string, metadata: any): void


  get onTrackMetadata() {
    return this._onTrackMetadata;
  }

  set onTrackMetadata(callback) {
    this._onTrackMetadata = callback;
  } // prototype: function(mediaInfo: MediaInfo): void


  get onMediaInfo() {
    return this._onMediaInfo;
  }

  set onMediaInfo(callback) {
    this._onMediaInfo = callback;
  }

  get onMetaDataArrived() {
    return this._onMetaDataArrived;
  }

  set onMetaDataArrived(callback) {
    this._onMetaDataArrived = callback;
  }

  get onScriptDataArrived() {
    return this._onScriptDataArrived;
  }

  set onScriptDataArrived(callback) {
    this._onScriptDataArrived = callback;
  } // prototype: function(type: number, info: string): void


  get onError() {
    return this._onError;
  }

  set onError(callback) {
    this._onError = callback;
  } // prototype: function(videoTrack: any, audioTrack: any): void


  get onDataAvailable() {
    return this._onDataAvailable;
  }

  set onDataAvailable(callback) {
    this._onDataAvailable = callback;
  } // timestamp base for output samples, must be in milliseconds


  get timestampBase() {
    return this._timestampBase;
  }

  set timestampBase(base) {
    this._timestampBase = base;
  }

  get overridedDuration() {
    return this._duration;
  } // Force-override media duration. Must be in milliseconds, int32


  set overridedDuration(duration) {
    this._durationOverrided = true;
    this._duration = duration;
    this._mediaInfo.duration = duration;
  } // Force-override audio track present flag, boolean


  set overridedHasAudio(hasAudio) {
    this._hasAudioFlagOverrided = true;
    this._hasAudio = hasAudio;
    this._mediaInfo.hasAudio = hasAudio;
  } // Force-override video track present flag, boolean


  set overridedHasVideo(hasVideo) {
    this._hasVideoFlagOverrided = true;
    this._hasVideo = hasVideo;
    this._mediaInfo.hasVideo = hasVideo;
  }

  resetMediaInfo() {
    this._mediaInfo = new _mediaInfo.default();
  }

  _isInitialMetadataDispatched() {
    if (this._hasAudio && this._hasVideo) {
      // both audio & video
      return this._audioInitialMetadataDispatched && this._videoInitialMetadataDispatched;
    }

    if (this._hasAudio && !this._hasVideo) {
      // audio only
      return this._audioInitialMetadataDispatched;
    }

    if (!this._hasAudio && this._hasVideo) {
      // video only
      return this._videoInitialMetadataDispatched;
    }

    return false;
  } // function parseChunks(chunk: ArrayBuffer, byteStart: number): number;


  parseChunks(chunk, byteStart) {
    if (!this._onError || !this._onMediaInfo || !this._onTrackMetadata || !this._onDataAvailable) {
      throw new _exception.IllegalStateException('Flv: onError & onMediaInfo & onTrackMetadata & onDataAvailable callback must be specified');
    }

    let offset = 0;
    let le = this._littleEndian;

    if (byteStart === 0) {
      // buffer with FLV header
      if (chunk.byteLength > 13) {
        let probeData = FLVDemuxer.probe(chunk);
        offset = probeData.dataOffset;
      } else {
        return 0;
      }
    }

    if (this._firstParse) {
      // handle PreviousTagSize0 before Tag1
      this._firstParse = false;

      if (byteStart + offset !== this._dataOffset) {
        _logger.default.w(this.TAG, 'First time parsing but chunk byteStart invalid!');
      }

      let v = new DataView(chunk, offset);
      let prevTagSize0 = v.getUint32(0, !le);

      if (prevTagSize0 !== 0) {
        _logger.default.w(this.TAG, 'PrevTagSize0 !== 0 !!!');
      }

      offset += 4;
    }

    while (offset < chunk.byteLength) {
      this._dispatch = true;
      let v = new DataView(chunk, offset);

      if (offset + 11 + 4 > chunk.byteLength) {
        // data not enough for parsing an flv tag
        break;
      }

      let tagType = v.getUint8(0);
      let dataSize = v.getUint32(0, !le) & 0x00FFFFFF;

      if (offset + 11 + dataSize + 4 > chunk.byteLength) {
        // data not enough for parsing actual data body
        break;
      }

      if (tagType !== 8 && tagType !== 9 && tagType !== 18) {
        _logger.default.w(this.TAG, `Unsupported tag type ${tagType}, skipped`); // consume the whole tag (skip it)


        offset += 11 + dataSize + 4;
        continue;
      }

      let ts2 = v.getUint8(4);
      let ts1 = v.getUint8(5);
      let ts0 = v.getUint8(6);
      let ts3 = v.getUint8(7);
      let timestamp = ts0 | ts1 << 8 | ts2 << 16 | ts3 << 24;
      let streamId = v.getUint32(7, !le) & 0x00FFFFFF;

      if (streamId !== 0) {
        _logger.default.w(this.TAG, 'Meet tag which has StreamID != 0!');
      }

      let dataOffset = offset + 11;

      switch (tagType) {
        case 8:
          // Audio
          this._parseAudioData(chunk, dataOffset, dataSize, timestamp);

          break;

        case 9:
          // Video
          this._parseVideoData(chunk, dataOffset, dataSize, timestamp, byteStart + offset);

          break;

        case 18:
          // ScriptDataObject
          this._parseScriptData(chunk, dataOffset, dataSize);

          break;
      }

      let prevTagSize = v.getUint32(11 + dataSize, !le);

      if (prevTagSize !== 11 + dataSize) {
        _logger.default.w(this.TAG, `Invalid PrevTagSize ${prevTagSize}`);
      }

      offset += 11 + dataSize + 4; // tagBody + dataSize + prevTagSize
    } // dispatch parsed frames to consumer (typically, the remuxer)


    if (this._isInitialMetadataDispatched()) {
      if (this._dispatch && (this._audioTrack.length || this._videoTrack.length)) {
        this._onDataAvailable(this._audioTrack, this._videoTrack);
      }
    }

    return offset; // consumed bytes, just equals latest offset index
  }

  _parseScriptData(arrayBuffer, dataOffset, dataSize) {
    let scriptData = _amfParser.default.parseScriptData(arrayBuffer, dataOffset, dataSize);

    if (scriptData.hasOwnProperty('onMetaData')) {
      if (scriptData.onMetaData == null || typeof scriptData.onMetaData !== 'object') {
        _logger.default.w(this.TAG, 'Invalid onMetaData structure!');

        return;
      }

      if (this._metadata) {
        _logger.default.w(this.TAG, 'Found another onMetaData tag!');
      }

      this._metadata = scriptData;
      let onMetaData = this._metadata.onMetaData;

      if (this._onMetaDataArrived) {
        this._onMetaDataArrived(Object.assign({}, onMetaData));
      }

      if (typeof onMetaData.hasAudio === 'boolean') {
        // hasAudio
        if (this._hasAudioFlagOverrided === false) {
          this._hasAudio = onMetaData.hasAudio;
          this._mediaInfo.hasAudio = this._hasAudio;
        }
      }

      if (typeof onMetaData.hasVideo === 'boolean') {
        // hasVideo
        if (this._hasVideoFlagOverrided === false) {
          this._hasVideo = onMetaData.hasVideo;
          this._mediaInfo.hasVideo = this._hasVideo;
        }
      }

      if (typeof onMetaData.audiodatarate === 'number') {
        // audiodatarate
        this._mediaInfo.audioDataRate = onMetaData.audiodatarate;
      }

      if (typeof onMetaData.videodatarate === 'number') {
        // videodatarate
        this._mediaInfo.videoDataRate = onMetaData.videodatarate;
      }

      if (typeof onMetaData.width === 'number') {
        // width
        this._mediaInfo.width = onMetaData.width;
      }

      if (typeof onMetaData.height === 'number') {
        // height
        this._mediaInfo.height = onMetaData.height;
      }

      if (typeof onMetaData.duration === 'number') {
        // duration
        if (!this._durationOverrided) {
          let duration = Math.floor(onMetaData.duration * this._timescale);
          this._duration = duration;
          this._mediaInfo.duration = duration;
        }
      } else {
        this._mediaInfo.duration = 0;
      }

      if (typeof onMetaData.framerate === 'number') {
        // framerate
        let fps_num = Math.floor(onMetaData.framerate * 1000);

        if (fps_num > 0) {
          let fps = fps_num / 1000;
          this._referenceFrameRate.fixed = true;
          this._referenceFrameRate.fps = fps;
          this._referenceFrameRate.fps_num = fps_num;
          this._referenceFrameRate.fps_den = 1000;
          this._mediaInfo.fps = fps;
        }
      }

      if (typeof onMetaData.keyframes === 'object') {
        // keyframes
        this._mediaInfo.hasKeyframesIndex = true;
        let keyframes = onMetaData.keyframes;
        this._mediaInfo.keyframesIndex = this._parseKeyframesIndex(keyframes);
        onMetaData.keyframes = null; // keyframes has been extracted, remove it
      } else {
        this._mediaInfo.hasKeyframesIndex = false;
      }

      this._dispatch = false;
      this._mediaInfo.metadata = onMetaData;

      _logger.default.v(this.TAG, 'Parsed onMetaData');

      if (this._mediaInfo.isComplete()) {
        this._onMediaInfo(this._mediaInfo);
      }
    }

    if (Object.keys(scriptData).length > 0) {
      if (this._onScriptDataArrived) {
        this._onScriptDataArrived(Object.assign({}, scriptData));
      }
    }
  }

  _parseKeyframesIndex(keyframes) {
    let times = [];
    let filepositions = []; // ignore first keyframe which is actually AVC Sequence Header (AVCDecoderConfigurationRecord)

    for (let i = 1; i < keyframes.times.length; i++) {
      let time = this._timestampBase + Math.floor(keyframes.times[i] * 1000);
      times.push(time);
      filepositions.push(keyframes.filepositions[i]);
    }

    return {
      times: times,
      filepositions: filepositions
    };
  }

  _parseAudioData(arrayBuffer, dataOffset, dataSize, tagTimestamp) {
    if (dataSize <= 1) {
      _logger.default.w(this.TAG, 'Flv: Invalid audio packet, missing SoundData payload!');

      return;
    }

    if (this._hasAudioFlagOverrided === true && this._hasAudio === false) {
      // If hasAudio: false indicated explicitly in MediaDataSource,
      // Ignore all the audio packets
      return;
    }

    let le = this._littleEndian;
    let v = new DataView(arrayBuffer, dataOffset, dataSize);
    let soundSpec = v.getUint8(0);
    let soundFormat = soundSpec >>> 4;

    if (soundFormat !== 2 && soundFormat !== 10) {
      // MP3 or AAC
      this._onError(_demuxErrors.default.CODEC_UNSUPPORTED, 'Flv: Unsupported audio codec idx: ' + soundFormat);

      return;
    }

    let soundRate = 0;
    let soundRateIndex = (soundSpec & 12) >>> 2;

    if (soundRateIndex >= 0 && soundRateIndex <= 4) {
      soundRate = this._flvSoundRateTable[soundRateIndex];
    } else {
      this._onError(_demuxErrors.default.FORMAT_ERROR, 'Flv: Invalid audio sample rate idx: ' + soundRateIndex);

      return;
    }

    let soundSize = (soundSpec & 2) >>> 1; // unused

    let soundType = soundSpec & 1;
    let meta = this._audioMetadata;
    let track = this._audioTrack;

    if (!meta) {
      if (this._hasAudio === false && this._hasAudioFlagOverrided === false) {
        this._hasAudio = true;
        this._mediaInfo.hasAudio = true;
      } // initial metadata


      meta = this._audioMetadata = {};
      meta.type = 'audio';
      meta.id = track.id;
      meta.timescale = this._timescale;
      meta.duration = this._duration;
      meta.audioSampleRate = soundRate;
      meta.channelCount = soundType === 0 ? 1 : 2;
    }

    if (soundFormat === 10) {
      // AAC
      let aacData = this._parseAACAudioData(arrayBuffer, dataOffset + 1, dataSize - 1);

      if (aacData == undefined) {
        return;
      }

      if (aacData.packetType === 0) {
        // AAC sequence header (AudioSpecificConfig)
        if (meta.config) {
          _logger.default.w(this.TAG, 'Found another AudioSpecificConfig!');
        }

        let misc = aacData.data;
        meta.audioSampleRate = misc.samplingRate;
        meta.channelCount = misc.channelCount;
        meta.codec = misc.codec;
        meta.originalCodec = misc.originalCodec;
        meta.config = misc.config; // The decode result of an aac sample is 1024 PCM samples

        meta.refSampleDuration = 1024 / meta.audioSampleRate * meta.timescale;

        _logger.default.v(this.TAG, 'Parsed AudioSpecificConfig');

        if (this._isInitialMetadataDispatched()) {
          // Non-initial metadata, force dispatch (or flush) parsed frames to remuxer
          if (this._dispatch && (this._audioTrack.length || this._videoTrack.length)) {
            this._onDataAvailable(this._audioTrack, this._videoTrack);
          }
        } else {
          this._audioInitialMetadataDispatched = true;
        } // then notify new metadata


        this._dispatch = false;

        this._onTrackMetadata('audio', meta);

        let mi = this._mediaInfo;
        mi.audioCodec = meta.originalCodec;
        mi.audioSampleRate = meta.audioSampleRate;
        mi.audioChannelCount = meta.channelCount;

        if (mi.hasVideo) {
          if (mi.videoCodec != null) {
            mi.mimeType = 'video/x-flv; codecs="' + mi.videoCodec + ',' + mi.audioCodec + '"';
          }
        } else {
          mi.mimeType = 'video/x-flv; codecs="' + mi.audioCodec + '"';
        }

        if (mi.isComplete()) {
          this._onMediaInfo(mi);
        }
      } else if (aacData.packetType === 1) {
        // AAC raw frame data
        let dts = this._timestampBase + tagTimestamp;
        let aacSample = {
          unit: aacData.data,
          length: aacData.data.byteLength,
          dts: dts,
          pts: dts
        };
        track.samples.push(aacSample);
        track.length += aacData.data.length;
      } else {
        _logger.default.e(this.TAG, `Flv: Unsupported AAC data type ${aacData.packetType}`);
      }
    } else if (soundFormat === 2) {
      // MP3
      if (!meta.codec) {
        // We need metadata for mp3 audio track, extract info from frame header
        let misc = this._parseMP3AudioData(arrayBuffer, dataOffset + 1, dataSize - 1, true);

        if (misc == undefined) {
          return;
        }

        meta.audioSampleRate = misc.samplingRate;
        meta.channelCount = misc.channelCount;
        meta.codec = misc.codec;
        meta.originalCodec = misc.originalCodec; // The decode result of an mp3 sample is 1152 PCM samples

        meta.refSampleDuration = 1152 / meta.audioSampleRate * meta.timescale;

        _logger.default.v(this.TAG, 'Parsed MPEG Audio Frame Header');

        this._audioInitialMetadataDispatched = true;

        this._onTrackMetadata('audio', meta);

        let mi = this._mediaInfo;
        mi.audioCodec = meta.codec;
        mi.audioSampleRate = meta.audioSampleRate;
        mi.audioChannelCount = meta.channelCount;
        mi.audioDataRate = misc.bitRate;

        if (mi.hasVideo) {
          if (mi.videoCodec != null) {
            mi.mimeType = 'video/x-flv; codecs="' + mi.videoCodec + ',' + mi.audioCodec + '"';
          }
        } else {
          mi.mimeType = 'video/x-flv; codecs="' + mi.audioCodec + '"';
        }

        if (mi.isComplete()) {
          this._onMediaInfo(mi);
        }
      } // This packet is always a valid audio packet, extract it


      let data = this._parseMP3AudioData(arrayBuffer, dataOffset + 1, dataSize - 1, false);

      if (data == undefined) {
        return;
      }

      let dts = this._timestampBase + tagTimestamp;
      let mp3Sample = {
        unit: data,
        length: data.byteLength,
        dts: dts,
        pts: dts
      };
      track.samples.push(mp3Sample);
      track.length += data.length;
    }
  }

  _parseAACAudioData(arrayBuffer, dataOffset, dataSize) {
    if (dataSize <= 1) {
      _logger.default.w(this.TAG, 'Flv: Invalid AAC packet, missing AACPacketType or/and Data!');

      return;
    }

    let result = {};
    let array = new Uint8Array(arrayBuffer, dataOffset, dataSize);
    result.packetType = array[0];

    if (array[0] === 0) {
      result.data = this._parseAACAudioSpecificConfig(arrayBuffer, dataOffset + 1, dataSize - 1);
    } else {
      result.data = array.subarray(1);
    }

    return result;
  }

  _parseAACAudioSpecificConfig(arrayBuffer, dataOffset, dataSize) {
    let array = new Uint8Array(arrayBuffer, dataOffset, dataSize);
    let config = null;
    /* Audio Object Type:
       0: Null
       1: AAC Main
       2: AAC LC
       3: AAC SSR (Scalable Sample Rate)
       4: AAC LTP (Long Term Prediction)
       5: HE-AAC / SBR (Spectral Band Replication)
       6: AAC Scalable
    */

    let audioObjectType = 0;
    let originalAudioObjectType = 0;
    let audioExtensionObjectType = null;
    let samplingIndex = 0;
    let extensionSamplingIndex = null; // 5 bits

    audioObjectType = originalAudioObjectType = array[0] >>> 3; // 4 bits

    samplingIndex = (array[0] & 0x07) << 1 | array[1] >>> 7;

    if (samplingIndex < 0 || samplingIndex >= this._mpegSamplingRates.length) {
      this._onError(_demuxErrors.default.FORMAT_ERROR, 'Flv: AAC invalid sampling frequency index!');

      return;
    }

    let samplingFrequence = this._mpegSamplingRates[samplingIndex]; // 4 bits

    let channelConfig = (array[1] & 0x78) >>> 3;

    if (channelConfig < 0 || channelConfig >= 8) {
      this._onError(_demuxErrors.default.FORMAT_ERROR, 'Flv: AAC invalid channel configuration');

      return;
    }

    if (audioObjectType === 5) {
      // HE-AAC?
      // 4 bits
      extensionSamplingIndex = (array[1] & 0x07) << 1 | array[2] >>> 7; // 5 bits

      audioExtensionObjectType = (array[2] & 0x7C) >>> 2;
    } // workarounds for various browsers


    let userAgent = self.navigator.userAgent.toLowerCase();

    if (userAgent.indexOf('firefox') !== -1) {
      // firefox: use SBR (HE-AAC) if freq less than 24kHz
      if (samplingIndex >= 6) {
        audioObjectType = 5;
        config = new Array(4);
        extensionSamplingIndex = samplingIndex - 3;
      } else {
        // use LC-AAC
        audioObjectType = 2;
        config = new Array(2);
        extensionSamplingIndex = samplingIndex;
      }
    } else if (userAgent.indexOf('android') !== -1) {
      // android: always use LC-AAC
      audioObjectType = 2;
      config = new Array(2);
      extensionSamplingIndex = samplingIndex;
    } else {
      // for other browsers, e.g. chrome...
      // Always use HE-AAC to make it easier to switch aac codec profile
      audioObjectType = 5;
      extensionSamplingIndex = samplingIndex;
      config = new Array(4);

      if (samplingIndex >= 6) {
        extensionSamplingIndex = samplingIndex - 3;
      } else if (channelConfig === 1) {
        // Mono channel
        audioObjectType = 2;
        config = new Array(2);
        extensionSamplingIndex = samplingIndex;
      }
    }

    config[0] = audioObjectType << 3;
    config[0] |= (samplingIndex & 0x0F) >>> 1;
    config[1] = (samplingIndex & 0x0F) << 7;
    config[1] |= (channelConfig & 0x0F) << 3;

    if (audioObjectType === 5) {
      config[1] |= (extensionSamplingIndex & 0x0F) >>> 1;
      config[2] = (extensionSamplingIndex & 0x01) << 7; // extended audio object type: force to 2 (LC-AAC)

      config[2] |= 2 << 2;
      config[3] = 0;
    }

    return {
      config: config,
      samplingRate: samplingFrequence,
      channelCount: channelConfig,
      codec: 'mp4a.40.' + audioObjectType,
      originalCodec: 'mp4a.40.' + originalAudioObjectType
    };
  }

  _parseMP3AudioData(arrayBuffer, dataOffset, dataSize, requestHeader) {
    if (dataSize < 4) {
      _logger.default.w(this.TAG, 'Flv: Invalid MP3 packet, header missing!');

      return;
    }

    let le = this._littleEndian;
    let array = new Uint8Array(arrayBuffer, dataOffset, dataSize);
    let result = null;

    if (requestHeader) {
      if (array[0] !== 0xFF) {
        return;
      }

      let ver = array[1] >>> 3 & 0x03;
      let layer = (array[1] & 0x06) >> 1;
      let bitrate_index = (array[2] & 0xF0) >>> 4;
      let sampling_freq_index = (array[2] & 0x0C) >>> 2;
      let channel_mode = array[3] >>> 6 & 0x03;
      let channel_count = channel_mode !== 3 ? 2 : 1;
      let sample_rate = 0;
      let bit_rate = 0;
      let object_type = 34; // Layer-3, listed in MPEG-4 Audio Object Types

      let codec = 'mp3';

      switch (ver) {
        case 0:
          // MPEG 2.5
          sample_rate = this._mpegAudioV25SampleRateTable[sampling_freq_index];
          break;

        case 2:
          // MPEG 2
          sample_rate = this._mpegAudioV20SampleRateTable[sampling_freq_index];
          break;

        case 3:
          // MPEG 1
          sample_rate = this._mpegAudioV10SampleRateTable[sampling_freq_index];
          break;
      }

      switch (layer) {
        case 1:
          // Layer 3
          object_type = 34;

          if (bitrate_index < this._mpegAudioL3BitRateTable.length) {
            bit_rate = this._mpegAudioL3BitRateTable[bitrate_index];
          }

          break;

        case 2:
          // Layer 2
          object_type = 33;

          if (bitrate_index < this._mpegAudioL2BitRateTable.length) {
            bit_rate = this._mpegAudioL2BitRateTable[bitrate_index];
          }

          break;

        case 3:
          // Layer 1
          object_type = 32;

          if (bitrate_index < this._mpegAudioL1BitRateTable.length) {
            bit_rate = this._mpegAudioL1BitRateTable[bitrate_index];
          }

          break;
      }

      result = {
        bitRate: bit_rate,
        samplingRate: sample_rate,
        channelCount: channel_count,
        codec: codec,
        originalCodec: codec
      };
    } else {
      result = array;
    }

    return result;
  }

  _parseVideoData(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition) {
    if (dataSize <= 1) {
      _logger.default.w(this.TAG, 'Flv: Invalid video packet, missing VideoData payload!');

      return;
    }

    if (this._hasVideoFlagOverrided === true && this._hasVideo === false) {
      // If hasVideo: false indicated explicitly in MediaDataSource,
      // Ignore all the video packets
      return;
    }

    let spec = new Uint8Array(arrayBuffer, dataOffset, dataSize)[0];
    let frameType = (spec & 240) >>> 4;
    let codecId = spec & 15;

    if (codecId !== 7) {
      this._onError(_demuxErrors.default.CODEC_UNSUPPORTED, `Flv: Unsupported codec in video frame: ${codecId}`);

      return;
    }

    this._parseAVCVideoPacket(arrayBuffer, dataOffset + 1, dataSize - 1, tagTimestamp, tagPosition, frameType);
  }

  _parseAVCVideoPacket(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition, frameType) {
    if (dataSize < 4) {
      _logger.default.w(this.TAG, 'Flv: Invalid AVC packet, missing AVCPacketType or/and CompositionTime');

      return;
    }

    let le = this._littleEndian;
    let v = new DataView(arrayBuffer, dataOffset, dataSize);
    let packetType = v.getUint8(0);
    let cts_unsigned = v.getUint32(0, !le) & 0x00FFFFFF;
    let cts = cts_unsigned << 8 >> 8; // convert to 24-bit signed int

    if (packetType === 0) {
      // AVCDecoderConfigurationRecord
      this._parseAVCDecoderConfigurationRecord(arrayBuffer, dataOffset + 4, dataSize - 4);
    } else if (packetType === 1) {
      // One or more Nalus
      this._parseAVCVideoData(arrayBuffer, dataOffset + 4, dataSize - 4, tagTimestamp, tagPosition, frameType, cts);
    } else if (packetType === 2) {// empty, AVC end of sequence
    } else {
      this._onError(_demuxErrors.default.FORMAT_ERROR, `Flv: Invalid video packet type ${packetType}`);

      return;
    }
  }

  _parseAVCDecoderConfigurationRecord(arrayBuffer, dataOffset, dataSize) {
    if (dataSize < 7) {
      _logger.default.w(this.TAG, 'Flv: Invalid AVCDecoderConfigurationRecord, lack of data!');

      return;
    }

    let meta = this._videoMetadata;
    let track = this._videoTrack;
    let le = this._littleEndian;
    let v = new DataView(arrayBuffer, dataOffset, dataSize);

    if (!meta) {
      if (this._hasVideo === false && this._hasVideoFlagOverrided === false) {
        this._hasVideo = true;
        this._mediaInfo.hasVideo = true;
      }

      meta = this._videoMetadata = {};
      meta.type = 'video';
      meta.id = track.id;
      meta.timescale = this._timescale;
      meta.duration = this._duration;
    } else {
      if (typeof meta.avcc !== 'undefined') {
        _logger.default.w(this.TAG, 'Found another AVCDecoderConfigurationRecord!');
      }
    }

    let version = v.getUint8(0); // configurationVersion

    let avcProfile = v.getUint8(1); // avcProfileIndication

    let profileCompatibility = v.getUint8(2); // profile_compatibility

    let avcLevel = v.getUint8(3); // AVCLevelIndication

    if (version !== 1 || avcProfile === 0) {
      this._onError(_demuxErrors.default.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord');

      return;
    }

    this._naluLengthSize = (v.getUint8(4) & 3) + 1; // lengthSizeMinusOne

    if (this._naluLengthSize !== 3 && this._naluLengthSize !== 4) {
      // holy shit!!!
      this._onError(_demuxErrors.default.FORMAT_ERROR, `Flv: Strange NaluLengthSizeMinusOne: ${this._naluLengthSize - 1}`);

      return;
    }

    let spsCount = v.getUint8(5) & 31; // numOfSequenceParameterSets

    if (spsCount === 0) {
      this._onError(_demuxErrors.default.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord: No SPS');

      return;
    } else if (spsCount > 1) {
      _logger.default.w(this.TAG, `Flv: Strange AVCDecoderConfigurationRecord: SPS Count = ${spsCount}`);
    }

    let offset = 6;

    for (let i = 0; i < spsCount; i++) {
      let len = v.getUint16(offset, !le); // sequenceParameterSetLength

      offset += 2;

      if (len === 0) {
        continue;
      } // Notice: Nalu without startcode header (00 00 00 01)


      let sps = new Uint8Array(arrayBuffer, dataOffset + offset, len);
      offset += len;

      let config = _spsParser.default.parseSPS(sps);

      if (i !== 0) {
        // ignore other sps's config
        continue;
      }

      meta.codecWidth = config.codec_size.width;
      meta.codecHeight = config.codec_size.height;
      meta.presentWidth = config.present_size.width;
      meta.presentHeight = config.present_size.height;
      meta.profile = config.profile_string;
      meta.level = config.level_string;
      meta.bitDepth = config.bit_depth;
      meta.chromaFormat = config.chroma_format;
      meta.sarRatio = config.sar_ratio;
      meta.frameRate = config.frame_rate;

      if (config.frame_rate.fixed === false || config.frame_rate.fps_num === 0 || config.frame_rate.fps_den === 0) {
        meta.frameRate = this._referenceFrameRate;
      }

      let fps_den = meta.frameRate.fps_den;
      let fps_num = meta.frameRate.fps_num;
      meta.refSampleDuration = meta.timescale * (fps_den / fps_num);
      let codecArray = sps.subarray(1, 4);
      let codecString = 'avc1.';

      for (let j = 0; j < 3; j++) {
        let h = codecArray[j].toString(16);

        if (h.length < 2) {
          h = '0' + h;
        }

        codecString += h;
      }

      meta.codec = codecString;
      let mi = this._mediaInfo;
      mi.width = meta.codecWidth;
      mi.height = meta.codecHeight;
      mi.fps = meta.frameRate.fps;
      mi.profile = meta.profile;
      mi.level = meta.level;
      mi.refFrames = config.ref_frames;
      mi.chromaFormat = config.chroma_format_string;
      mi.sarNum = meta.sarRatio.width;
      mi.sarDen = meta.sarRatio.height;
      mi.videoCodec = codecString;

      if (mi.hasAudio) {
        if (mi.audioCodec != null) {
          mi.mimeType = 'video/x-flv; codecs="' + mi.videoCodec + ',' + mi.audioCodec + '"';
        }
      } else {
        mi.mimeType = 'video/x-flv; codecs="' + mi.videoCodec + '"';
      }

      if (mi.isComplete()) {
        this._onMediaInfo(mi);
      }
    }

    let ppsCount = v.getUint8(offset); // numOfPictureParameterSets

    if (ppsCount === 0) {
      this._onError(_demuxErrors.default.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord: No PPS');

      return;
    } else if (ppsCount > 1) {
      _logger.default.w(this.TAG, `Flv: Strange AVCDecoderConfigurationRecord: PPS Count = ${ppsCount}`);
    }

    offset++;

    for (let i = 0; i < ppsCount; i++) {
      let len = v.getUint16(offset, !le); // pictureParameterSetLength

      offset += 2;

      if (len === 0) {
        continue;
      } // pps is useless for extracting video information


      offset += len;
    }

    meta.avcc = new Uint8Array(dataSize);
    meta.avcc.set(new Uint8Array(arrayBuffer, dataOffset, dataSize), 0);

    _logger.default.v(this.TAG, 'Parsed AVCDecoderConfigurationRecord');

    if (this._isInitialMetadataDispatched()) {
      // flush parsed frames
      if (this._dispatch && (this._audioTrack.length || this._videoTrack.length)) {
        this._onDataAvailable(this._audioTrack, this._videoTrack);
      }
    } else {
      this._videoInitialMetadataDispatched = true;
    } // notify new metadata


    this._dispatch = false;

    this._onTrackMetadata('video', meta);
  }

  _parseAVCVideoData(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition, frameType, cts) {
    let le = this._littleEndian;
    let v = new DataView(arrayBuffer, dataOffset, dataSize);
    let units = [],
        length = 0;
    let offset = 0;
    const lengthSize = this._naluLengthSize;
    let dts = this._timestampBase + tagTimestamp;
    let keyframe = frameType === 1; // from FLV Frame Type constants

    while (offset < dataSize) {
      if (offset + 4 >= dataSize) {
        _logger.default.w(this.TAG, `Malformed Nalu near timestamp ${dts}, offset = ${offset}, dataSize = ${dataSize}`);

        break; // data not enough for next Nalu
      } // Nalu with length-header (AVC1)


      let naluSize = v.getUint32(offset, !le); // Big-Endian read

      if (lengthSize === 3) {
        naluSize >>>= 8;
      }

      if (naluSize > dataSize - lengthSize) {
        _logger.default.w(this.TAG, `Malformed Nalus near timestamp ${dts}, NaluSize > DataSize!`);

        return;
      }

      let unitType = v.getUint8(offset + lengthSize) & 0x1F;

      if (unitType === 5) {
        // IDR
        keyframe = true;
      }

      let data = new Uint8Array(arrayBuffer, dataOffset + offset, lengthSize + naluSize);
      let unit = {
        type: unitType,
        data: data
      };
      units.push(unit);
      length += data.byteLength;
      offset += lengthSize + naluSize;
    }

    if (units.length) {
      let track = this._videoTrack;
      let avcSample = {
        units: units,
        length: length,
        isKeyframe: keyframe,
        dts: dts,
        cts: cts,
        pts: dts + cts
      };

      if (keyframe) {
        avcSample.fileposition = tagPosition;
      }

      track.samples.push(avcSample);
      track.length += length;
    }
  }

}

var _default = FLVDemuxer;
exports.default = _default;
},{"../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","./amf-parser.js":"node_modules/flv.js/src/demux/amf-parser.js","./sps-parser.js":"node_modules/flv.js/src/demux/sps-parser.js","./demux-errors.js":"node_modules/flv.js/src/demux/demux-errors.js","../core/media-info.js":"node_modules/flv.js/src/core/media-info.js","../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/remux/mp4-generator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * This file is derived from dailymotion's hls.js library (hls.js/src/remux/mp4-generator.js)
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//  MP4 boxes generator for ISO BMFF (ISO Base Media File Format, defined in ISO/IEC 14496-12)
class MP4 {
  static init() {
    MP4.types = {
      avc1: [],
      avcC: [],
      btrt: [],
      dinf: [],
      dref: [],
      esds: [],
      ftyp: [],
      hdlr: [],
      mdat: [],
      mdhd: [],
      mdia: [],
      mfhd: [],
      minf: [],
      moof: [],
      moov: [],
      mp4a: [],
      mvex: [],
      mvhd: [],
      sdtp: [],
      stbl: [],
      stco: [],
      stsc: [],
      stsd: [],
      stsz: [],
      stts: [],
      tfdt: [],
      tfhd: [],
      traf: [],
      trak: [],
      trun: [],
      trex: [],
      tkhd: [],
      vmhd: [],
      smhd: [],
      '.mp3': []
    };

    for (let name in MP4.types) {
      if (MP4.types.hasOwnProperty(name)) {
        MP4.types[name] = [name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)];
      }
    }

    let constants = MP4.constants = {};
    constants.FTYP = new Uint8Array([0x69, 0x73, 0x6F, 0x6D, // major_brand: isom
    0x0, 0x0, 0x0, 0x1, // minor_version: 0x01
    0x69, 0x73, 0x6F, 0x6D, // isom
    0x61, 0x76, 0x63, 0x31 // avc1
    ]);
    constants.STSD_PREFIX = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags
    0x00, 0x00, 0x00, 0x01 // entry_count
    ]);
    constants.STTS = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags
    0x00, 0x00, 0x00, 0x00 // entry_count
    ]);
    constants.STSC = constants.STCO = constants.STTS;
    constants.STSZ = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags
    0x00, 0x00, 0x00, 0x00, // sample_size
    0x00, 0x00, 0x00, 0x00 // sample_count
    ]);
    constants.HDLR_VIDEO = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags
    0x00, 0x00, 0x00, 0x00, // pre_defined
    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'
    0x00, 0x00, 0x00, 0x00, // reserved: 3 * 4 bytes
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x48, 0x61, 0x6E, 0x64, 0x6C, 0x65, 0x72, 0x00 // name: VideoHandler
    ]);
    constants.HDLR_AUDIO = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags
    0x00, 0x00, 0x00, 0x00, // pre_defined
    0x73, 0x6F, 0x75, 0x6E, // handler_type: 'soun'
    0x00, 0x00, 0x00, 0x00, // reserved: 3 * 4 bytes
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x6F, 0x75, 0x6E, 0x64, 0x48, 0x61, 0x6E, 0x64, 0x6C, 0x65, 0x72, 0x00 // name: SoundHandler
    ]);
    constants.DREF = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags
    0x00, 0x00, 0x00, 0x01, // entry_count
    0x00, 0x00, 0x00, 0x0C, // entry_size
    0x75, 0x72, 0x6C, 0x20, // type 'url '
    0x00, 0x00, 0x00, 0x01 // version(0) + flags
    ]); // Sound media header

    constants.SMHD = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags
    0x00, 0x00, 0x00, 0x00 // balance(2) + reserved(2)
    ]); // video media header

    constants.VMHD = new Uint8Array([0x00, 0x00, 0x00, 0x01, // version(0) + flags
    0x00, 0x00, // graphicsmode: 2 bytes
    0x00, 0x00, 0x00, 0x00, // opcolor: 3 * 2 bytes
    0x00, 0x00]);
  } // Generate a box


  static box(type) {
    let size = 8;
    let result = null;
    let datas = Array.prototype.slice.call(arguments, 1);
    let arrayCount = datas.length;

    for (let i = 0; i < arrayCount; i++) {
      size += datas[i].byteLength;
    }

    result = new Uint8Array(size);
    result[0] = size >>> 24 & 0xFF; // size

    result[1] = size >>> 16 & 0xFF;
    result[2] = size >>> 8 & 0xFF;
    result[3] = size & 0xFF;
    result.set(type, 4); // type

    let offset = 8;

    for (let i = 0; i < arrayCount; i++) {
      // data body
      result.set(datas[i], offset);
      offset += datas[i].byteLength;
    }

    return result;
  } // emit ftyp & moov


  static generateInitSegment(meta) {
    let ftyp = MP4.box(MP4.types.ftyp, MP4.constants.FTYP);
    let moov = MP4.moov(meta);
    let result = new Uint8Array(ftyp.byteLength + moov.byteLength);
    result.set(ftyp, 0);
    result.set(moov, ftyp.byteLength);
    return result;
  } // Movie metadata box


  static moov(meta) {
    let mvhd = MP4.mvhd(meta.timescale, meta.duration);
    let trak = MP4.trak(meta);
    let mvex = MP4.mvex(meta);
    return MP4.box(MP4.types.moov, mvhd, trak, mvex);
  } // Movie header box


  static mvhd(timescale, duration) {
    return MP4.box(MP4.types.mvhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags
    0x00, 0x00, 0x00, 0x00, // creation_time
    0x00, 0x00, 0x00, 0x00, // modification_time
    timescale >>> 24 & 0xFF, // timescale: 4 bytes
    timescale >>> 16 & 0xFF, timescale >>> 8 & 0xFF, timescale & 0xFF, duration >>> 24 & 0xFF, // duration: 4 bytes
    duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x00, 0x01, 0x00, 0x00, // Preferred rate: 1.0
    0x01, 0x00, 0x00, 0x00, // PreferredVolume(1.0, 2bytes) + reserved(2bytes)
    0x00, 0x00, 0x00, 0x00, // reserved: 4 + 4 bytes
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // ----end composition matrix----
    0x00, 0x00, 0x00, 0x00, // ----begin pre_defined 6 * 4 bytes----
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ----end pre_defined 6 * 4 bytes----
    0xFF, 0xFF, 0xFF, 0xFF // next_track_ID
    ]));
  } // Track box


  static trak(meta) {
    return MP4.box(MP4.types.trak, MP4.tkhd(meta), MP4.mdia(meta));
  } // Track header box


  static tkhd(meta) {
    let trackId = meta.id,
        duration = meta.duration;
    let width = meta.presentWidth,
        height = meta.presentHeight;
    return MP4.box(MP4.types.tkhd, new Uint8Array([0x00, 0x00, 0x00, 0x07, // version(0) + flags
    0x00, 0x00, 0x00, 0x00, // creation_time
    0x00, 0x00, 0x00, 0x00, // modification_time
    trackId >>> 24 & 0xFF, // track_ID: 4 bytes
    trackId >>> 16 & 0xFF, trackId >>> 8 & 0xFF, trackId & 0xFF, 0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes
    duration >>> 24 & 0xFF, // duration: 4 bytes
    duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // layer(2bytes) + alternate_group(2bytes)
    0x00, 0x00, 0x00, 0x00, // volume(2bytes) + reserved(2bytes)
    0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // ----end composition matrix----
    width >>> 8 & 0xFF, // width and height
    width & 0xFF, 0x00, 0x00, height >>> 8 & 0xFF, height & 0xFF, 0x00, 0x00]));
  } // Media Box


  static mdia(meta) {
    return MP4.box(MP4.types.mdia, MP4.mdhd(meta), MP4.hdlr(meta), MP4.minf(meta));
  } // Media header box


  static mdhd(meta) {
    let timescale = meta.timescale;
    let duration = meta.duration;
    return MP4.box(MP4.types.mdhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags
    0x00, 0x00, 0x00, 0x00, // creation_time
    0x00, 0x00, 0x00, 0x00, // modification_time
    timescale >>> 24 & 0xFF, // timescale: 4 bytes
    timescale >>> 16 & 0xFF, timescale >>> 8 & 0xFF, timescale & 0xFF, duration >>> 24 & 0xFF, // duration: 4 bytes
    duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x55, 0xC4, // language: und (undetermined)
    0x00, 0x00 // pre_defined = 0
    ]));
  } // Media handler reference box


  static hdlr(meta) {
    let data = null;

    if (meta.type === 'audio') {
      data = MP4.constants.HDLR_AUDIO;
    } else {
      data = MP4.constants.HDLR_VIDEO;
    }

    return MP4.box(MP4.types.hdlr, data);
  } // Media infomation box


  static minf(meta) {
    let xmhd = null;

    if (meta.type === 'audio') {
      xmhd = MP4.box(MP4.types.smhd, MP4.constants.SMHD);
    } else {
      xmhd = MP4.box(MP4.types.vmhd, MP4.constants.VMHD);
    }

    return MP4.box(MP4.types.minf, xmhd, MP4.dinf(), MP4.stbl(meta));
  } // Data infomation box


  static dinf() {
    let result = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, MP4.constants.DREF));
    return result;
  } // Sample table box


  static stbl(meta) {
    let result = MP4.box(MP4.types.stbl, // type: stbl
    MP4.stsd(meta), // Sample Description Table
    MP4.box(MP4.types.stts, MP4.constants.STTS), // Time-To-Sample
    MP4.box(MP4.types.stsc, MP4.constants.STSC), // Sample-To-Chunk
    MP4.box(MP4.types.stsz, MP4.constants.STSZ), // Sample size
    MP4.box(MP4.types.stco, MP4.constants.STCO) // Chunk offset
    );
    return result;
  } // Sample description box


  static stsd(meta) {
    if (meta.type === 'audio') {
      if (meta.codec === 'mp3') {
        return MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.mp3(meta));
      } // else: aac -> mp4a


      return MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.mp4a(meta));
    } else {
      return MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.avc1(meta));
    }
  }

  static mp3(meta) {
    let channelCount = meta.channelCount;
    let sampleRate = meta.audioSampleRate;
    let data = new Uint8Array([0x00, 0x00, 0x00, 0x00, // reserved(4)
    0x00, 0x00, 0x00, 0x01, // reserved(2) + data_reference_index(2)
    0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes
    0x00, 0x00, 0x00, 0x00, 0x00, channelCount, // channelCount(2)
    0x00, 0x10, // sampleSize(2)
    0x00, 0x00, 0x00, 0x00, // reserved(4)
    sampleRate >>> 8 & 0xFF, // Audio sample rate
    sampleRate & 0xFF, 0x00, 0x00]);
    return MP4.box(MP4.types['.mp3'], data);
  }

  static mp4a(meta) {
    let channelCount = meta.channelCount;
    let sampleRate = meta.audioSampleRate;
    let data = new Uint8Array([0x00, 0x00, 0x00, 0x00, // reserved(4)
    0x00, 0x00, 0x00, 0x01, // reserved(2) + data_reference_index(2)
    0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes
    0x00, 0x00, 0x00, 0x00, 0x00, channelCount, // channelCount(2)
    0x00, 0x10, // sampleSize(2)
    0x00, 0x00, 0x00, 0x00, // reserved(4)
    sampleRate >>> 8 & 0xFF, // Audio sample rate
    sampleRate & 0xFF, 0x00, 0x00]);
    return MP4.box(MP4.types.mp4a, data, MP4.esds(meta));
  }

  static esds(meta) {
    let config = meta.config || [];
    let configSize = config.length;
    let data = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version 0 + flags
    0x03, // descriptor_type
    0x17 + configSize, // length3
    0x00, 0x01, // es_id
    0x00, // stream_priority
    0x04, // descriptor_type
    0x0F + configSize, // length
    0x40, // codec: mpeg4_audio
    0x15, // stream_type: Audio
    0x00, 0x00, 0x00, // buffer_size
    0x00, 0x00, 0x00, 0x00, // maxBitrate
    0x00, 0x00, 0x00, 0x00, // avgBitrate
    0x05 // descriptor_type
    ].concat([configSize]).concat(config).concat([0x06, 0x01, 0x02 // GASpecificConfig
    ]));
    return MP4.box(MP4.types.esds, data);
  }

  static avc1(meta) {
    let avcc = meta.avcc;
    let width = meta.codecWidth,
        height = meta.codecHeight;
    let data = new Uint8Array([0x00, 0x00, 0x00, 0x00, // reserved(4)
    0x00, 0x00, 0x00, 0x01, // reserved(2) + data_reference_index(2)
    0x00, 0x00, 0x00, 0x00, // pre_defined(2) + reserved(2)
    0x00, 0x00, 0x00, 0x00, // pre_defined: 3 * 4 bytes
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, width >>> 8 & 0xFF, // width: 2 bytes
    width & 0xFF, height >>> 8 & 0xFF, // height: 2 bytes
    height & 0xFF, 0x00, 0x48, 0x00, 0x00, // horizresolution: 4 bytes
    0x00, 0x48, 0x00, 0x00, // vertresolution: 4 bytes
    0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes
    0x00, 0x01, // frame_count
    0x0A, // strlen
    0x78, 0x71, 0x71, 0x2F, // compressorname: 32 bytes
    0x66, 0x6C, 0x76, 0x2E, 0x6A, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, // depth
    0xFF, 0xFF // pre_defined = -1
    ]);
    return MP4.box(MP4.types.avc1, data, MP4.box(MP4.types.avcC, avcc));
  } // Movie Extends box


  static mvex(meta) {
    return MP4.box(MP4.types.mvex, MP4.trex(meta));
  } // Track Extends box


  static trex(meta) {
    let trackId = meta.id;
    let data = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags
    trackId >>> 24 & 0xFF, // track_ID
    trackId >>> 16 & 0xFF, trackId >>> 8 & 0xFF, trackId & 0xFF, 0x00, 0x00, 0x00, 0x01, // default_sample_description_index
    0x00, 0x00, 0x00, 0x00, // default_sample_duration
    0x00, 0x00, 0x00, 0x00, // default_sample_size
    0x00, 0x01, 0x00, 0x01 // default_sample_flags
    ]);
    return MP4.box(MP4.types.trex, data);
  } // Movie fragment box


  static moof(track, baseMediaDecodeTime) {
    return MP4.box(MP4.types.moof, MP4.mfhd(track.sequenceNumber), MP4.traf(track, baseMediaDecodeTime));
  }

  static mfhd(sequenceNumber) {
    let data = new Uint8Array([0x00, 0x00, 0x00, 0x00, sequenceNumber >>> 24 & 0xFF, // sequence_number: int32
    sequenceNumber >>> 16 & 0xFF, sequenceNumber >>> 8 & 0xFF, sequenceNumber & 0xFF]);
    return MP4.box(MP4.types.mfhd, data);
  } // Track fragment box


  static traf(track, baseMediaDecodeTime) {
    let trackId = track.id; // Track fragment header box

    let tfhd = MP4.box(MP4.types.tfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) & flags
    trackId >>> 24 & 0xFF, // track_ID
    trackId >>> 16 & 0xFF, trackId >>> 8 & 0xFF, trackId & 0xFF])); // Track Fragment Decode Time

    let tfdt = MP4.box(MP4.types.tfdt, new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) & flags
    baseMediaDecodeTime >>> 24 & 0xFF, // baseMediaDecodeTime: int32
    baseMediaDecodeTime >>> 16 & 0xFF, baseMediaDecodeTime >>> 8 & 0xFF, baseMediaDecodeTime & 0xFF]));
    let sdtp = MP4.sdtp(track);
    let trun = MP4.trun(track, sdtp.byteLength + 16 + 16 + 8 + 16 + 8 + 8);
    return MP4.box(MP4.types.traf, tfhd, tfdt, trun, sdtp);
  } // Sample Dependency Type box


  static sdtp(track) {
    let samples = track.samples || [];
    let sampleCount = samples.length;
    let data = new Uint8Array(4 + sampleCount); // 0~4 bytes: version(0) & flags

    for (let i = 0; i < sampleCount; i++) {
      let flags = samples[i].flags;
      data[i + 4] = flags.isLeading << 6 | // is_leading: 2 (bit)
      flags.dependsOn << 4 // sample_depends_on
      | flags.isDependedOn << 2 // sample_is_depended_on
      | flags.hasRedundancy; // sample_has_redundancy
    }

    return MP4.box(MP4.types.sdtp, data);
  } // Track fragment run box


  static trun(track, offset) {
    let samples = track.samples || [];
    let sampleCount = samples.length;
    let dataSize = 12 + 16 * sampleCount;
    let data = new Uint8Array(dataSize);
    offset += 8 + dataSize;
    data.set([0x00, 0x00, 0x0F, 0x01, // version(0) & flags
    sampleCount >>> 24 & 0xFF, // sample_count
    sampleCount >>> 16 & 0xFF, sampleCount >>> 8 & 0xFF, sampleCount & 0xFF, offset >>> 24 & 0xFF, // data_offset
    offset >>> 16 & 0xFF, offset >>> 8 & 0xFF, offset & 0xFF], 0);

    for (let i = 0; i < sampleCount; i++) {
      let duration = samples[i].duration;
      let size = samples[i].size;
      let flags = samples[i].flags;
      let cts = samples[i].cts;
      data.set([duration >>> 24 & 0xFF, // sample_duration
      duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, size >>> 24 & 0xFF, // sample_size
      size >>> 16 & 0xFF, size >>> 8 & 0xFF, size & 0xFF, flags.isLeading << 2 | flags.dependsOn, // sample_flags
      flags.isDependedOn << 6 | flags.hasRedundancy << 4 | flags.isNonSync, 0x00, 0x00, // sample_degradation_priority
      cts >>> 24 & 0xFF, // sample_composition_time_offset
      cts >>> 16 & 0xFF, cts >>> 8 & 0xFF, cts & 0xFF], 12 + 16 * i);
    }

    return MP4.box(MP4.types.trun, data);
  }

  static mdat(data) {
    return MP4.box(MP4.types.mdat, data);
  }

}

MP4.init();
var _default = MP4;
exports.default = _default;
},{}],"node_modules/flv.js/src/remux/aac-silent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * This file is modified from dailymotion's hls.js library (hls.js/src/helper/aac.js)
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class AAC {
  static getSilentFrame(codec, channelCount) {
    if (codec === 'mp4a.40.2') {
      // handle LC-AAC
      if (channelCount === 1) {
        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);
      } else if (channelCount === 2) {
        return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);
      } else if (channelCount === 3) {
        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);
      } else if (channelCount === 4) {
        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);
      } else if (channelCount === 5) {
        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);
      } else if (channelCount === 6) {
        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);
      }
    } else {
      // handle HE-AAC (mp4a.40.5 / mp4a.40.29)
      if (channelCount === 1) {
        // ffmpeg -y -f lavfi -i "aevalsrc=0:d=0.05" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 "0x%x," "\n"' -v output.aac
        return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);
      } else if (channelCount === 2) {
        // ffmpeg -y -f lavfi -i "aevalsrc=0|0:d=0.05" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 "0x%x," "\n"' -v output.aac
        return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);
      } else if (channelCount === 3) {
        // ffmpeg -y -f lavfi -i "aevalsrc=0|0|0:d=0.05" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 "0x%x," "\n"' -v output.aac
        return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);
      }
    }

    return null;
  }

}

var _default = AAC;
exports.default = _default;
},{}],"node_modules/flv.js/src/core/media-segment-info.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MediaSegmentInfoList = exports.IDRSampleList = exports.MediaSegmentInfo = exports.SampleInfo = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Represents an media sample (audio / video)
class SampleInfo {
  constructor(dts, pts, duration, originalDts, isSync) {
    this.dts = dts;
    this.pts = pts;
    this.duration = duration;
    this.originalDts = originalDts;
    this.isSyncPoint = isSync;
    this.fileposition = null;
  }

} // Media Segment concept is defined in Media Source Extensions spec.
// Particularly in ISO BMFF format, an Media Segment contains a moof box followed by a mdat box.


exports.SampleInfo = SampleInfo;

class MediaSegmentInfo {
  constructor() {
    this.beginDts = 0;
    this.endDts = 0;
    this.beginPts = 0;
    this.endPts = 0;
    this.originalBeginDts = 0;
    this.originalEndDts = 0;
    this.syncPoints = []; // SampleInfo[n], for video IDR frames only

    this.firstSample = null; // SampleInfo

    this.lastSample = null; // SampleInfo
  }

  appendSyncPoint(sampleInfo) {
    // also called Random Access Point
    sampleInfo.isSyncPoint = true;
    this.syncPoints.push(sampleInfo);
  }

} // Ordered list for recording video IDR frames, sorted by originalDts


exports.MediaSegmentInfo = MediaSegmentInfo;

class IDRSampleList {
  constructor() {
    this._list = [];
  }

  clear() {
    this._list = [];
  }

  appendArray(syncPoints) {
    let list = this._list;

    if (syncPoints.length === 0) {
      return;
    }

    if (list.length > 0 && syncPoints[0].originalDts < list[list.length - 1].originalDts) {
      this.clear();
    }

    Array.prototype.push.apply(list, syncPoints);
  }

  getLastSyncPointBeforeDts(dts) {
    if (this._list.length == 0) {
      return null;
    }

    let list = this._list;
    let idx = 0;
    let last = list.length - 1;
    let mid = 0;
    let lbound = 0;
    let ubound = last;

    if (dts < list[0].dts) {
      idx = 0;
      lbound = ubound + 1;
    }

    while (lbound <= ubound) {
      mid = lbound + Math.floor((ubound - lbound) / 2);

      if (mid === last || dts >= list[mid].dts && dts < list[mid + 1].dts) {
        idx = mid;
        break;
      } else if (list[mid].dts < dts) {
        lbound = mid + 1;
      } else {
        ubound = mid - 1;
      }
    }

    return this._list[idx];
  }

} // Data structure for recording information of media segments in single track.


exports.IDRSampleList = IDRSampleList;

class MediaSegmentInfoList {
  constructor(type) {
    this._type = type;
    this._list = [];
    this._lastAppendLocation = -1; // cached last insert location
  }

  get type() {
    return this._type;
  }

  get length() {
    return this._list.length;
  }

  isEmpty() {
    return this._list.length === 0;
  }

  clear() {
    this._list = [];
    this._lastAppendLocation = -1;
  }

  _searchNearestSegmentBefore(originalBeginDts) {
    let list = this._list;

    if (list.length === 0) {
      return -2;
    }

    let last = list.length - 1;
    let mid = 0;
    let lbound = 0;
    let ubound = last;
    let idx = 0;

    if (originalBeginDts < list[0].originalBeginDts) {
      idx = -1;
      return idx;
    }

    while (lbound <= ubound) {
      mid = lbound + Math.floor((ubound - lbound) / 2);

      if (mid === last || originalBeginDts > list[mid].lastSample.originalDts && originalBeginDts < list[mid + 1].originalBeginDts) {
        idx = mid;
        break;
      } else if (list[mid].originalBeginDts < originalBeginDts) {
        lbound = mid + 1;
      } else {
        ubound = mid - 1;
      }
    }

    return idx;
  }

  _searchNearestSegmentAfter(originalBeginDts) {
    return this._searchNearestSegmentBefore(originalBeginDts) + 1;
  }

  append(mediaSegmentInfo) {
    let list = this._list;
    let msi = mediaSegmentInfo;
    let lastAppendIdx = this._lastAppendLocation;
    let insertIdx = 0;

    if (lastAppendIdx !== -1 && lastAppendIdx < list.length && msi.originalBeginDts >= list[lastAppendIdx].lastSample.originalDts && (lastAppendIdx === list.length - 1 || lastAppendIdx < list.length - 1 && msi.originalBeginDts < list[lastAppendIdx + 1].originalBeginDts)) {
      insertIdx = lastAppendIdx + 1; // use cached location idx
    } else {
      if (list.length > 0) {
        insertIdx = this._searchNearestSegmentBefore(msi.originalBeginDts) + 1;
      }
    }

    this._lastAppendLocation = insertIdx;

    this._list.splice(insertIdx, 0, msi);
  }

  getLastSegmentBefore(originalBeginDts) {
    let idx = this._searchNearestSegmentBefore(originalBeginDts);

    if (idx >= 0) {
      return this._list[idx];
    } else {
      // -1
      return null;
    }
  }

  getLastSampleBefore(originalBeginDts) {
    let segment = this.getLastSegmentBefore(originalBeginDts);

    if (segment != null) {
      return segment.lastSample;
    } else {
      return null;
    }
  }

  getLastSyncPointBefore(originalBeginDts) {
    let segmentIdx = this._searchNearestSegmentBefore(originalBeginDts);

    let syncPoints = this._list[segmentIdx].syncPoints;

    while (syncPoints.length === 0 && segmentIdx > 0) {
      segmentIdx--;
      syncPoints = this._list[segmentIdx].syncPoints;
    }

    if (syncPoints.length > 0) {
      return syncPoints[syncPoints.length - 1];
    } else {
      return null;
    }
  }

}

exports.MediaSegmentInfoList = MediaSegmentInfoList;
},{}],"node_modules/flv.js/src/remux/mp4-remuxer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _mp4Generator = _interopRequireDefault(require("./mp4-generator.js"));

var _aacSilent = _interopRequireDefault(require("./aac-silent.js"));

var _browser = _interopRequireDefault(require("../utils/browser.js"));

var _mediaSegmentInfo = require("../core/media-segment-info.js");

var _exception = require("../utils/exception.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Fragmented mp4 remuxer
class MP4Remuxer {
  constructor(config) {
    this.TAG = 'MP4Remuxer';
    this._config = config;
    this._isLive = config.isLive === true ? true : false;
    this._dtsBase = -1;
    this._dtsBaseInited = false;
    this._audioDtsBase = Infinity;
    this._videoDtsBase = Infinity;
    this._audioNextDts = undefined;
    this._videoNextDts = undefined;
    this._audioStashedLastSample = null;
    this._videoStashedLastSample = null;
    this._audioMeta = null;
    this._videoMeta = null;
    this._audioSegmentInfoList = new _mediaSegmentInfo.MediaSegmentInfoList('audio');
    this._videoSegmentInfoList = new _mediaSegmentInfo.MediaSegmentInfoList('video');
    this._onInitSegment = null;
    this._onMediaSegment = null; // Workaround for chrome < 50: Always force first sample as a Random Access Point in media segment
    // see https://bugs.chromium.org/p/chromium/issues/detail?id=229412

    this._forceFirstIDR = _browser.default.chrome && (_browser.default.version.major < 50 || _browser.default.version.major === 50 && _browser.default.version.build < 2661) ? true : false; // Workaround for IE11/Edge: Fill silent aac frame after keyframe-seeking
    // Make audio beginDts equals with video beginDts, in order to fix seek freeze

    this._fillSilentAfterSeek = _browser.default.msedge || _browser.default.msie; // While only FireFox supports 'audio/mp4, codecs="mp3"', use 'audio/mpeg' for chrome, safari, ...

    this._mp3UseMpegAudio = !_browser.default.firefox;
    this._fillAudioTimestampGap = this._config.fixAudioTimestampGap;
  }

  destroy() {
    this._dtsBase = -1;
    this._dtsBaseInited = false;
    this._audioMeta = null;
    this._videoMeta = null;

    this._audioSegmentInfoList.clear();

    this._audioSegmentInfoList = null;

    this._videoSegmentInfoList.clear();

    this._videoSegmentInfoList = null;
    this._onInitSegment = null;
    this._onMediaSegment = null;
  }

  bindDataSource(producer) {
    producer.onDataAvailable = this.remux.bind(this);
    producer.onTrackMetadata = this._onTrackMetadataReceived.bind(this);
    return this;
  }
  /* prototype: function onInitSegment(type: string, initSegment: ArrayBuffer): void
     InitSegment: {
         type: string,
         data: ArrayBuffer,
         codec: string,
         container: string
     }
  */


  get onInitSegment() {
    return this._onInitSegment;
  }

  set onInitSegment(callback) {
    this._onInitSegment = callback;
  }
  /* prototype: function onMediaSegment(type: string, mediaSegment: MediaSegment): void
     MediaSegment: {
         type: string,
         data: ArrayBuffer,
         sampleCount: int32
         info: MediaSegmentInfo
     }
  */


  get onMediaSegment() {
    return this._onMediaSegment;
  }

  set onMediaSegment(callback) {
    this._onMediaSegment = callback;
  }

  insertDiscontinuity() {
    this._audioNextDts = this._videoNextDts = undefined;
  }

  seek(originalDts) {
    this._audioStashedLastSample = null;
    this._videoStashedLastSample = null;

    this._videoSegmentInfoList.clear();

    this._audioSegmentInfoList.clear();
  }

  remux(audioTrack, videoTrack) {
    if (!this._onMediaSegment) {
      throw new _exception.IllegalStateException('MP4Remuxer: onMediaSegment callback must be specificed!');
    }

    if (!this._dtsBaseInited) {
      this._calculateDtsBase(audioTrack, videoTrack);
    }

    this._remuxVideo(videoTrack);

    this._remuxAudio(audioTrack);
  }

  _onTrackMetadataReceived(type, metadata) {
    let metabox = null;
    let container = 'mp4';
    let codec = metadata.codec;

    if (type === 'audio') {
      this._audioMeta = metadata;

      if (metadata.codec === 'mp3' && this._mp3UseMpegAudio) {
        // 'audio/mpeg' for MP3 audio track
        container = 'mpeg';
        codec = '';
        metabox = new Uint8Array();
      } else {
        // 'audio/mp4, codecs="codec"'
        metabox = _mp4Generator.default.generateInitSegment(metadata);
      }
    } else if (type === 'video') {
      this._videoMeta = metadata;
      metabox = _mp4Generator.default.generateInitSegment(metadata);
    } else {
      return;
    } // dispatch metabox (Initialization Segment)


    if (!this._onInitSegment) {
      throw new _exception.IllegalStateException('MP4Remuxer: onInitSegment callback must be specified!');
    }

    this._onInitSegment(type, {
      type: type,
      data: metabox.buffer,
      codec: codec,
      container: `${type}/${container}`,
      mediaDuration: metadata.duration // in timescale 1000 (milliseconds)

    });
  }

  _calculateDtsBase(audioTrack, videoTrack) {
    if (this._dtsBaseInited) {
      return;
    }

    if (audioTrack.samples && audioTrack.samples.length) {
      this._audioDtsBase = audioTrack.samples[0].dts;
    }

    if (videoTrack.samples && videoTrack.samples.length) {
      this._videoDtsBase = videoTrack.samples[0].dts;
    }

    this._dtsBase = Math.min(this._audioDtsBase, this._videoDtsBase);
    this._dtsBaseInited = true;
  }

  flushStashedSamples() {
    let videoSample = this._videoStashedLastSample;
    let audioSample = this._audioStashedLastSample;
    let videoTrack = {
      type: 'video',
      id: 1,
      sequenceNumber: 0,
      samples: [],
      length: 0
    };

    if (videoSample != null) {
      videoTrack.samples.push(videoSample);
      videoTrack.length = videoSample.length;
    }

    let audioTrack = {
      type: 'audio',
      id: 2,
      sequenceNumber: 0,
      samples: [],
      length: 0
    };

    if (audioSample != null) {
      audioTrack.samples.push(audioSample);
      audioTrack.length = audioSample.length;
    }

    this._videoStashedLastSample = null;
    this._audioStashedLastSample = null;

    this._remuxVideo(videoTrack, true);

    this._remuxAudio(audioTrack, true);
  }

  _remuxAudio(audioTrack, force) {
    if (this._audioMeta == null) {
      return;
    }

    let track = audioTrack;
    let samples = track.samples;
    let dtsCorrection = undefined;
    let firstDts = -1,
        lastDts = -1,
        lastPts = -1;
    let refSampleDuration = this._audioMeta.refSampleDuration;
    let mpegRawTrack = this._audioMeta.codec === 'mp3' && this._mp3UseMpegAudio;
    let firstSegmentAfterSeek = this._dtsBaseInited && this._audioNextDts === undefined;
    let insertPrefixSilentFrame = false;

    if (!samples || samples.length === 0) {
      return;
    }

    if (samples.length === 1 && !force) {
      // If [sample count in current batch] === 1 && (force != true)
      // Ignore and keep in demuxer's queue
      return;
    } // else if (force === true) do remux


    let offset = 0;
    let mdatbox = null;
    let mdatBytes = 0; // calculate initial mdat size

    if (mpegRawTrack) {
      // for raw mpeg buffer
      offset = 0;
      mdatBytes = track.length;
    } else {
      // for fmp4 mdat box
      offset = 8; // size + type

      mdatBytes = 8 + track.length;
    }

    let lastSample = null; // Pop the lastSample and waiting for stash

    if (samples.length > 1) {
      lastSample = samples.pop();
      mdatBytes -= lastSample.length;
    } // Insert [stashed lastSample in the previous batch] to the front


    if (this._audioStashedLastSample != null) {
      let sample = this._audioStashedLastSample;
      this._audioStashedLastSample = null;
      samples.unshift(sample);
      mdatBytes += sample.length;
    } // Stash the lastSample of current batch, waiting for next batch


    if (lastSample != null) {
      this._audioStashedLastSample = lastSample;
    }

    let firstSampleOriginalDts = samples[0].dts - this._dtsBase; // calculate dtsCorrection

    if (this._audioNextDts) {
      dtsCorrection = firstSampleOriginalDts - this._audioNextDts;
    } else {
      // this._audioNextDts == undefined
      if (this._audioSegmentInfoList.isEmpty()) {
        dtsCorrection = 0;

        if (this._fillSilentAfterSeek && !this._videoSegmentInfoList.isEmpty()) {
          if (this._audioMeta.originalCodec !== 'mp3') {
            insertPrefixSilentFrame = true;
          }
        }
      } else {
        let lastSample = this._audioSegmentInfoList.getLastSampleBefore(firstSampleOriginalDts);

        if (lastSample != null) {
          let distance = firstSampleOriginalDts - (lastSample.originalDts + lastSample.duration);

          if (distance <= 3) {
            distance = 0;
          }

          let expectedDts = lastSample.dts + lastSample.duration + distance;
          dtsCorrection = firstSampleOriginalDts - expectedDts;
        } else {
          // lastSample == null, cannot found
          dtsCorrection = 0;
        }
      }
    }

    if (insertPrefixSilentFrame) {
      // align audio segment beginDts to match with current video segment's beginDts
      let firstSampleDts = firstSampleOriginalDts - dtsCorrection;

      let videoSegment = this._videoSegmentInfoList.getLastSegmentBefore(firstSampleOriginalDts);

      if (videoSegment != null && videoSegment.beginDts < firstSampleDts) {
        let silentUnit = _aacSilent.default.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount);

        if (silentUnit) {
          let dts = videoSegment.beginDts;
          let silentFrameDuration = firstSampleDts - videoSegment.beginDts;

          _logger.default.v(this.TAG, `InsertPrefixSilentAudio: dts: ${dts}, duration: ${silentFrameDuration}`);

          samples.unshift({
            unit: silentUnit,
            dts: dts,
            pts: dts
          });
          mdatBytes += silentUnit.byteLength;
        } // silentUnit == null: Cannot generate, skip

      } else {
        insertPrefixSilentFrame = false;
      }
    }

    let mp4Samples = []; // Correct dts for each sample, and calculate sample duration. Then output to mp4Samples

    for (let i = 0; i < samples.length; i++) {
      let sample = samples[i];
      let unit = sample.unit;
      let originalDts = sample.dts - this._dtsBase;
      let dts = originalDts - dtsCorrection;

      if (firstDts === -1) {
        firstDts = dts;
      }

      let sampleDuration = 0;

      if (i !== samples.length - 1) {
        let nextDts = samples[i + 1].dts - this._dtsBase - dtsCorrection;
        sampleDuration = nextDts - dts;
      } else {
        // the last sample
        if (lastSample != null) {
          // use stashed sample's dts to calculate sample duration
          let nextDts = lastSample.dts - this._dtsBase - dtsCorrection;
          sampleDuration = nextDts - dts;
        } else if (mp4Samples.length >= 1) {
          // use second last sample duration
          sampleDuration = mp4Samples[mp4Samples.length - 1].duration;
        } else {
          // the only one sample, use reference sample duration
          sampleDuration = Math.floor(refSampleDuration);
        }
      }

      let needFillSilentFrames = false;
      let silentFrames = null; // Silent frame generation, if large timestamp gap detected && config.fixAudioTimestampGap

      if (sampleDuration > refSampleDuration * 1.5 && this._audioMeta.codec !== 'mp3' && this._fillAudioTimestampGap && !_browser.default.safari) {
        // We need to insert silent frames to fill timestamp gap
        needFillSilentFrames = true;
        let delta = Math.abs(sampleDuration - refSampleDuration);
        let frameCount = Math.ceil(delta / refSampleDuration);
        let currentDts = dts + refSampleDuration; // Notice: in float

        _logger.default.w(this.TAG, 'Large audio timestamp gap detected, may cause AV sync to drift. ' + 'Silent frames will be generated to avoid unsync.\n' + `dts: ${dts + sampleDuration} ms, expected: ${dts + Math.round(refSampleDuration)} ms, ` + `delta: ${Math.round(delta)} ms, generate: ${frameCount} frames`);

        let silentUnit = _aacSilent.default.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount);

        if (silentUnit == null) {
          _logger.default.w(this.TAG, 'Unable to generate silent frame for ' + `${this._audioMeta.originalCodec} with ${this._audioMeta.channelCount} channels, repeat last frame`); // Repeat last frame


          silentUnit = unit;
        }

        silentFrames = [];

        for (let j = 0; j < frameCount; j++) {
          let intDts = Math.round(currentDts); // round to integer

          if (silentFrames.length > 0) {
            // Set previous frame sample duration
            let previousFrame = silentFrames[silentFrames.length - 1];
            previousFrame.duration = intDts - previousFrame.dts;
          }

          let frame = {
            dts: intDts,
            pts: intDts,
            cts: 0,
            unit: silentUnit,
            size: silentUnit.byteLength,
            duration: 0,
            // wait for next sample
            originalDts: originalDts,
            flags: {
              isLeading: 0,
              dependsOn: 1,
              isDependedOn: 0,
              hasRedundancy: 0
            }
          };
          silentFrames.push(frame);
          mdatBytes += frame.size;
          currentDts += refSampleDuration;
        } // last frame: align end time to next frame dts


        let lastFrame = silentFrames[silentFrames.length - 1];
        lastFrame.duration = dts + sampleDuration - lastFrame.dts; // silentFrames.forEach((frame) => {
        //     Log.w(this.TAG, `SilentAudio: dts: ${frame.dts}, duration: ${frame.duration}`);
        // });
        // Set correct sample duration for current frame

        sampleDuration = Math.round(refSampleDuration);
      }

      mp4Samples.push({
        dts: dts,
        pts: dts,
        cts: 0,
        unit: sample.unit,
        size: sample.unit.byteLength,
        duration: sampleDuration,
        originalDts: originalDts,
        flags: {
          isLeading: 0,
          dependsOn: 1,
          isDependedOn: 0,
          hasRedundancy: 0
        }
      });

      if (needFillSilentFrames) {
        // Silent frames should be inserted after wrong-duration frame
        mp4Samples.push.apply(mp4Samples, silentFrames);
      }
    } // allocate mdatbox


    if (mpegRawTrack) {
      // allocate for raw mpeg buffer
      mdatbox = new Uint8Array(mdatBytes);
    } else {
      // allocate for fmp4 mdat box
      mdatbox = new Uint8Array(mdatBytes); // size field

      mdatbox[0] = mdatBytes >>> 24 & 0xFF;
      mdatbox[1] = mdatBytes >>> 16 & 0xFF;
      mdatbox[2] = mdatBytes >>> 8 & 0xFF;
      mdatbox[3] = mdatBytes & 0xFF; // type field (fourCC)

      mdatbox.set(_mp4Generator.default.types.mdat, 4);
    } // Write samples into mdatbox


    for (let i = 0; i < mp4Samples.length; i++) {
      let unit = mp4Samples[i].unit;
      mdatbox.set(unit, offset);
      offset += unit.byteLength;
    }

    let latest = mp4Samples[mp4Samples.length - 1];
    lastDts = latest.dts + latest.duration;
    this._audioNextDts = lastDts; // fill media segment info & add to info list

    let info = new _mediaSegmentInfo.MediaSegmentInfo();
    info.beginDts = firstDts;
    info.endDts = lastDts;
    info.beginPts = firstDts;
    info.endPts = lastDts;
    info.originalBeginDts = mp4Samples[0].originalDts;
    info.originalEndDts = latest.originalDts + latest.duration;
    info.firstSample = new _mediaSegmentInfo.SampleInfo(mp4Samples[0].dts, mp4Samples[0].pts, mp4Samples[0].duration, mp4Samples[0].originalDts, false);
    info.lastSample = new _mediaSegmentInfo.SampleInfo(latest.dts, latest.pts, latest.duration, latest.originalDts, false);

    if (!this._isLive) {
      this._audioSegmentInfoList.append(info);
    }

    track.samples = mp4Samples;
    track.sequenceNumber++;
    let moofbox = null;

    if (mpegRawTrack) {
      // Generate empty buffer, because useless for raw mpeg
      moofbox = new Uint8Array();
    } else {
      // Generate moof for fmp4 segment
      moofbox = _mp4Generator.default.moof(track, firstDts);
    }

    track.samples = [];
    track.length = 0;
    let segment = {
      type: 'audio',
      data: this._mergeBoxes(moofbox, mdatbox).buffer,
      sampleCount: mp4Samples.length,
      info: info
    };

    if (mpegRawTrack && firstSegmentAfterSeek) {
      // For MPEG audio stream in MSE, if seeking occurred, before appending new buffer
      // We need explicitly set timestampOffset to the desired point in timeline for mpeg SourceBuffer.
      segment.timestampOffset = firstDts;
    }

    this._onMediaSegment('audio', segment);
  }

  _remuxVideo(videoTrack, force) {
    if (this._videoMeta == null) {
      return;
    }

    let track = videoTrack;
    let samples = track.samples;
    let dtsCorrection = undefined;
    let firstDts = -1,
        lastDts = -1;
    let firstPts = -1,
        lastPts = -1;

    if (!samples || samples.length === 0) {
      return;
    }

    if (samples.length === 1 && !force) {
      // If [sample count in current batch] === 1 && (force != true)
      // Ignore and keep in demuxer's queue
      return;
    } // else if (force === true) do remux


    let offset = 8;
    let mdatbox = null;
    let mdatBytes = 8 + videoTrack.length;
    let lastSample = null; // Pop the lastSample and waiting for stash

    if (samples.length > 1) {
      lastSample = samples.pop();
      mdatBytes -= lastSample.length;
    } // Insert [stashed lastSample in the previous batch] to the front


    if (this._videoStashedLastSample != null) {
      let sample = this._videoStashedLastSample;
      this._videoStashedLastSample = null;
      samples.unshift(sample);
      mdatBytes += sample.length;
    } // Stash the lastSample of current batch, waiting for next batch


    if (lastSample != null) {
      this._videoStashedLastSample = lastSample;
    }

    let firstSampleOriginalDts = samples[0].dts - this._dtsBase; // calculate dtsCorrection

    if (this._videoNextDts) {
      dtsCorrection = firstSampleOriginalDts - this._videoNextDts;
    } else {
      // this._videoNextDts == undefined
      if (this._videoSegmentInfoList.isEmpty()) {
        dtsCorrection = 0;
      } else {
        let lastSample = this._videoSegmentInfoList.getLastSampleBefore(firstSampleOriginalDts);

        if (lastSample != null) {
          let distance = firstSampleOriginalDts - (lastSample.originalDts + lastSample.duration);

          if (distance <= 3) {
            distance = 0;
          }

          let expectedDts = lastSample.dts + lastSample.duration + distance;
          dtsCorrection = firstSampleOriginalDts - expectedDts;
        } else {
          // lastSample == null, cannot found
          dtsCorrection = 0;
        }
      }
    }

    let info = new _mediaSegmentInfo.MediaSegmentInfo();
    let mp4Samples = []; // Correct dts for each sample, and calculate sample duration. Then output to mp4Samples

    for (let i = 0; i < samples.length; i++) {
      let sample = samples[i];
      let originalDts = sample.dts - this._dtsBase;
      let isKeyframe = sample.isKeyframe;
      let dts = originalDts - dtsCorrection;
      let cts = sample.cts;
      let pts = dts + cts;

      if (firstDts === -1) {
        firstDts = dts;
        firstPts = pts;
      }

      let sampleDuration = 0;

      if (i !== samples.length - 1) {
        let nextDts = samples[i + 1].dts - this._dtsBase - dtsCorrection;
        sampleDuration = nextDts - dts;
      } else {
        // the last sample
        if (lastSample != null) {
          // use stashed sample's dts to calculate sample duration
          let nextDts = lastSample.dts - this._dtsBase - dtsCorrection;
          sampleDuration = nextDts - dts;
        } else if (mp4Samples.length >= 1) {
          // use second last sample duration
          sampleDuration = mp4Samples[mp4Samples.length - 1].duration;
        } else {
          // the only one sample, use reference sample duration
          sampleDuration = Math.floor(this._videoMeta.refSampleDuration);
        }
      }

      if (isKeyframe) {
        let syncPoint = new _mediaSegmentInfo.SampleInfo(dts, pts, sampleDuration, sample.dts, true);
        syncPoint.fileposition = sample.fileposition;
        info.appendSyncPoint(syncPoint);
      }

      mp4Samples.push({
        dts: dts,
        pts: pts,
        cts: cts,
        units: sample.units,
        size: sample.length,
        isKeyframe: isKeyframe,
        duration: sampleDuration,
        originalDts: originalDts,
        flags: {
          isLeading: 0,
          dependsOn: isKeyframe ? 2 : 1,
          isDependedOn: isKeyframe ? 1 : 0,
          hasRedundancy: 0,
          isNonSync: isKeyframe ? 0 : 1
        }
      });
    } // allocate mdatbox


    mdatbox = new Uint8Array(mdatBytes);
    mdatbox[0] = mdatBytes >>> 24 & 0xFF;
    mdatbox[1] = mdatBytes >>> 16 & 0xFF;
    mdatbox[2] = mdatBytes >>> 8 & 0xFF;
    mdatbox[3] = mdatBytes & 0xFF;
    mdatbox.set(_mp4Generator.default.types.mdat, 4); // Write samples into mdatbox

    for (let i = 0; i < mp4Samples.length; i++) {
      let units = mp4Samples[i].units;

      while (units.length) {
        let unit = units.shift();
        let data = unit.data;
        mdatbox.set(data, offset);
        offset += data.byteLength;
      }
    }

    let latest = mp4Samples[mp4Samples.length - 1];
    lastDts = latest.dts + latest.duration;
    lastPts = latest.pts + latest.duration;
    this._videoNextDts = lastDts; // fill media segment info & add to info list

    info.beginDts = firstDts;
    info.endDts = lastDts;
    info.beginPts = firstPts;
    info.endPts = lastPts;
    info.originalBeginDts = mp4Samples[0].originalDts;
    info.originalEndDts = latest.originalDts + latest.duration;
    info.firstSample = new _mediaSegmentInfo.SampleInfo(mp4Samples[0].dts, mp4Samples[0].pts, mp4Samples[0].duration, mp4Samples[0].originalDts, mp4Samples[0].isKeyframe);
    info.lastSample = new _mediaSegmentInfo.SampleInfo(latest.dts, latest.pts, latest.duration, latest.originalDts, latest.isKeyframe);

    if (!this._isLive) {
      this._videoSegmentInfoList.append(info);
    }

    track.samples = mp4Samples;
    track.sequenceNumber++; // workaround for chrome < 50: force first sample as a random access point
    // see https://bugs.chromium.org/p/chromium/issues/detail?id=229412

    if (this._forceFirstIDR) {
      let flags = mp4Samples[0].flags;
      flags.dependsOn = 2;
      flags.isNonSync = 0;
    }

    let moofbox = _mp4Generator.default.moof(track, firstDts);

    track.samples = [];
    track.length = 0;

    this._onMediaSegment('video', {
      type: 'video',
      data: this._mergeBoxes(moofbox, mdatbox).buffer,
      sampleCount: mp4Samples.length,
      info: info
    });
  }

  _mergeBoxes(moof, mdat) {
    let result = new Uint8Array(moof.byteLength + mdat.byteLength);
    result.set(moof, 0);
    result.set(mdat, moof.byteLength);
    return result;
  }

}

var _default = MP4Remuxer;
exports.default = _default;
},{"../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","./mp4-generator.js":"node_modules/flv.js/src/remux/mp4-generator.js","./aac-silent.js":"node_modules/flv.js/src/remux/aac-silent.js","../utils/browser.js":"node_modules/flv.js/src/utils/browser.js","../core/media-segment-info.js":"node_modules/flv.js/src/core/media-segment-info.js","../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/core/transmuxing-events.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const TransmuxingEvents = {
  IO_ERROR: 'io_error',
  DEMUX_ERROR: 'demux_error',
  INIT_SEGMENT: 'init_segment',
  MEDIA_SEGMENT: 'media_segment',
  LOADING_COMPLETE: 'loading_complete',
  RECOVERED_EARLY_EOF: 'recovered_early_eof',
  MEDIA_INFO: 'media_info',
  METADATA_ARRIVED: 'metadata_arrived',
  SCRIPTDATA_ARRIVED: 'scriptdata_arrived',
  STATISTICS_INFO: 'statistics_info',
  RECOMMEND_SEEKPOINT: 'recommend_seekpoint'
};
var _default = TransmuxingEvents;
exports.default = _default;
},{}],"node_modules/flv.js/src/core/transmuxing-controller.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _events = _interopRequireDefault(require("events"));

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _browser = _interopRequireDefault(require("../utils/browser.js"));

var _mediaInfo = _interopRequireDefault(require("./media-info.js"));

var _flvDemuxer = _interopRequireDefault(require("../demux/flv-demuxer.js"));

var _mp4Remuxer = _interopRequireDefault(require("../remux/mp4-remuxer.js"));

var _demuxErrors = _interopRequireDefault(require("../demux/demux-errors.js"));

var _ioController = _interopRequireDefault(require("../io/io-controller.js"));

var _transmuxingEvents = _interopRequireDefault(require("./transmuxing-events.js"));

var _loader = require("../io/loader.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Transmuxing (IO, Demuxing, Remuxing) controller, with multipart support
class TransmuxingController {
  constructor(mediaDataSource, config) {
    this.TAG = 'TransmuxingController';
    this._emitter = new _events.default();
    this._config = config; // treat single part media as multipart media, which has only one segment

    if (!mediaDataSource.segments) {
      mediaDataSource.segments = [{
        duration: mediaDataSource.duration,
        filesize: mediaDataSource.filesize,
        url: mediaDataSource.url
      }];
    } // fill in default IO params if not exists


    if (typeof mediaDataSource.cors !== 'boolean') {
      mediaDataSource.cors = true;
    }

    if (typeof mediaDataSource.withCredentials !== 'boolean') {
      mediaDataSource.withCredentials = false;
    }

    this._mediaDataSource = mediaDataSource;
    this._currentSegmentIndex = 0;
    let totalDuration = 0;

    this._mediaDataSource.segments.forEach(segment => {
      // timestampBase for each segment, and calculate total duration
      segment.timestampBase = totalDuration;
      totalDuration += segment.duration; // params needed by IOController

      segment.cors = mediaDataSource.cors;
      segment.withCredentials = mediaDataSource.withCredentials; // referrer policy control, if exist

      if (config.referrerPolicy) {
        segment.referrerPolicy = config.referrerPolicy;
      }
    });

    if (!isNaN(totalDuration) && this._mediaDataSource.duration !== totalDuration) {
      this._mediaDataSource.duration = totalDuration;
    }

    this._mediaInfo = null;
    this._demuxer = null;
    this._remuxer = null;
    this._ioctl = null;
    this._pendingSeekTime = null;
    this._pendingResolveSeekPoint = null;
    this._statisticsReporter = null;
  }

  destroy() {
    this._mediaInfo = null;
    this._mediaDataSource = null;

    if (this._statisticsReporter) {
      this._disableStatisticsReporter();
    }

    if (this._ioctl) {
      this._ioctl.destroy();

      this._ioctl = null;
    }

    if (this._demuxer) {
      this._demuxer.destroy();

      this._demuxer = null;
    }

    if (this._remuxer) {
      this._remuxer.destroy();

      this._remuxer = null;
    }

    this._emitter.removeAllListeners();

    this._emitter = null;
  }

  on(event, listener) {
    this._emitter.addListener(event, listener);
  }

  off(event, listener) {
    this._emitter.removeListener(event, listener);
  }

  start() {
    this._loadSegment(0);

    this._enableStatisticsReporter();
  }

  _loadSegment(segmentIndex, optionalFrom) {
    this._currentSegmentIndex = segmentIndex;
    let dataSource = this._mediaDataSource.segments[segmentIndex];
    let ioctl = this._ioctl = new _ioController.default(dataSource, this._config, segmentIndex);
    ioctl.onError = this._onIOException.bind(this);
    ioctl.onSeeked = this._onIOSeeked.bind(this);
    ioctl.onComplete = this._onIOComplete.bind(this);
    ioctl.onRedirect = this._onIORedirect.bind(this);
    ioctl.onRecoveredEarlyEof = this._onIORecoveredEarlyEof.bind(this);

    if (optionalFrom) {
      this._demuxer.bindDataSource(this._ioctl);
    } else {
      ioctl.onDataArrival = this._onInitChunkArrival.bind(this);
    }

    ioctl.open(optionalFrom);
  }

  stop() {
    this._internalAbort();

    this._disableStatisticsReporter();
  }

  _internalAbort() {
    if (this._ioctl) {
      this._ioctl.destroy();

      this._ioctl = null;
    }
  }

  pause() {
    // take a rest
    if (this._ioctl && this._ioctl.isWorking()) {
      this._ioctl.pause();

      this._disableStatisticsReporter();
    }
  }

  resume() {
    if (this._ioctl && this._ioctl.isPaused()) {
      this._ioctl.resume();

      this._enableStatisticsReporter();
    }
  }

  seek(milliseconds) {
    if (this._mediaInfo == null || !this._mediaInfo.isSeekable()) {
      return;
    }

    let targetSegmentIndex = this._searchSegmentIndexContains(milliseconds);

    if (targetSegmentIndex === this._currentSegmentIndex) {
      // intra-segment seeking
      let segmentInfo = this._mediaInfo.segments[targetSegmentIndex];

      if (segmentInfo == undefined) {
        // current segment loading started, but mediainfo hasn't received yet
        // wait for the metadata loaded, then seek to expected position
        this._pendingSeekTime = milliseconds;
      } else {
        let keyframe = segmentInfo.getNearestKeyframe(milliseconds);

        this._remuxer.seek(keyframe.milliseconds);

        this._ioctl.seek(keyframe.fileposition); // Will be resolved in _onRemuxerMediaSegmentArrival()


        this._pendingResolveSeekPoint = keyframe.milliseconds;
      }
    } else {
      // cross-segment seeking
      let targetSegmentInfo = this._mediaInfo.segments[targetSegmentIndex];

      if (targetSegmentInfo == undefined) {
        // target segment hasn't been loaded. We need metadata then seek to expected time
        this._pendingSeekTime = milliseconds;

        this._internalAbort();

        this._remuxer.seek();

        this._remuxer.insertDiscontinuity();

        this._loadSegment(targetSegmentIndex); // Here we wait for the metadata loaded, then seek to expected position

      } else {
        // We have target segment's metadata, direct seek to target position
        let keyframe = targetSegmentInfo.getNearestKeyframe(milliseconds);

        this._internalAbort();

        this._remuxer.seek(milliseconds);

        this._remuxer.insertDiscontinuity();

        this._demuxer.resetMediaInfo();

        this._demuxer.timestampBase = this._mediaDataSource.segments[targetSegmentIndex].timestampBase;

        this._loadSegment(targetSegmentIndex, keyframe.fileposition);

        this._pendingResolveSeekPoint = keyframe.milliseconds;

        this._reportSegmentMediaInfo(targetSegmentIndex);
      }
    }

    this._enableStatisticsReporter();
  }

  _searchSegmentIndexContains(milliseconds) {
    let segments = this._mediaDataSource.segments;
    let idx = segments.length - 1;

    for (let i = 0; i < segments.length; i++) {
      if (milliseconds < segments[i].timestampBase) {
        idx = i - 1;
        break;
      }
    }

    return idx;
  }

  _onInitChunkArrival(data, byteStart) {
    let probeData = null;
    let consumed = 0;

    if (byteStart > 0) {
      // IOController seeked immediately after opened, byteStart > 0 callback may received
      this._demuxer.bindDataSource(this._ioctl);

      this._demuxer.timestampBase = this._mediaDataSource.segments[this._currentSegmentIndex].timestampBase;
      consumed = this._demuxer.parseChunks(data, byteStart);
    } else if ((probeData = _flvDemuxer.default.probe(data)).match) {
      // Always create new FLVDemuxer
      this._demuxer = new _flvDemuxer.default(probeData, this._config);

      if (!this._remuxer) {
        this._remuxer = new _mp4Remuxer.default(this._config);
      }

      let mds = this._mediaDataSource;

      if (mds.duration != undefined && !isNaN(mds.duration)) {
        this._demuxer.overridedDuration = mds.duration;
      }

      if (typeof mds.hasAudio === 'boolean') {
        this._demuxer.overridedHasAudio = mds.hasAudio;
      }

      if (typeof mds.hasVideo === 'boolean') {
        this._demuxer.overridedHasVideo = mds.hasVideo;
      }

      this._demuxer.timestampBase = mds.segments[this._currentSegmentIndex].timestampBase;
      this._demuxer.onError = this._onDemuxException.bind(this);
      this._demuxer.onMediaInfo = this._onMediaInfo.bind(this);
      this._demuxer.onMetaDataArrived = this._onMetaDataArrived.bind(this);
      this._demuxer.onScriptDataArrived = this._onScriptDataArrived.bind(this);

      this._remuxer.bindDataSource(this._demuxer.bindDataSource(this._ioctl));

      this._remuxer.onInitSegment = this._onRemuxerInitSegmentArrival.bind(this);
      this._remuxer.onMediaSegment = this._onRemuxerMediaSegmentArrival.bind(this);
      consumed = this._demuxer.parseChunks(data, byteStart);
    } else {
      probeData = null;

      _logger.default.e(this.TAG, 'Non-FLV, Unsupported media type!');

      Promise.resolve().then(() => {
        this._internalAbort();
      });

      this._emitter.emit(_transmuxingEvents.default.DEMUX_ERROR, _demuxErrors.default.FORMAT_UNSUPPORTED, 'Non-FLV, Unsupported media type');

      consumed = 0;
    }

    return consumed;
  }

  _onMediaInfo(mediaInfo) {
    if (this._mediaInfo == null) {
      // Store first segment's mediainfo as global mediaInfo
      this._mediaInfo = Object.assign({}, mediaInfo);
      this._mediaInfo.keyframesIndex = null;
      this._mediaInfo.segments = [];
      this._mediaInfo.segmentCount = this._mediaDataSource.segments.length;
      Object.setPrototypeOf(this._mediaInfo, _mediaInfo.default.prototype);
    }

    let segmentInfo = Object.assign({}, mediaInfo);
    Object.setPrototypeOf(segmentInfo, _mediaInfo.default.prototype);
    this._mediaInfo.segments[this._currentSegmentIndex] = segmentInfo; // notify mediaInfo update

    this._reportSegmentMediaInfo(this._currentSegmentIndex);

    if (this._pendingSeekTime != null) {
      Promise.resolve().then(() => {
        let target = this._pendingSeekTime;
        this._pendingSeekTime = null;
        this.seek(target);
      });
    }
  }

  _onMetaDataArrived(metadata) {
    this._emitter.emit(_transmuxingEvents.default.METADATA_ARRIVED, metadata);
  }

  _onScriptDataArrived(data) {
    this._emitter.emit(_transmuxingEvents.default.SCRIPTDATA_ARRIVED, data);
  }

  _onIOSeeked() {
    this._remuxer.insertDiscontinuity();
  }

  _onIOComplete(extraData) {
    let segmentIndex = extraData;
    let nextSegmentIndex = segmentIndex + 1;

    if (nextSegmentIndex < this._mediaDataSource.segments.length) {
      this._internalAbort();

      this._remuxer.flushStashedSamples();

      this._loadSegment(nextSegmentIndex);
    } else {
      this._remuxer.flushStashedSamples();

      this._emitter.emit(_transmuxingEvents.default.LOADING_COMPLETE);

      this._disableStatisticsReporter();
    }
  }

  _onIORedirect(redirectedURL) {
    let segmentIndex = this._ioctl.extraData;
    this._mediaDataSource.segments[segmentIndex].redirectedURL = redirectedURL;
  }

  _onIORecoveredEarlyEof() {
    this._emitter.emit(_transmuxingEvents.default.RECOVERED_EARLY_EOF);
  }

  _onIOException(type, info) {
    _logger.default.e(this.TAG, `IOException: type = ${type}, code = ${info.code}, msg = ${info.msg}`);

    this._emitter.emit(_transmuxingEvents.default.IO_ERROR, type, info);

    this._disableStatisticsReporter();
  }

  _onDemuxException(type, info) {
    _logger.default.e(this.TAG, `DemuxException: type = ${type}, info = ${info}`);

    this._emitter.emit(_transmuxingEvents.default.DEMUX_ERROR, type, info);
  }

  _onRemuxerInitSegmentArrival(type, initSegment) {
    this._emitter.emit(_transmuxingEvents.default.INIT_SEGMENT, type, initSegment);
  }

  _onRemuxerMediaSegmentArrival(type, mediaSegment) {
    if (this._pendingSeekTime != null) {
      // Media segments after new-segment cross-seeking should be dropped.
      return;
    }

    this._emitter.emit(_transmuxingEvents.default.MEDIA_SEGMENT, type, mediaSegment); // Resolve pending seekPoint


    if (this._pendingResolveSeekPoint != null && type === 'video') {
      let syncPoints = mediaSegment.info.syncPoints;
      let seekpoint = this._pendingResolveSeekPoint;
      this._pendingResolveSeekPoint = null; // Safari: Pass PTS for recommend_seekpoint

      if (_browser.default.safari && syncPoints.length > 0 && syncPoints[0].originalDts === seekpoint) {
        seekpoint = syncPoints[0].pts;
      } // else: use original DTS (keyframe.milliseconds)


      this._emitter.emit(_transmuxingEvents.default.RECOMMEND_SEEKPOINT, seekpoint);
    }
  }

  _enableStatisticsReporter() {
    if (this._statisticsReporter == null) {
      this._statisticsReporter = self.setInterval(this._reportStatisticsInfo.bind(this), this._config.statisticsInfoReportInterval);
    }
  }

  _disableStatisticsReporter() {
    if (this._statisticsReporter) {
      self.clearInterval(this._statisticsReporter);
      this._statisticsReporter = null;
    }
  }

  _reportSegmentMediaInfo(segmentIndex) {
    let segmentInfo = this._mediaInfo.segments[segmentIndex];
    let exportInfo = Object.assign({}, segmentInfo);
    exportInfo.duration = this._mediaInfo.duration;
    exportInfo.segmentCount = this._mediaInfo.segmentCount;
    delete exportInfo.segments;
    delete exportInfo.keyframesIndex;

    this._emitter.emit(_transmuxingEvents.default.MEDIA_INFO, exportInfo);
  }

  _reportStatisticsInfo() {
    let info = {};
    info.url = this._ioctl.currentURL;
    info.hasRedirect = this._ioctl.hasRedirect;

    if (info.hasRedirect) {
      info.redirectedURL = this._ioctl.currentRedirectedURL;
    }

    info.speed = this._ioctl.currentSpeed;
    info.loaderType = this._ioctl.loaderType;
    info.currentSegmentIndex = this._currentSegmentIndex;
    info.totalSegmentCount = this._mediaDataSource.segments.length;

    this._emitter.emit(_transmuxingEvents.default.STATISTICS_INFO, info);
  }

}

var _default = TransmuxingController;
exports.default = _default;
},{"events":"node_modules/events/events.js","../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","../utils/browser.js":"node_modules/flv.js/src/utils/browser.js","./media-info.js":"node_modules/flv.js/src/core/media-info.js","../demux/flv-demuxer.js":"node_modules/flv.js/src/demux/flv-demuxer.js","../remux/mp4-remuxer.js":"node_modules/flv.js/src/remux/mp4-remuxer.js","../demux/demux-errors.js":"node_modules/flv.js/src/demux/demux-errors.js","../io/io-controller.js":"node_modules/flv.js/src/io/io-controller.js","./transmuxing-events.js":"node_modules/flv.js/src/core/transmuxing-events.js","../io/loader.js":"node_modules/flv.js/src/io/loader.js"}],"node_modules/flv.js/src/core/transmuxing-worker.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _loggingControl = _interopRequireDefault(require("../utils/logging-control.js"));

var _polyfill = _interopRequireDefault(require("../utils/polyfill.js"));

var _transmuxingController = _interopRequireDefault(require("./transmuxing-controller.js"));

var _transmuxingEvents = _interopRequireDefault(require("./transmuxing-events.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* post message to worker:
   data: {
       cmd: string
       param: any
   }

   receive message from worker:
   data: {
       msg: string,
       data: any
   }
 */
let TransmuxingWorker = function (self) {
  let TAG = 'TransmuxingWorker';
  let controller = null;
  let logcatListener = onLogcatCallback.bind(this);

  _polyfill.default.install();

  self.addEventListener('message', function (e) {
    switch (e.data.cmd) {
      case 'init':
        controller = new _transmuxingController.default(e.data.param[0], e.data.param[1]);
        controller.on(_transmuxingEvents.default.IO_ERROR, onIOError.bind(this));
        controller.on(_transmuxingEvents.default.DEMUX_ERROR, onDemuxError.bind(this));
        controller.on(_transmuxingEvents.default.INIT_SEGMENT, onInitSegment.bind(this));
        controller.on(_transmuxingEvents.default.MEDIA_SEGMENT, onMediaSegment.bind(this));
        controller.on(_transmuxingEvents.default.LOADING_COMPLETE, onLoadingComplete.bind(this));
        controller.on(_transmuxingEvents.default.RECOVERED_EARLY_EOF, onRecoveredEarlyEof.bind(this));
        controller.on(_transmuxingEvents.default.MEDIA_INFO, onMediaInfo.bind(this));
        controller.on(_transmuxingEvents.default.METADATA_ARRIVED, onMetaDataArrived.bind(this));
        controller.on(_transmuxingEvents.default.SCRIPTDATA_ARRIVED, onScriptDataArrived.bind(this));
        controller.on(_transmuxingEvents.default.STATISTICS_INFO, onStatisticsInfo.bind(this));
        controller.on(_transmuxingEvents.default.RECOMMEND_SEEKPOINT, onRecommendSeekpoint.bind(this));
        break;

      case 'destroy':
        if (controller) {
          controller.destroy();
          controller = null;
        }

        self.postMessage({
          msg: 'destroyed'
        });
        break;

      case 'start':
        controller.start();
        break;

      case 'stop':
        controller.stop();
        break;

      case 'seek':
        controller.seek(e.data.param);
        break;

      case 'pause':
        controller.pause();
        break;

      case 'resume':
        controller.resume();
        break;

      case 'logging_config':
        {
          let config = e.data.param;

          _loggingControl.default.applyConfig(config);

          if (config.enableCallback === true) {
            _loggingControl.default.addLogListener(logcatListener);
          } else {
            _loggingControl.default.removeLogListener(logcatListener);
          }

          break;
        }
    }
  });

  function onInitSegment(type, initSegment) {
    let obj = {
      msg: _transmuxingEvents.default.INIT_SEGMENT,
      data: {
        type: type,
        data: initSegment
      }
    };
    self.postMessage(obj, [initSegment.data]); // data: ArrayBuffer
  }

  function onMediaSegment(type, mediaSegment) {
    let obj = {
      msg: _transmuxingEvents.default.MEDIA_SEGMENT,
      data: {
        type: type,
        data: mediaSegment
      }
    };
    self.postMessage(obj, [mediaSegment.data]); // data: ArrayBuffer
  }

  function onLoadingComplete() {
    let obj = {
      msg: _transmuxingEvents.default.LOADING_COMPLETE
    };
    self.postMessage(obj);
  }

  function onRecoveredEarlyEof() {
    let obj = {
      msg: _transmuxingEvents.default.RECOVERED_EARLY_EOF
    };
    self.postMessage(obj);
  }

  function onMediaInfo(mediaInfo) {
    let obj = {
      msg: _transmuxingEvents.default.MEDIA_INFO,
      data: mediaInfo
    };
    self.postMessage(obj);
  }

  function onMetaDataArrived(metadata) {
    let obj = {
      msg: _transmuxingEvents.default.METADATA_ARRIVED,
      data: metadata
    };
    self.postMessage(obj);
  }

  function onScriptDataArrived(data) {
    let obj = {
      msg: _transmuxingEvents.default.SCRIPTDATA_ARRIVED,
      data: data
    };
    self.postMessage(obj);
  }

  function onStatisticsInfo(statInfo) {
    let obj = {
      msg: _transmuxingEvents.default.STATISTICS_INFO,
      data: statInfo
    };
    self.postMessage(obj);
  }

  function onIOError(type, info) {
    self.postMessage({
      msg: _transmuxingEvents.default.IO_ERROR,
      data: {
        type: type,
        info: info
      }
    });
  }

  function onDemuxError(type, info) {
    self.postMessage({
      msg: _transmuxingEvents.default.DEMUX_ERROR,
      data: {
        type: type,
        info: info
      }
    });
  }

  function onRecommendSeekpoint(milliseconds) {
    self.postMessage({
      msg: _transmuxingEvents.default.RECOMMEND_SEEKPOINT,
      data: milliseconds
    });
  }

  function onLogcatCallback(type, str) {
    self.postMessage({
      msg: 'logcat_callback',
      data: {
        type: type,
        logcat: str
      }
    });
  }
};

var _default = TransmuxingWorker;
exports.default = _default;
},{"../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","../utils/logging-control.js":"node_modules/flv.js/src/utils/logging-control.js","../utils/polyfill.js":"node_modules/flv.js/src/utils/polyfill.js","./transmuxing-controller.js":"node_modules/flv.js/src/core/transmuxing-controller.js","./transmuxing-events.js":"node_modules/flv.js/src/core/transmuxing-events.js"}],"node_modules/webworkify/index.js":[function(require,module,exports) {
var bundleFn = arguments[3];
var sources = arguments[4];
var cache = arguments[5];

var stringify = JSON.stringify;

module.exports = function (fn, options) {
    var wkey;
    var cacheKeys = Object.keys(cache);

    for (var i = 0, l = cacheKeys.length; i < l; i++) {
        var key = cacheKeys[i];
        var exp = cache[key].exports;
        // Using babel as a transpiler to use esmodule, the export will always
        // be an object with the default export as a property of it. To ensure
        // the existing api and babel esmodule exports are both supported we
        // check for both
        if (exp === fn || exp && exp.default === fn) {
            wkey = key;
            break;
        }
    }

    if (!wkey) {
        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);
        var wcache = {};
        for (var i = 0, l = cacheKeys.length; i < l; i++) {
            var key = cacheKeys[i];
            wcache[key] = key;
        }
        sources[wkey] = [
            'function(require,module,exports){' + fn + '(self); }',
            wcache
        ];
    }
    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);

    var scache = {}; scache[wkey] = wkey;
    sources[skey] = [
        'function(require,module,exports){' +
            // try to call default if defined to also support babel esmodule exports
            'var f = require(' + stringify(wkey) + ');' +
            '(f.default ? f.default : f)(self);' +
        '}',
        scache
    ];

    var workerSources = {};
    resolveSources(skey);

    function resolveSources(key) {
        workerSources[key] = true;

        for (var depPath in sources[key][1]) {
            var depKey = sources[key][1][depPath];
            if (!workerSources[depKey]) {
                resolveSources(depKey);
            }
        }
    }

    var src = '(' + bundleFn + ')({'
        + Object.keys(workerSources).map(function (key) {
            return stringify(key) + ':['
                + sources[key][0]
                + ',' + stringify(sources[key][1]) + ']'
            ;
        }).join(',')
        + '},{},[' + stringify(skey) + '])'
    ;

    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;

    var blob = new Blob([src], { type: 'text/javascript' });
    if (options && options.bare) { return blob; }
    var workerUrl = URL.createObjectURL(blob);
    var worker = new Worker(workerUrl);
    worker.objectURL = workerUrl;
    return worker;
};

},{}],"node_modules/flv.js/src/core/transmuxer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _events = _interopRequireDefault(require("events"));

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _loggingControl = _interopRequireDefault(require("../utils/logging-control.js"));

var _transmuxingController = _interopRequireDefault(require("./transmuxing-controller.js"));

var _transmuxingEvents = _interopRequireDefault(require("./transmuxing-events.js"));

var _transmuxingWorker = _interopRequireDefault(require("./transmuxing-worker.js"));

var _mediaInfo = _interopRequireDefault(require("./media-info.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Transmuxer {
  constructor(mediaDataSource, config) {
    this.TAG = 'Transmuxer';
    this._emitter = new _events.default();

    if (config.enableWorker && typeof Worker !== 'undefined') {
      try {
        let work = require('webworkify');

        this._worker = work(_transmuxingWorker.default);
        this._workerDestroying = false;

        this._worker.addEventListener('message', this._onWorkerMessage.bind(this));

        this._worker.postMessage({
          cmd: 'init',
          param: [mediaDataSource, config]
        });

        this.e = {
          onLoggingConfigChanged: this._onLoggingConfigChanged.bind(this)
        };

        _loggingControl.default.registerListener(this.e.onLoggingConfigChanged);

        this._worker.postMessage({
          cmd: 'logging_config',
          param: _loggingControl.default.getConfig()
        });
      } catch (error) {
        _logger.default.e(this.TAG, 'Error while initialize transmuxing worker, fallback to inline transmuxing');

        this._worker = null;
        this._controller = new _transmuxingController.default(mediaDataSource, config);
      }
    } else {
      this._controller = new _transmuxingController.default(mediaDataSource, config);
    }

    if (this._controller) {
      let ctl = this._controller;
      ctl.on(_transmuxingEvents.default.IO_ERROR, this._onIOError.bind(this));
      ctl.on(_transmuxingEvents.default.DEMUX_ERROR, this._onDemuxError.bind(this));
      ctl.on(_transmuxingEvents.default.INIT_SEGMENT, this._onInitSegment.bind(this));
      ctl.on(_transmuxingEvents.default.MEDIA_SEGMENT, this._onMediaSegment.bind(this));
      ctl.on(_transmuxingEvents.default.LOADING_COMPLETE, this._onLoadingComplete.bind(this));
      ctl.on(_transmuxingEvents.default.RECOVERED_EARLY_EOF, this._onRecoveredEarlyEof.bind(this));
      ctl.on(_transmuxingEvents.default.MEDIA_INFO, this._onMediaInfo.bind(this));
      ctl.on(_transmuxingEvents.default.METADATA_ARRIVED, this._onMetaDataArrived.bind(this));
      ctl.on(_transmuxingEvents.default.SCRIPTDATA_ARRIVED, this._onScriptDataArrived.bind(this));
      ctl.on(_transmuxingEvents.default.STATISTICS_INFO, this._onStatisticsInfo.bind(this));
      ctl.on(_transmuxingEvents.default.RECOMMEND_SEEKPOINT, this._onRecommendSeekpoint.bind(this));
    }
  }

  destroy() {
    if (this._worker) {
      if (!this._workerDestroying) {
        this._workerDestroying = true;

        this._worker.postMessage({
          cmd: 'destroy'
        });

        _loggingControl.default.removeListener(this.e.onLoggingConfigChanged);

        this.e = null;
      }
    } else {
      this._controller.destroy();

      this._controller = null;
    }

    this._emitter.removeAllListeners();

    this._emitter = null;
  }

  on(event, listener) {
    this._emitter.addListener(event, listener);
  }

  off(event, listener) {
    this._emitter.removeListener(event, listener);
  }

  hasWorker() {
    return this._worker != null;
  }

  open() {
    if (this._worker) {
      this._worker.postMessage({
        cmd: 'start'
      });
    } else {
      this._controller.start();
    }
  }

  close() {
    if (this._worker) {
      this._worker.postMessage({
        cmd: 'stop'
      });
    } else {
      this._controller.stop();
    }
  }

  seek(milliseconds) {
    if (this._worker) {
      this._worker.postMessage({
        cmd: 'seek',
        param: milliseconds
      });
    } else {
      this._controller.seek(milliseconds);
    }
  }

  pause() {
    if (this._worker) {
      this._worker.postMessage({
        cmd: 'pause'
      });
    } else {
      this._controller.pause();
    }
  }

  resume() {
    if (this._worker) {
      this._worker.postMessage({
        cmd: 'resume'
      });
    } else {
      this._controller.resume();
    }
  }

  _onInitSegment(type, initSegment) {
    // do async invoke
    Promise.resolve().then(() => {
      this._emitter.emit(_transmuxingEvents.default.INIT_SEGMENT, type, initSegment);
    });
  }

  _onMediaSegment(type, mediaSegment) {
    Promise.resolve().then(() => {
      this._emitter.emit(_transmuxingEvents.default.MEDIA_SEGMENT, type, mediaSegment);
    });
  }

  _onLoadingComplete() {
    Promise.resolve().then(() => {
      this._emitter.emit(_transmuxingEvents.default.LOADING_COMPLETE);
    });
  }

  _onRecoveredEarlyEof() {
    Promise.resolve().then(() => {
      this._emitter.emit(_transmuxingEvents.default.RECOVERED_EARLY_EOF);
    });
  }

  _onMediaInfo(mediaInfo) {
    Promise.resolve().then(() => {
      this._emitter.emit(_transmuxingEvents.default.MEDIA_INFO, mediaInfo);
    });
  }

  _onMetaDataArrived(metadata) {
    Promise.resolve().then(() => {
      this._emitter.emit(_transmuxingEvents.default.METADATA_ARRIVED, metadata);
    });
  }

  _onScriptDataArrived(data) {
    Promise.resolve().then(() => {
      this._emitter.emit(_transmuxingEvents.default.SCRIPTDATA_ARRIVED, data);
    });
  }

  _onStatisticsInfo(statisticsInfo) {
    Promise.resolve().then(() => {
      this._emitter.emit(_transmuxingEvents.default.STATISTICS_INFO, statisticsInfo);
    });
  }

  _onIOError(type, info) {
    Promise.resolve().then(() => {
      this._emitter.emit(_transmuxingEvents.default.IO_ERROR, type, info);
    });
  }

  _onDemuxError(type, info) {
    Promise.resolve().then(() => {
      this._emitter.emit(_transmuxingEvents.default.DEMUX_ERROR, type, info);
    });
  }

  _onRecommendSeekpoint(milliseconds) {
    Promise.resolve().then(() => {
      this._emitter.emit(_transmuxingEvents.default.RECOMMEND_SEEKPOINT, milliseconds);
    });
  }

  _onLoggingConfigChanged(config) {
    if (this._worker) {
      this._worker.postMessage({
        cmd: 'logging_config',
        param: config
      });
    }
  }

  _onWorkerMessage(e) {
    let message = e.data;
    let data = message.data;

    if (message.msg === 'destroyed' || this._workerDestroying) {
      this._workerDestroying = false;

      this._worker.terminate();

      this._worker = null;
      return;
    }

    switch (message.msg) {
      case _transmuxingEvents.default.INIT_SEGMENT:
      case _transmuxingEvents.default.MEDIA_SEGMENT:
        this._emitter.emit(message.msg, data.type, data.data);

        break;

      case _transmuxingEvents.default.LOADING_COMPLETE:
      case _transmuxingEvents.default.RECOVERED_EARLY_EOF:
        this._emitter.emit(message.msg);

        break;

      case _transmuxingEvents.default.MEDIA_INFO:
        Object.setPrototypeOf(data, _mediaInfo.default.prototype);

        this._emitter.emit(message.msg, data);

        break;

      case _transmuxingEvents.default.METADATA_ARRIVED:
      case _transmuxingEvents.default.SCRIPTDATA_ARRIVED:
      case _transmuxingEvents.default.STATISTICS_INFO:
        this._emitter.emit(message.msg, data);

        break;

      case _transmuxingEvents.default.IO_ERROR:
      case _transmuxingEvents.default.DEMUX_ERROR:
        this._emitter.emit(message.msg, data.type, data.info);

        break;

      case _transmuxingEvents.default.RECOMMEND_SEEKPOINT:
        this._emitter.emit(message.msg, data);

        break;

      case 'logcat_callback':
        _logger.default.emitter.emit('log', data.type, data.logcat);

        break;

      default:
        break;
    }
  }

}

var _default = Transmuxer;
exports.default = _default;
},{"events":"node_modules/events/events.js","../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","../utils/logging-control.js":"node_modules/flv.js/src/utils/logging-control.js","./transmuxing-controller.js":"node_modules/flv.js/src/core/transmuxing-controller.js","./transmuxing-events.js":"node_modules/flv.js/src/core/transmuxing-events.js","./transmuxing-worker.js":"node_modules/flv.js/src/core/transmuxing-worker.js","./media-info.js":"node_modules/flv.js/src/core/media-info.js","webworkify":"node_modules/webworkify/index.js"}],"node_modules/flv.js/src/core/mse-events.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const MSEEvents = {
  ERROR: 'error',
  SOURCE_OPEN: 'source_open',
  UPDATE_END: 'update_end',
  BUFFER_FULL: 'buffer_full'
};
var _default = MSEEvents;
exports.default = _default;
},{}],"node_modules/flv.js/src/core/mse-controller.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _events = _interopRequireDefault(require("events"));

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _browser = _interopRequireDefault(require("../utils/browser.js"));

var _mseEvents = _interopRequireDefault(require("./mse-events.js"));

var _mediaSegmentInfo = require("./media-segment-info.js");

var _exception = require("../utils/exception.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Media Source Extensions controller
class MSEController {
  constructor(config) {
    this.TAG = 'MSEController';
    this._config = config;
    this._emitter = new _events.default();

    if (this._config.isLive && this._config.autoCleanupSourceBuffer == undefined) {
      // For live stream, do auto cleanup by default
      this._config.autoCleanupSourceBuffer = true;
    }

    this.e = {
      onSourceOpen: this._onSourceOpen.bind(this),
      onSourceEnded: this._onSourceEnded.bind(this),
      onSourceClose: this._onSourceClose.bind(this),
      onSourceBufferError: this._onSourceBufferError.bind(this),
      onSourceBufferUpdateEnd: this._onSourceBufferUpdateEnd.bind(this)
    };
    this._mediaSource = null;
    this._mediaSourceObjectURL = null;
    this._mediaElement = null;
    this._isBufferFull = false;
    this._hasPendingEos = false;
    this._requireSetMediaDuration = false;
    this._pendingMediaDuration = 0;
    this._pendingSourceBufferInit = [];
    this._mimeTypes = {
      video: null,
      audio: null
    };
    this._sourceBuffers = {
      video: null,
      audio: null
    };
    this._lastInitSegments = {
      video: null,
      audio: null
    };
    this._pendingSegments = {
      video: [],
      audio: []
    };
    this._pendingRemoveRanges = {
      video: [],
      audio: []
    };
    this._idrList = new _mediaSegmentInfo.IDRSampleList();
  }

  destroy() {
    if (this._mediaElement || this._mediaSource) {
      this.detachMediaElement();
    }

    this.e = null;

    this._emitter.removeAllListeners();

    this._emitter = null;
  }

  on(event, listener) {
    this._emitter.addListener(event, listener);
  }

  off(event, listener) {
    this._emitter.removeListener(event, listener);
  }

  attachMediaElement(mediaElement) {
    if (this._mediaSource) {
      throw new _exception.IllegalStateException('MediaSource has been attached to an HTMLMediaElement!');
    }

    let ms = this._mediaSource = new window.MediaSource();
    ms.addEventListener('sourceopen', this.e.onSourceOpen);
    ms.addEventListener('sourceended', this.e.onSourceEnded);
    ms.addEventListener('sourceclose', this.e.onSourceClose);
    this._mediaElement = mediaElement;
    this._mediaSourceObjectURL = window.URL.createObjectURL(this._mediaSource);
    mediaElement.src = this._mediaSourceObjectURL;
  }

  detachMediaElement() {
    if (this._mediaSource) {
      let ms = this._mediaSource;

      for (let type in this._sourceBuffers) {
        // pending segments should be discard
        let ps = this._pendingSegments[type];
        ps.splice(0, ps.length);
        this._pendingSegments[type] = null;
        this._pendingRemoveRanges[type] = null;
        this._lastInitSegments[type] = null; // remove all sourcebuffers

        let sb = this._sourceBuffers[type];

        if (sb) {
          if (ms.readyState !== 'closed') {
            // ms edge can throw an error: Unexpected call to method or property access
            try {
              ms.removeSourceBuffer(sb);
            } catch (error) {
              _logger.default.e(this.TAG, error.message);
            }

            sb.removeEventListener('error', this.e.onSourceBufferError);
            sb.removeEventListener('updateend', this.e.onSourceBufferUpdateEnd);
          }

          this._mimeTypes[type] = null;
          this._sourceBuffers[type] = null;
        }
      }

      if (ms.readyState === 'open') {
        try {
          ms.endOfStream();
        } catch (error) {
          _logger.default.e(this.TAG, error.message);
        }
      }

      ms.removeEventListener('sourceopen', this.e.onSourceOpen);
      ms.removeEventListener('sourceended', this.e.onSourceEnded);
      ms.removeEventListener('sourceclose', this.e.onSourceClose);
      this._pendingSourceBufferInit = [];
      this._isBufferFull = false;

      this._idrList.clear();

      this._mediaSource = null;
    }

    if (this._mediaElement) {
      this._mediaElement.src = '';

      this._mediaElement.removeAttribute('src');

      this._mediaElement = null;
    }

    if (this._mediaSourceObjectURL) {
      window.URL.revokeObjectURL(this._mediaSourceObjectURL);
      this._mediaSourceObjectURL = null;
    }
  }

  appendInitSegment(initSegment, deferred) {
    if (!this._mediaSource || this._mediaSource.readyState !== 'open') {
      // sourcebuffer creation requires mediaSource.readyState === 'open'
      // so we defer the sourcebuffer creation, until sourceopen event triggered
      this._pendingSourceBufferInit.push(initSegment); // make sure that this InitSegment is in the front of pending segments queue


      this._pendingSegments[initSegment.type].push(initSegment);

      return;
    }

    let is = initSegment;
    let mimeType = `${is.container}`;

    if (is.codec && is.codec.length > 0) {
      mimeType += `;codecs=${is.codec}`;
    }

    let firstInitSegment = false;

    _logger.default.v(this.TAG, 'Received Initialization Segment, mimeType: ' + mimeType);

    this._lastInitSegments[is.type] = is;

    if (mimeType !== this._mimeTypes[is.type]) {
      if (!this._mimeTypes[is.type]) {
        // empty, first chance create sourcebuffer
        firstInitSegment = true;

        try {
          let sb = this._sourceBuffers[is.type] = this._mediaSource.addSourceBuffer(mimeType);

          sb.addEventListener('error', this.e.onSourceBufferError);
          sb.addEventListener('updateend', this.e.onSourceBufferUpdateEnd);
        } catch (error) {
          _logger.default.e(this.TAG, error.message);

          this._emitter.emit(_mseEvents.default.ERROR, {
            code: error.code,
            msg: error.message
          });

          return;
        }
      } else {
        _logger.default.v(this.TAG, `Notice: ${is.type} mimeType changed, origin: ${this._mimeTypes[is.type]}, target: ${mimeType}`);
      }

      this._mimeTypes[is.type] = mimeType;
    }

    if (!deferred) {
      // deferred means this InitSegment has been pushed to pendingSegments queue
      this._pendingSegments[is.type].push(is);
    }

    if (!firstInitSegment) {
      // append immediately only if init segment in subsequence
      if (this._sourceBuffers[is.type] && !this._sourceBuffers[is.type].updating) {
        this._doAppendSegments();
      }
    }

    if (_browser.default.safari && is.container === 'audio/mpeg' && is.mediaDuration > 0) {
      // 'audio/mpeg' track under Safari may cause MediaElement's duration to be NaN
      // Manually correct MediaSource.duration to make progress bar seekable, and report right duration
      this._requireSetMediaDuration = true;
      this._pendingMediaDuration = is.mediaDuration / 1000; // in seconds

      this._updateMediaSourceDuration();
    }
  }

  appendMediaSegment(mediaSegment) {
    let ms = mediaSegment;

    this._pendingSegments[ms.type].push(ms);

    if (this._config.autoCleanupSourceBuffer && this._needCleanupSourceBuffer()) {
      this._doCleanupSourceBuffer();
    }

    let sb = this._sourceBuffers[ms.type];

    if (sb && !sb.updating && !this._hasPendingRemoveRanges()) {
      this._doAppendSegments();
    }
  }

  seek(seconds) {
    // remove all appended buffers
    for (let type in this._sourceBuffers) {
      if (!this._sourceBuffers[type]) {
        continue;
      } // abort current buffer append algorithm


      let sb = this._sourceBuffers[type];

      if (this._mediaSource.readyState === 'open') {
        try {
          // If range removal algorithm is running, InvalidStateError will be throwed
          // Ignore it.
          sb.abort();
        } catch (error) {
          _logger.default.e(this.TAG, error.message);
        }
      } // IDRList should be clear


      this._idrList.clear(); // pending segments should be discard


      let ps = this._pendingSegments[type];
      ps.splice(0, ps.length);

      if (this._mediaSource.readyState === 'closed') {
        // Parent MediaSource object has been detached from HTMLMediaElement
        continue;
      } // record ranges to be remove from SourceBuffer


      for (let i = 0; i < sb.buffered.length; i++) {
        let start = sb.buffered.start(i);
        let end = sb.buffered.end(i);

        this._pendingRemoveRanges[type].push({
          start,
          end
        });
      } // if sb is not updating, let's remove ranges now!


      if (!sb.updating) {
        this._doRemoveRanges();
      } // Safari 10 may get InvalidStateError in the later appendBuffer() after SourceBuffer.remove() call
      // Internal parser's state may be invalid at this time. Re-append last InitSegment to workaround.
      // Related issue: https://bugs.webkit.org/show_bug.cgi?id=159230


      if (_browser.default.safari) {
        let lastInitSegment = this._lastInitSegments[type];

        if (lastInitSegment) {
          this._pendingSegments[type].push(lastInitSegment);

          if (!sb.updating) {
            this._doAppendSegments();
          }
        }
      }
    }
  }

  endOfStream() {
    let ms = this._mediaSource;
    let sb = this._sourceBuffers;

    if (!ms || ms.readyState !== 'open') {
      if (ms && ms.readyState === 'closed' && this._hasPendingSegments()) {
        // If MediaSource hasn't turned into open state, and there're pending segments
        // Mark pending endOfStream, defer call until all pending segments appended complete
        this._hasPendingEos = true;
      }

      return;
    }

    if (sb.video && sb.video.updating || sb.audio && sb.audio.updating) {
      // If any sourcebuffer is updating, defer endOfStream operation
      // See _onSourceBufferUpdateEnd()
      this._hasPendingEos = true;
    } else {
      this._hasPendingEos = false; // Notify media data loading complete
      // This is helpful for correcting total duration to match last media segment
      // Otherwise MediaElement's ended event may not be triggered

      ms.endOfStream();
    }
  }

  getNearestKeyframe(dts) {
    return this._idrList.getLastSyncPointBeforeDts(dts);
  }

  _needCleanupSourceBuffer() {
    if (!this._config.autoCleanupSourceBuffer) {
      return false;
    }

    let currentTime = this._mediaElement.currentTime;

    for (let type in this._sourceBuffers) {
      let sb = this._sourceBuffers[type];

      if (sb) {
        let buffered = sb.buffered;

        if (buffered.length >= 1) {
          if (currentTime - buffered.start(0) >= this._config.autoCleanupMaxBackwardDuration) {
            return true;
          }
        }
      }
    }

    return false;
  }

  _doCleanupSourceBuffer() {
    let currentTime = this._mediaElement.currentTime;

    for (let type in this._sourceBuffers) {
      let sb = this._sourceBuffers[type];

      if (sb) {
        let buffered = sb.buffered;
        let doRemove = false;

        for (let i = 0; i < buffered.length; i++) {
          let start = buffered.start(i);
          let end = buffered.end(i);

          if (start <= currentTime && currentTime < end + 3) {
            // padding 3 seconds
            if (currentTime - start >= this._config.autoCleanupMaxBackwardDuration) {
              doRemove = true;
              let removeEnd = currentTime - this._config.autoCleanupMinBackwardDuration;

              this._pendingRemoveRanges[type].push({
                start: start,
                end: removeEnd
              });
            }
          } else if (end < currentTime) {
            doRemove = true;

            this._pendingRemoveRanges[type].push({
              start: start,
              end: end
            });
          }
        }

        if (doRemove && !sb.updating) {
          this._doRemoveRanges();
        }
      }
    }
  }

  _updateMediaSourceDuration() {
    let sb = this._sourceBuffers;

    if (this._mediaElement.readyState === 0 || this._mediaSource.readyState !== 'open') {
      return;
    }

    if (sb.video && sb.video.updating || sb.audio && sb.audio.updating) {
      return;
    }

    let current = this._mediaSource.duration;
    let target = this._pendingMediaDuration;

    if (target > 0 && (isNaN(current) || target > current)) {
      _logger.default.v(this.TAG, `Update MediaSource duration from ${current} to ${target}`);

      this._mediaSource.duration = target;
    }

    this._requireSetMediaDuration = false;
    this._pendingMediaDuration = 0;
  }

  _doRemoveRanges() {
    for (let type in this._pendingRemoveRanges) {
      if (!this._sourceBuffers[type] || this._sourceBuffers[type].updating) {
        continue;
      }

      let sb = this._sourceBuffers[type];
      let ranges = this._pendingRemoveRanges[type];

      while (ranges.length && !sb.updating) {
        let range = ranges.shift();
        sb.remove(range.start, range.end);
      }
    }
  }

  _doAppendSegments() {
    let pendingSegments = this._pendingSegments;

    for (let type in pendingSegments) {
      if (!this._sourceBuffers[type] || this._sourceBuffers[type].updating) {
        continue;
      }

      if (pendingSegments[type].length > 0) {
        let segment = pendingSegments[type].shift();

        if (segment.timestampOffset) {
          // For MPEG audio stream in MSE, if unbuffered-seeking occurred
          // We need explicitly set timestampOffset to the desired point in timeline for mpeg SourceBuffer.
          let currentOffset = this._sourceBuffers[type].timestampOffset;
          let targetOffset = segment.timestampOffset / 1000; // in seconds

          let delta = Math.abs(currentOffset - targetOffset);

          if (delta > 0.1) {
            // If time delta > 100ms
            _logger.default.v(this.TAG, `Update MPEG audio timestampOffset from ${currentOffset} to ${targetOffset}`);

            this._sourceBuffers[type].timestampOffset = targetOffset;
          }

          delete segment.timestampOffset;
        }

        if (!segment.data || segment.data.byteLength === 0) {
          // Ignore empty buffer
          continue;
        }

        try {
          this._sourceBuffers[type].appendBuffer(segment.data);

          this._isBufferFull = false;

          if (type === 'video' && segment.hasOwnProperty('info')) {
            this._idrList.appendArray(segment.info.syncPoints);
          }
        } catch (error) {
          this._pendingSegments[type].unshift(segment);

          if (error.code === 22) {
            // QuotaExceededError

            /* Notice that FireFox may not throw QuotaExceededError if SourceBuffer is full
             * Currently we can only do lazy-load to avoid SourceBuffer become scattered.
             * SourceBuffer eviction policy may be changed in future version of FireFox.
             *
             * Related issues:
             * https://bugzilla.mozilla.org/show_bug.cgi?id=1279885
             * https://bugzilla.mozilla.org/show_bug.cgi?id=1280023
             */
            // report buffer full, abort network IO
            if (!this._isBufferFull) {
              this._emitter.emit(_mseEvents.default.BUFFER_FULL);
            }

            this._isBufferFull = true;
          } else {
            _logger.default.e(this.TAG, error.message);

            this._emitter.emit(_mseEvents.default.ERROR, {
              code: error.code,
              msg: error.message
            });
          }
        }
      }
    }
  }

  _onSourceOpen() {
    _logger.default.v(this.TAG, 'MediaSource onSourceOpen');

    this._mediaSource.removeEventListener('sourceopen', this.e.onSourceOpen); // deferred sourcebuffer creation / initialization


    if (this._pendingSourceBufferInit.length > 0) {
      let pendings = this._pendingSourceBufferInit;

      while (pendings.length) {
        let segment = pendings.shift();
        this.appendInitSegment(segment, true);
      }
    } // there may be some pending media segments, append them


    if (this._hasPendingSegments()) {
      this._doAppendSegments();
    }

    this._emitter.emit(_mseEvents.default.SOURCE_OPEN);
  }

  _onSourceEnded() {
    // fired on endOfStream
    _logger.default.v(this.TAG, 'MediaSource onSourceEnded');
  }

  _onSourceClose() {
    // fired on detaching from media element
    _logger.default.v(this.TAG, 'MediaSource onSourceClose');

    if (this._mediaSource && this.e != null) {
      this._mediaSource.removeEventListener('sourceopen', this.e.onSourceOpen);

      this._mediaSource.removeEventListener('sourceended', this.e.onSourceEnded);

      this._mediaSource.removeEventListener('sourceclose', this.e.onSourceClose);
    }
  }

  _hasPendingSegments() {
    let ps = this._pendingSegments;
    return ps.video.length > 0 || ps.audio.length > 0;
  }

  _hasPendingRemoveRanges() {
    let prr = this._pendingRemoveRanges;
    return prr.video.length > 0 || prr.audio.length > 0;
  }

  _onSourceBufferUpdateEnd() {
    if (this._requireSetMediaDuration) {
      this._updateMediaSourceDuration();
    } else if (this._hasPendingRemoveRanges()) {
      this._doRemoveRanges();
    } else if (this._hasPendingSegments()) {
      this._doAppendSegments();
    } else if (this._hasPendingEos) {
      this.endOfStream();
    }

    this._emitter.emit(_mseEvents.default.UPDATE_END);
  }

  _onSourceBufferError(e) {
    _logger.default.e(this.TAG, `SourceBuffer Error: ${e}`); // this error might not always be fatal, just ignore it

  }

}

var _default = MSEController;
exports.default = _default;
},{"events":"node_modules/events/events.js","../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","../utils/browser.js":"node_modules/flv.js/src/utils/browser.js","./mse-events.js":"node_modules/flv.js/src/core/mse-events.js","./media-segment-info.js":"node_modules/flv.js/src/core/media-segment-info.js","../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/player/player-errors.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ErrorDetails = exports.ErrorTypes = void 0;

var _loader = require("../io/loader.js");

var _demuxErrors = _interopRequireDefault(require("../demux/demux-errors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const ErrorTypes = {
  NETWORK_ERROR: 'NetworkError',
  MEDIA_ERROR: 'MediaError',
  OTHER_ERROR: 'OtherError'
};
exports.ErrorTypes = ErrorTypes;
const ErrorDetails = {
  NETWORK_EXCEPTION: _loader.LoaderErrors.EXCEPTION,
  NETWORK_STATUS_CODE_INVALID: _loader.LoaderErrors.HTTP_STATUS_CODE_INVALID,
  NETWORK_TIMEOUT: _loader.LoaderErrors.CONNECTING_TIMEOUT,
  NETWORK_UNRECOVERABLE_EARLY_EOF: _loader.LoaderErrors.UNRECOVERABLE_EARLY_EOF,
  MEDIA_MSE_ERROR: 'MediaMSEError',
  MEDIA_FORMAT_ERROR: _demuxErrors.default.FORMAT_ERROR,
  MEDIA_FORMAT_UNSUPPORTED: _demuxErrors.default.FORMAT_UNSUPPORTED,
  MEDIA_CODEC_UNSUPPORTED: _demuxErrors.default.CODEC_UNSUPPORTED
};
exports.ErrorDetails = ErrorDetails;
},{"../io/loader.js":"node_modules/flv.js/src/io/loader.js","../demux/demux-errors.js":"node_modules/flv.js/src/demux/demux-errors.js"}],"node_modules/flv.js/src/player/flv-player.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _events = _interopRequireDefault(require("events"));

var _logger = _interopRequireDefault(require("../utils/logger.js"));

var _browser = _interopRequireDefault(require("../utils/browser.js"));

var _playerEvents = _interopRequireDefault(require("./player-events.js"));

var _transmuxer = _interopRequireDefault(require("../core/transmuxer.js"));

var _transmuxingEvents = _interopRequireDefault(require("../core/transmuxing-events.js"));

var _mseController = _interopRequireDefault(require("../core/mse-controller.js"));

var _mseEvents = _interopRequireDefault(require("../core/mse-events.js"));

var _playerErrors = require("./player-errors.js");

var _config = require("../config.js");

var _exception = require("../utils/exception.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class FlvPlayer {
  constructor(mediaDataSource, config) {
    this.TAG = 'FlvPlayer';
    this._type = 'FlvPlayer';
    this._emitter = new _events.default();
    this._config = (0, _config.createDefaultConfig)();

    if (typeof config === 'object') {
      Object.assign(this._config, config);
    }

    if (mediaDataSource.type.toLowerCase() !== 'flv') {
      throw new _exception.InvalidArgumentException('FlvPlayer requires an flv MediaDataSource input!');
    }

    if (mediaDataSource.isLive === true) {
      this._config.isLive = true;
    }

    this.e = {
      onvLoadedMetadata: this._onvLoadedMetadata.bind(this),
      onvSeeking: this._onvSeeking.bind(this),
      onvCanPlay: this._onvCanPlay.bind(this),
      onvStalled: this._onvStalled.bind(this),
      onvProgress: this._onvProgress.bind(this)
    };

    if (self.performance && self.performance.now) {
      this._now = self.performance.now.bind(self.performance);
    } else {
      this._now = Date.now;
    }

    this._pendingSeekTime = null; // in seconds

    this._requestSetTime = false;
    this._seekpointRecord = null;
    this._progressChecker = null;
    this._mediaDataSource = mediaDataSource;
    this._mediaElement = null;
    this._msectl = null;
    this._transmuxer = null;
    this._mseSourceOpened = false;
    this._hasPendingLoad = false;
    this._receivedCanPlay = false;
    this._mediaInfo = null;
    this._statisticsInfo = null;
    let chromeNeedIDRFix = _browser.default.chrome && (_browser.default.version.major < 50 || _browser.default.version.major === 50 && _browser.default.version.build < 2661);
    this._alwaysSeekKeyframe = chromeNeedIDRFix || _browser.default.msedge || _browser.default.msie ? true : false;

    if (this._alwaysSeekKeyframe) {
      this._config.accurateSeek = false;
    }
  }

  destroy() {
    if (this._progressChecker != null) {
      window.clearInterval(this._progressChecker);
      this._progressChecker = null;
    }

    if (this._transmuxer) {
      this.unload();
    }

    if (this._mediaElement) {
      this.detachMediaElement();
    }

    this.e = null;
    this._mediaDataSource = null;

    this._emitter.removeAllListeners();

    this._emitter = null;
  }

  on(event, listener) {
    if (event === _playerEvents.default.MEDIA_INFO) {
      if (this._mediaInfo != null) {
        Promise.resolve().then(() => {
          this._emitter.emit(_playerEvents.default.MEDIA_INFO, this.mediaInfo);
        });
      }
    } else if (event === _playerEvents.default.STATISTICS_INFO) {
      if (this._statisticsInfo != null) {
        Promise.resolve().then(() => {
          this._emitter.emit(_playerEvents.default.STATISTICS_INFO, this.statisticsInfo);
        });
      }
    }

    this._emitter.addListener(event, listener);
  }

  off(event, listener) {
    this._emitter.removeListener(event, listener);
  }

  attachMediaElement(mediaElement) {
    this._mediaElement = mediaElement;
    mediaElement.addEventListener('loadedmetadata', this.e.onvLoadedMetadata);
    mediaElement.addEventListener('seeking', this.e.onvSeeking);
    mediaElement.addEventListener('canplay', this.e.onvCanPlay);
    mediaElement.addEventListener('stalled', this.e.onvStalled);
    mediaElement.addEventListener('progress', this.e.onvProgress);
    this._msectl = new _mseController.default(this._config);

    this._msectl.on(_mseEvents.default.UPDATE_END, this._onmseUpdateEnd.bind(this));

    this._msectl.on(_mseEvents.default.BUFFER_FULL, this._onmseBufferFull.bind(this));

    this._msectl.on(_mseEvents.default.SOURCE_OPEN, () => {
      this._mseSourceOpened = true;

      if (this._hasPendingLoad) {
        this._hasPendingLoad = false;
        this.load();
      }
    });

    this._msectl.on(_mseEvents.default.ERROR, info => {
      this._emitter.emit(_playerEvents.default.ERROR, _playerErrors.ErrorTypes.MEDIA_ERROR, _playerErrors.ErrorDetails.MEDIA_MSE_ERROR, info);
    });

    this._msectl.attachMediaElement(mediaElement);

    if (this._pendingSeekTime != null) {
      try {
        mediaElement.currentTime = this._pendingSeekTime;
        this._pendingSeekTime = null;
      } catch (e) {// IE11 may throw InvalidStateError if readyState === 0
        // We can defer set currentTime operation after loadedmetadata
      }
    }
  }

  detachMediaElement() {
    if (this._mediaElement) {
      this._msectl.detachMediaElement();

      this._mediaElement.removeEventListener('loadedmetadata', this.e.onvLoadedMetadata);

      this._mediaElement.removeEventListener('seeking', this.e.onvSeeking);

      this._mediaElement.removeEventListener('canplay', this.e.onvCanPlay);

      this._mediaElement.removeEventListener('stalled', this.e.onvStalled);

      this._mediaElement.removeEventListener('progress', this.e.onvProgress);

      this._mediaElement = null;
    }

    if (this._msectl) {
      this._msectl.destroy();

      this._msectl = null;
    }
  }

  load() {
    if (!this._mediaElement) {
      throw new _exception.IllegalStateException('HTMLMediaElement must be attached before load()!');
    }

    if (this._transmuxer) {
      throw new _exception.IllegalStateException('FlvPlayer.load() has been called, please call unload() first!');
    }

    if (this._hasPendingLoad) {
      return;
    }

    if (this._config.deferLoadAfterSourceOpen && this._mseSourceOpened === false) {
      this._hasPendingLoad = true;
      return;
    }

    if (this._mediaElement.readyState > 0) {
      this._requestSetTime = true; // IE11 may throw InvalidStateError if readyState === 0

      this._mediaElement.currentTime = 0;
    }

    this._transmuxer = new _transmuxer.default(this._mediaDataSource, this._config);

    this._transmuxer.on(_transmuxingEvents.default.INIT_SEGMENT, (type, is) => {
      this._msectl.appendInitSegment(is);
    });

    this._transmuxer.on(_transmuxingEvents.default.MEDIA_SEGMENT, (type, ms) => {
      this._msectl.appendMediaSegment(ms); // lazyLoad check


      if (this._config.lazyLoad && !this._config.isLive) {
        let currentTime = this._mediaElement.currentTime;

        if (ms.info.endDts >= (currentTime + this._config.lazyLoadMaxDuration) * 1000) {
          if (this._progressChecker == null) {
            _logger.default.v(this.TAG, 'Maximum buffering duration exceeded, suspend transmuxing task');

            this._suspendTransmuxer();
          }
        }
      }
    });

    this._transmuxer.on(_transmuxingEvents.default.LOADING_COMPLETE, () => {
      this._msectl.endOfStream();

      this._emitter.emit(_playerEvents.default.LOADING_COMPLETE);
    });

    this._transmuxer.on(_transmuxingEvents.default.RECOVERED_EARLY_EOF, () => {
      this._emitter.emit(_playerEvents.default.RECOVERED_EARLY_EOF);
    });

    this._transmuxer.on(_transmuxingEvents.default.IO_ERROR, (detail, info) => {
      this._emitter.emit(_playerEvents.default.ERROR, _playerErrors.ErrorTypes.NETWORK_ERROR, detail, info);
    });

    this._transmuxer.on(_transmuxingEvents.default.DEMUX_ERROR, (detail, info) => {
      this._emitter.emit(_playerEvents.default.ERROR, _playerErrors.ErrorTypes.MEDIA_ERROR, detail, {
        code: -1,
        msg: info
      });
    });

    this._transmuxer.on(_transmuxingEvents.default.MEDIA_INFO, mediaInfo => {
      this._mediaInfo = mediaInfo;

      this._emitter.emit(_playerEvents.default.MEDIA_INFO, Object.assign({}, mediaInfo));
    });

    this._transmuxer.on(_transmuxingEvents.default.METADATA_ARRIVED, metadata => {
      this._emitter.emit(_playerEvents.default.METADATA_ARRIVED, metadata);
    });

    this._transmuxer.on(_transmuxingEvents.default.SCRIPTDATA_ARRIVED, data => {
      this._emitter.emit(_playerEvents.default.SCRIPTDATA_ARRIVED, data);
    });

    this._transmuxer.on(_transmuxingEvents.default.STATISTICS_INFO, statInfo => {
      this._statisticsInfo = this._fillStatisticsInfo(statInfo);

      this._emitter.emit(_playerEvents.default.STATISTICS_INFO, Object.assign({}, this._statisticsInfo));
    });

    this._transmuxer.on(_transmuxingEvents.default.RECOMMEND_SEEKPOINT, milliseconds => {
      if (this._mediaElement && !this._config.accurateSeek) {
        this._requestSetTime = true;
        this._mediaElement.currentTime = milliseconds / 1000;
      }
    });

    this._transmuxer.open();
  }

  unload() {
    if (this._mediaElement) {
      this._mediaElement.pause();
    }

    if (this._msectl) {
      this._msectl.seek(0);
    }

    if (this._transmuxer) {
      this._transmuxer.close();

      this._transmuxer.destroy();

      this._transmuxer = null;
    }
  }

  play() {
    return this._mediaElement.play();
  }

  pause() {
    this._mediaElement.pause();
  }

  get type() {
    return this._type;
  }

  get buffered() {
    return this._mediaElement.buffered;
  }

  get duration() {
    return this._mediaElement.duration;
  }

  get volume() {
    return this._mediaElement.volume;
  }

  set volume(value) {
    this._mediaElement.volume = value;
  }

  get muted() {
    return this._mediaElement.muted;
  }

  set muted(muted) {
    this._mediaElement.muted = muted;
  }

  get currentTime() {
    if (this._mediaElement) {
      return this._mediaElement.currentTime;
    }

    return 0;
  }

  set currentTime(seconds) {
    if (this._mediaElement) {
      this._internalSeek(seconds);
    } else {
      this._pendingSeekTime = seconds;
    }
  }

  get mediaInfo() {
    return Object.assign({}, this._mediaInfo);
  }

  get statisticsInfo() {
    if (this._statisticsInfo == null) {
      this._statisticsInfo = {};
    }

    this._statisticsInfo = this._fillStatisticsInfo(this._statisticsInfo);
    return Object.assign({}, this._statisticsInfo);
  }

  _fillStatisticsInfo(statInfo) {
    statInfo.playerType = this._type;

    if (!(this._mediaElement instanceof HTMLVideoElement)) {
      return statInfo;
    }

    let hasQualityInfo = true;
    let decoded = 0;
    let dropped = 0;

    if (this._mediaElement.getVideoPlaybackQuality) {
      let quality = this._mediaElement.getVideoPlaybackQuality();

      decoded = quality.totalVideoFrames;
      dropped = quality.droppedVideoFrames;
    } else if (this._mediaElement.webkitDecodedFrameCount != undefined) {
      decoded = this._mediaElement.webkitDecodedFrameCount;
      dropped = this._mediaElement.webkitDroppedFrameCount;
    } else {
      hasQualityInfo = false;
    }

    if (hasQualityInfo) {
      statInfo.decodedFrames = decoded;
      statInfo.droppedFrames = dropped;
    }

    return statInfo;
  }

  _onmseUpdateEnd() {
    if (!this._config.lazyLoad || this._config.isLive) {
      return;
    }

    let buffered = this._mediaElement.buffered;
    let currentTime = this._mediaElement.currentTime;
    let currentRangeStart = 0;
    let currentRangeEnd = 0;

    for (let i = 0; i < buffered.length; i++) {
      let start = buffered.start(i);
      let end = buffered.end(i);

      if (start <= currentTime && currentTime < end) {
        currentRangeStart = start;
        currentRangeEnd = end;
        break;
      }
    }

    if (currentRangeEnd >= currentTime + this._config.lazyLoadMaxDuration && this._progressChecker == null) {
      _logger.default.v(this.TAG, 'Maximum buffering duration exceeded, suspend transmuxing task');

      this._suspendTransmuxer();
    }
  }

  _onmseBufferFull() {
    _logger.default.v(this.TAG, 'MSE SourceBuffer is full, suspend transmuxing task');

    if (this._progressChecker == null) {
      this._suspendTransmuxer();
    }
  }

  _suspendTransmuxer() {
    if (this._transmuxer) {
      this._transmuxer.pause();

      if (this._progressChecker == null) {
        this._progressChecker = window.setInterval(this._checkProgressAndResume.bind(this), 1000);
      }
    }
  }

  _checkProgressAndResume() {
    let currentTime = this._mediaElement.currentTime;
    let buffered = this._mediaElement.buffered;
    let needResume = false;

    for (let i = 0; i < buffered.length; i++) {
      let from = buffered.start(i);
      let to = buffered.end(i);

      if (currentTime >= from && currentTime < to) {
        if (currentTime >= to - this._config.lazyLoadRecoverDuration) {
          needResume = true;
        }

        break;
      }
    }

    if (needResume) {
      window.clearInterval(this._progressChecker);
      this._progressChecker = null;

      if (needResume) {
        _logger.default.v(this.TAG, 'Continue loading from paused position');

        this._transmuxer.resume();
      }
    }
  }

  _isTimepointBuffered(seconds) {
    let buffered = this._mediaElement.buffered;

    for (let i = 0; i < buffered.length; i++) {
      let from = buffered.start(i);
      let to = buffered.end(i);

      if (seconds >= from && seconds < to) {
        return true;
      }
    }

    return false;
  }

  _internalSeek(seconds) {
    let directSeek = this._isTimepointBuffered(seconds);

    let directSeekBegin = false;
    let directSeekBeginTime = 0;

    if (seconds < 1.0 && this._mediaElement.buffered.length > 0) {
      let videoBeginTime = this._mediaElement.buffered.start(0);

      if (videoBeginTime < 1.0 && seconds < videoBeginTime || _browser.default.safari) {
        directSeekBegin = true; // also workaround for Safari: Seek to 0 may cause video stuck, use 0.1 to avoid

        directSeekBeginTime = _browser.default.safari ? 0.1 : videoBeginTime;
      }
    }

    if (directSeekBegin) {
      // seek to video begin, set currentTime directly if beginPTS buffered
      this._requestSetTime = true;
      this._mediaElement.currentTime = directSeekBeginTime;
    } else if (directSeek) {
      // buffered position
      if (!this._alwaysSeekKeyframe) {
        this._requestSetTime = true;
        this._mediaElement.currentTime = seconds;
      } else {
        let idr = this._msectl.getNearestKeyframe(Math.floor(seconds * 1000));

        this._requestSetTime = true;

        if (idr != null) {
          this._mediaElement.currentTime = idr.dts / 1000;
        } else {
          this._mediaElement.currentTime = seconds;
        }
      }

      if (this._progressChecker != null) {
        this._checkProgressAndResume();
      }
    } else {
      if (this._progressChecker != null) {
        window.clearInterval(this._progressChecker);
        this._progressChecker = null;
      }

      this._msectl.seek(seconds);

      this._transmuxer.seek(Math.floor(seconds * 1000)); // in milliseconds
      // no need to set mediaElement.currentTime if non-accurateSeek,
      // just wait for the recommend_seekpoint callback


      if (this._config.accurateSeek) {
        this._requestSetTime = true;
        this._mediaElement.currentTime = seconds;
      }
    }
  }

  _checkAndApplyUnbufferedSeekpoint() {
    if (this._seekpointRecord) {
      if (this._seekpointRecord.recordTime <= this._now() - 100) {
        let target = this._mediaElement.currentTime;
        this._seekpointRecord = null;

        if (!this._isTimepointBuffered(target)) {
          if (this._progressChecker != null) {
            window.clearTimeout(this._progressChecker);
            this._progressChecker = null;
          } // .currentTime is consists with .buffered timestamp
          // Chrome/Edge use DTS, while FireFox/Safari use PTS


          this._msectl.seek(target);

          this._transmuxer.seek(Math.floor(target * 1000)); // set currentTime if accurateSeek, or wait for recommend_seekpoint callback


          if (this._config.accurateSeek) {
            this._requestSetTime = true;
            this._mediaElement.currentTime = target;
          }
        }
      } else {
        window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50);
      }
    }
  }

  _checkAndResumeStuckPlayback(stalled) {
    let media = this._mediaElement;

    if (stalled || !this._receivedCanPlay || media.readyState < 2) {
      // HAVE_CURRENT_DATA
      let buffered = media.buffered;

      if (buffered.length > 0 && media.currentTime < buffered.start(0)) {
        _logger.default.w(this.TAG, `Playback seems stuck at ${media.currentTime}, seek to ${buffered.start(0)}`);

        this._requestSetTime = true;
        this._mediaElement.currentTime = buffered.start(0);

        this._mediaElement.removeEventListener('progress', this.e.onvProgress);
      }
    } else {
      // Playback didn't stuck, remove progress event listener
      this._mediaElement.removeEventListener('progress', this.e.onvProgress);
    }
  }

  _onvLoadedMetadata(e) {
    if (this._pendingSeekTime != null) {
      this._mediaElement.currentTime = this._pendingSeekTime;
      this._pendingSeekTime = null;
    }
  }

  _onvSeeking(e) {
    // handle seeking request from browser's progress bar
    let target = this._mediaElement.currentTime;
    let buffered = this._mediaElement.buffered;

    if (this._requestSetTime) {
      this._requestSetTime = false;
      return;
    }

    if (target < 1.0 && buffered.length > 0) {
      // seek to video begin, set currentTime directly if beginPTS buffered
      let videoBeginTime = buffered.start(0);

      if (videoBeginTime < 1.0 && target < videoBeginTime || _browser.default.safari) {
        this._requestSetTime = true; // also workaround for Safari: Seek to 0 may cause video stuck, use 0.1 to avoid

        this._mediaElement.currentTime = _browser.default.safari ? 0.1 : videoBeginTime;
        return;
      }
    }

    if (this._isTimepointBuffered(target)) {
      if (this._alwaysSeekKeyframe) {
        let idr = this._msectl.getNearestKeyframe(Math.floor(target * 1000));

        if (idr != null) {
          this._requestSetTime = true;
          this._mediaElement.currentTime = idr.dts / 1000;
        }
      }

      if (this._progressChecker != null) {
        this._checkProgressAndResume();
      }

      return;
    }

    this._seekpointRecord = {
      seekPoint: target,
      recordTime: this._now()
    };
    window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50);
  }

  _onvCanPlay(e) {
    this._receivedCanPlay = true;

    this._mediaElement.removeEventListener('canplay', this.e.onvCanPlay);
  }

  _onvStalled(e) {
    this._checkAndResumeStuckPlayback(true);
  }

  _onvProgress(e) {
    this._checkAndResumeStuckPlayback();
  }

}

var _default = FlvPlayer;
exports.default = _default;
},{"events":"node_modules/events/events.js","../utils/logger.js":"node_modules/flv.js/src/utils/logger.js","../utils/browser.js":"node_modules/flv.js/src/utils/browser.js","./player-events.js":"node_modules/flv.js/src/player/player-events.js","../core/transmuxer.js":"node_modules/flv.js/src/core/transmuxer.js","../core/transmuxing-events.js":"node_modules/flv.js/src/core/transmuxing-events.js","../core/mse-controller.js":"node_modules/flv.js/src/core/mse-controller.js","../core/mse-events.js":"node_modules/flv.js/src/core/mse-events.js","./player-errors.js":"node_modules/flv.js/src/player/player-errors.js","../config.js":"node_modules/flv.js/src/config.js","../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/player/native-player.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _events = _interopRequireDefault(require("events"));

var _playerEvents = _interopRequireDefault(require("./player-events.js"));

var _config = require("../config.js");

var _exception = require("../utils/exception.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Player wrapper for browser's native player (HTMLVideoElement) without MediaSource src. 
class NativePlayer {
  constructor(mediaDataSource, config) {
    this.TAG = 'NativePlayer';
    this._type = 'NativePlayer';
    this._emitter = new _events.default();
    this._config = (0, _config.createDefaultConfig)();

    if (typeof config === 'object') {
      Object.assign(this._config, config);
    }

    if (mediaDataSource.type.toLowerCase() === 'flv') {
      throw new _exception.InvalidArgumentException('NativePlayer does\'t support flv MediaDataSource input!');
    }

    if (mediaDataSource.hasOwnProperty('segments')) {
      throw new _exception.InvalidArgumentException(`NativePlayer(${mediaDataSource.type}) doesn't support multipart playback!`);
    }

    this.e = {
      onvLoadedMetadata: this._onvLoadedMetadata.bind(this)
    };
    this._pendingSeekTime = null;
    this._statisticsReporter = null;
    this._mediaDataSource = mediaDataSource;
    this._mediaElement = null;
  }

  destroy() {
    if (this._mediaElement) {
      this.unload();
      this.detachMediaElement();
    }

    this.e = null;
    this._mediaDataSource = null;

    this._emitter.removeAllListeners();

    this._emitter = null;
  }

  on(event, listener) {
    if (event === _playerEvents.default.MEDIA_INFO) {
      if (this._mediaElement != null && this._mediaElement.readyState !== 0) {
        // HAVE_NOTHING
        Promise.resolve().then(() => {
          this._emitter.emit(_playerEvents.default.MEDIA_INFO, this.mediaInfo);
        });
      }
    } else if (event === _playerEvents.default.STATISTICS_INFO) {
      if (this._mediaElement != null && this._mediaElement.readyState !== 0) {
        Promise.resolve().then(() => {
          this._emitter.emit(_playerEvents.default.STATISTICS_INFO, this.statisticsInfo);
        });
      }
    }

    this._emitter.addListener(event, listener);
  }

  off(event, listener) {
    this._emitter.removeListener(event, listener);
  }

  attachMediaElement(mediaElement) {
    this._mediaElement = mediaElement;
    mediaElement.addEventListener('loadedmetadata', this.e.onvLoadedMetadata);

    if (this._pendingSeekTime != null) {
      try {
        mediaElement.currentTime = this._pendingSeekTime;
        this._pendingSeekTime = null;
      } catch (e) {// IE11 may throw InvalidStateError if readyState === 0
        // Defer set currentTime operation after loadedmetadata
      }
    }
  }

  detachMediaElement() {
    if (this._mediaElement) {
      this._mediaElement.src = '';

      this._mediaElement.removeAttribute('src');

      this._mediaElement.removeEventListener('loadedmetadata', this.e.onvLoadedMetadata);

      this._mediaElement = null;
    }

    if (this._statisticsReporter != null) {
      window.clearInterval(this._statisticsReporter);
      this._statisticsReporter = null;
    }
  }

  load() {
    if (!this._mediaElement) {
      throw new _exception.IllegalStateException('HTMLMediaElement must be attached before load()!');
    }

    this._mediaElement.src = this._mediaDataSource.url;

    if (this._mediaElement.readyState > 0) {
      this._mediaElement.currentTime = 0;
    }

    this._mediaElement.preload = 'auto';

    this._mediaElement.load();

    this._statisticsReporter = window.setInterval(this._reportStatisticsInfo.bind(this), this._config.statisticsInfoReportInterval);
  }

  unload() {
    if (this._mediaElement) {
      this._mediaElement.src = '';

      this._mediaElement.removeAttribute('src');
    }

    if (this._statisticsReporter != null) {
      window.clearInterval(this._statisticsReporter);
      this._statisticsReporter = null;
    }
  }

  play() {
    return this._mediaElement.play();
  }

  pause() {
    this._mediaElement.pause();
  }

  get type() {
    return this._type;
  }

  get buffered() {
    return this._mediaElement.buffered;
  }

  get duration() {
    return this._mediaElement.duration;
  }

  get volume() {
    return this._mediaElement.volume;
  }

  set volume(value) {
    this._mediaElement.volume = value;
  }

  get muted() {
    return this._mediaElement.muted;
  }

  set muted(muted) {
    this._mediaElement.muted = muted;
  }

  get currentTime() {
    if (this._mediaElement) {
      return this._mediaElement.currentTime;
    }

    return 0;
  }

  set currentTime(seconds) {
    if (this._mediaElement) {
      this._mediaElement.currentTime = seconds;
    } else {
      this._pendingSeekTime = seconds;
    }
  }

  get mediaInfo() {
    let mediaPrefix = this._mediaElement instanceof HTMLAudioElement ? 'audio/' : 'video/';
    let info = {
      mimeType: mediaPrefix + this._mediaDataSource.type
    };

    if (this._mediaElement) {
      info.duration = Math.floor(this._mediaElement.duration * 1000);

      if (this._mediaElement instanceof HTMLVideoElement) {
        info.width = this._mediaElement.videoWidth;
        info.height = this._mediaElement.videoHeight;
      }
    }

    return info;
  }

  get statisticsInfo() {
    let info = {
      playerType: this._type,
      url: this._mediaDataSource.url
    };

    if (!(this._mediaElement instanceof HTMLVideoElement)) {
      return info;
    }

    let hasQualityInfo = true;
    let decoded = 0;
    let dropped = 0;

    if (this._mediaElement.getVideoPlaybackQuality) {
      let quality = this._mediaElement.getVideoPlaybackQuality();

      decoded = quality.totalVideoFrames;
      dropped = quality.droppedVideoFrames;
    } else if (this._mediaElement.webkitDecodedFrameCount != undefined) {
      decoded = this._mediaElement.webkitDecodedFrameCount;
      dropped = this._mediaElement.webkitDroppedFrameCount;
    } else {
      hasQualityInfo = false;
    }

    if (hasQualityInfo) {
      info.decodedFrames = decoded;
      info.droppedFrames = dropped;
    }

    return info;
  }

  _onvLoadedMetadata(e) {
    if (this._pendingSeekTime != null) {
      this._mediaElement.currentTime = this._pendingSeekTime;
      this._pendingSeekTime = null;
    }

    this._emitter.emit(_playerEvents.default.MEDIA_INFO, this.mediaInfo);
  }

  _reportStatisticsInfo() {
    this._emitter.emit(_playerEvents.default.STATISTICS_INFO, this.statisticsInfo);
  }

}

var _default = NativePlayer;
exports.default = _default;
},{"events":"node_modules/events/events.js","./player-events.js":"node_modules/flv.js/src/player/player-events.js","../config.js":"node_modules/flv.js/src/config.js","../utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"node_modules/flv.js/src/flv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _polyfill = _interopRequireDefault(require("./utils/polyfill.js"));

var _features = _interopRequireDefault(require("./core/features.js"));

var _loader = require("./io/loader.js");

var _flvPlayer = _interopRequireDefault(require("./player/flv-player.js"));

var _nativePlayer = _interopRequireDefault(require("./player/native-player.js"));

var _playerEvents = _interopRequireDefault(require("./player/player-events.js"));

var _playerErrors = require("./player/player-errors.js");

var _loggingControl = _interopRequireDefault(require("./utils/logging-control.js"));

var _exception = require("./utils/exception.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// here are all the interfaces
// install polyfills
_polyfill.default.install(); // factory method


function createPlayer(mediaDataSource, optionalConfig) {
  let mds = mediaDataSource;

  if (mds == null || typeof mds !== 'object') {
    throw new _exception.InvalidArgumentException('MediaDataSource must be an javascript object!');
  }

  if (!mds.hasOwnProperty('type')) {
    throw new _exception.InvalidArgumentException('MediaDataSource must has type field to indicate video file type!');
  }

  switch (mds.type) {
    case 'flv':
      return new _flvPlayer.default(mds, optionalConfig);

    default:
      return new _nativePlayer.default(mds, optionalConfig);
  }
} // feature detection


function isSupported() {
  return _features.default.supportMSEH264Playback();
}

function getFeatureList() {
  return _features.default.getFeatureList();
} // interfaces


let flvjs = {};
flvjs.createPlayer = createPlayer;
flvjs.isSupported = isSupported;
flvjs.getFeatureList = getFeatureList;
flvjs.BaseLoader = _loader.BaseLoader;
flvjs.LoaderStatus = _loader.LoaderStatus;
flvjs.LoaderErrors = _loader.LoaderErrors;
flvjs.Events = _playerEvents.default;
flvjs.ErrorTypes = _playerErrors.ErrorTypes;
flvjs.ErrorDetails = _playerErrors.ErrorDetails;
flvjs.FlvPlayer = _flvPlayer.default;
flvjs.NativePlayer = _nativePlayer.default;
flvjs.LoggingControl = _loggingControl.default;
Object.defineProperty(flvjs, 'version', {
  enumerable: true,
  get: function () {
    // replaced by browserify-versionify transform
    return '__VERSION__';
  }
});
var _default = flvjs;
exports.default = _default;
},{"./utils/polyfill.js":"node_modules/flv.js/src/utils/polyfill.js","./core/features.js":"node_modules/flv.js/src/core/features.js","./io/loader.js":"node_modules/flv.js/src/io/loader.js","./player/flv-player.js":"node_modules/flv.js/src/player/flv-player.js","./player/native-player.js":"node_modules/flv.js/src/player/native-player.js","./player/player-events.js":"node_modules/flv.js/src/player/player-events.js","./player/player-errors.js":"node_modules/flv.js/src/player/player-errors.js","./utils/logging-control.js":"node_modules/flv.js/src/utils/logging-control.js","./utils/exception.js":"node_modules/flv.js/src/utils/exception.js"}],"src/flv-player.vue":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _flv = _interopRequireDefault(require("flv.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//

/* eslint-disable */
var _default = {
  name: 'flv-player',
  props: {
    mediaDataSource: {
      type: Object,
      required: true
    },
    config: {
      type: Object,
      required: false
    },
    autoplay: {
      type: Boolean,
      required: false,
      default: true
    },
    poster: {
      type: String,
      required: false
    }
  },
  data: function data() {
    return {
      isSupported: true,
      flvPlayer: {},
      state: {
        load: false
      }
    };
  },
  // computed: {},
  // watch: {},
  // beforeCreate: function () {},
  created: function created() {
    this.isSupported = _flv.default.isSupported(); //console.log(this.mediaDataSource)
    //console.log(this.config)

    this.flvPlayer = _flv.default.createPlayer(this.mediaDataSource, this.config);
  },
  // beforeMount: function () {},
  mounted: function mounted() {
    this.flvPlayer.attachMediaElement(this.$el);

    if (this.autoplay) {
      this.play();
    }
  },
  // beforeUpdate: function () {},
  // updated: function () {},
  // beforeDestroy: function () {},
  // destroyed: function () {},
  methods: {
    constructor: function constructor(mediaDataSource, config) {
      this.flvPlayer.constructor(mediaDataSource, config);
    },
    destroy: function destroy() {
      this.flvPlayer.destroy();
    },
    on: function on(event, listener) {
      this.flvPlayer.on(event, listener);
    },
    off: function off(event, listener) {
      this.flvPlayer.off(event, listener);
    },
    load: function load() {
      this.flvPlayer.load();
      this.state.load = true;

      if (this.autoplay) {
        this.play();
      }
    },
    unload: function unload() {
      this.flvPlayer.unload();
      this.state.load = false;
    },
    play: function play() {
      this.state.load || this.load();
      this.flvPlayer.play();
    },
    pause: function pause() {
      this.flvPlayer.pause();
    },
    refresh: function refresh() {
      this.pause();
      this.unload();
      this.play();
    }
  }
};
exports.default = _default;
        var $202aa8 = exports.default || module.exports;
      
      if (typeof $202aa8 === 'function') {
        $202aa8 = $202aa8.options;
      }
    
        /* template */
        Object.assign($202aa8, (function () {
          var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("video", { staticClass: "flv-player", attrs: { controls: "" } })
}
var staticRenderFns = []
render._withStripped = true

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: "data-v-202aa8",
            functional: undefined
          };
        })());
      
    /* hot reload */
    (function () {
      if (module.hot) {
        var api = require('vue-hot-reload-api');
        api.install(require('vue'));
        if (api.compatible) {
          module.hot.accept();
          if (!module.hot.data) {
            api.createRecord('$202aa8', $202aa8);
          } else {
            api.reload('$202aa8', $202aa8);
          }
        }

        
        var reloadCSS = require('_css_loader');
        module.hot.dispose(reloadCSS);
        module.hot.accept(reloadCSS);
      
      }
    })();
},{"flv.js":"node_modules/flv.js/src/flv.js","_css_loader":"node_modules/parcel-bundler/src/builtins/css-loader.js","vue-hot-reload-api":"node_modules/vue-hot-reload-api/dist/index.js","vue":"node_modules/vue/dist/vue.runtime.esm.js"}],"src/Preview.vue":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _flvPlayer = _interopRequireDefault(require("./flv-player"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = {
  name: 'preview',
  components: {
    flvPlayer: _flvPlayer.default
  },
  mounted: function mounted() {//this.$refs.fp.refresh()
  },
  props: ['channel_name', 'listing_id'],
  methods: {
    refresh: function refresh() {
      this.$refs.fp.refresh();
    },
    pause: function pause() {
      this.$refs.fp.pause();
    },
    play: function play() {
      //this.playerOptions.sources.push({ type: "video/x-flv", src: this.preview_url })
      //console.log(this.preview_url)
      //this.$refs.fp.play()
      this.show = true;
    },
    previewUrl: function previewUrl() {
      var url = "/channels/" + encodeURI(this.channel_name) + "/content/" + this.listing_id + "/preview"; //console.log(url)

      return url;
    },
    toggleShow: function toggleShow() {
      this.show = !this.show;
    },
    // listen event
    onPlayerPlay: function onPlayerPlay(player) {// console.log('player play!', player)
    },
    onPlayerPause: function onPlayerPause(player) {// console.log('player pause!', player)
    },
    // ...player event
    // or listen state event
    playerStateChanged: function playerStateChanged(playerCurrentState) {// console.log('player current update state', playerCurrentState)
    },
    // player is ready
    playerReadied: function playerReadied(player) {
      console.log('the player is readied', player); // you can use it to do something...
      // player.[methods]
    }
  },
  data: function data() {
    return {
      preview_url: "",
      show: false,
      autoplay: true,
      techOrder: ['flash'],
      playerOptions: {
        sources: []
      }
    };
  }
};
exports.default = _default;
        var $35b975 = exports.default || module.exports;
      
      if (typeof $35b975 === 'function') {
        $35b975 = $35b975.options;
      }
    
        /* template */
        Object.assign($35b975, (function () {
          var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "span",
    [
      _c(
        "md-dialog",
        {
          attrs: { "md-active": _vm.show },
          on: {
            "update:mdActive": function($event) {
              _vm.show = $event
            },
            "update:md-active": function($event) {
              _vm.show = $event
            }
          }
        },
        [
          _c("md-dialog-title", [_vm._v("Preview")]),
          _vm._v(" "),
          _c(
            "md-dialog-actions",
            [
              _c(
                "md-button",
                { staticClass: "md-primary", on: { click: _vm.toggleShow } },
                [_vm._v("Close")]
              )
            ],
            1
          ),
          _vm._v(" "),
          _c("flv-player", {
            ref: "fp",
            attrs: {
              mediaDataSource: {
                isLive: true,
                type: "flv",
                url: this.previewUrl()
              },
              config: { lazyLoadMaxDuration: 5 }
            }
          })
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "md-button",
        {
          staticClass: "md-icon-button md-dense md-raised",
          on: { click: _vm.play }
        },
        [_c("md-icon", [_vm._v("play_circle_outline")])],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: "data-v-35b975",
            functional: undefined
          };
        })());
      
    /* hot reload */
    (function () {
      if (module.hot) {
        var api = require('vue-hot-reload-api');
        api.install(require('vue'));
        if (api.compatible) {
          module.hot.accept();
          if (!module.hot.data) {
            api.createRecord('$35b975', $35b975);
          } else {
            api.reload('$35b975', $35b975);
          }
        }

        
        var reloadCSS = require('_css_loader');
        module.hot.dispose(reloadCSS);
        module.hot.accept(reloadCSS);
      
      }
    })();
},{"./flv-player":"src/flv-player.vue","_css_loader":"node_modules/parcel-bundler/src/builtins/css-loader.js","vue-hot-reload-api":"node_modules/vue-hot-reload-api/dist/index.js","vue":"node_modules/vue/dist/vue.runtime.esm.js"}],"src/Channel.vue":[function(require,module,exports) {
"use strict";

var _Preview = _interopRequireDefault(require("./Preview.vue"));

var _axios = _interopRequireDefault(require("axios"));

var _moment = _interopRequireDefault(require("moment"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
module.exports = {
  components: {
    Preview: _Preview.default
  },
  props: ['channel', 'search', 'dateNow'],
  mounted: function mounted() {
    this.channelRef = this.channel;
    this.events();
  },
  watch: {
    search: function search(_search) {
      this.events();
    }
  },
  methods: {
    schedule: function schedule(value) {
      this.$emit('schedule', value);
    },
    events: function events() {
      var _this = this;

      var url = this.$buildurl("channels/" + encodeURI(this.channel.id) + "/guide?search=" + this.search);
      var channel = this.channel.id;
      this.show = true;
      this.$nextTick(function () {
        this.loading = true;
      });

      _axios.default.get(url).then(function (response) {
        if (response.status == 200) {
          _this.listings.splice(0);

          response.data.guide.forEach(function (value, index) {
            event = {
              id: value.id,
              airdate: parseInt(value.id),
              title: value.name,
              start: (0, _moment.default)(value.airdate).format("YYYY-MM-DD HH:mm")
            };

            _this.listings.push(event);
          });
          _this.listings_length = _this.listings.length;

          _this.$emit('results_count', _this.listings_length);
        } else {
          console.log("Failure! - " + response);
        }

        if (_this.listings_length > 0) {
          _this.show = true;

          _this.$nextTick(function () {
            this.loading = false;
          });
        } else {
          _this.show = false;
        }
      });
    }
  },
  data: function data() {
    return {
      show: false,
      loading: true,
      channelRef: {},
      expanded: false,
      listings: [],
      listings_length: 0
    };
  }
};
        var $a01ba7 = exports.default || module.exports;
      
      if (typeof $a01ba7 === 'function') {
        $a01ba7 = $a01ba7.options;
      }
    
        /* template */
        Object.assign($a01ba7, (function () {
          var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.show === true
    ? _c(
        "md-list",
        [
          _c(
            "md-list-item",
            {
              attrs: { "md-expand": "", "md-expanded": _vm.expanded },
              on: {
                "update:mdExpanded": function($event) {
                  _vm.expanded = $event
                },
                "update:md-expanded": function($event) {
                  _vm.expanded = $event
                }
              }
            },
            [
              !_vm.loading
                ? _c("md-badge", {
                    staticClass: "md-primary",
                    attrs: {
                      "md-position": "top",
                      "md-content": _vm.listings_length
                    }
                  })
                : _vm._e(),
              _vm._v(" "),
              _vm.loading
                ? _c("md-progress-spinner", {
                    attrs: {
                      "md-diameter": 20,
                      "md-stroke": 3,
                      "md-mode": "indeterminate"
                    }
                  })
                : _vm._e(),
              _vm._v(" "),
              _c("span", { staticClass: "md-list-item-text" }, [
                _vm._v(_vm._s(_vm.channel.id))
              ]),
              _vm._v(" "),
              _c(
                "md-list",
                {
                  staticClass: "listings md-scrollbar",
                  attrs: { slot: "md-expand" },
                  slot: "md-expand"
                },
                _vm._l(_vm.listings, function(listing, i) {
                  return _vm.expanded
                    ? _c("md-list-item", [
                        _c(
                          "div",
                          [
                            _c(
                              "span",
                              [
                                _c(
                                  "md-button",
                                  {
                                    staticClass:
                                      "md-icon-button md-dense md-raised",
                                    on: {
                                      click: function($event) {
                                        return _vm.schedule(listing)
                                      }
                                    }
                                  },
                                  [_c("md-icon", [_vm._v("schedule")])],
                                  1
                                )
                              ],
                              1
                            ),
                            _vm._v(" "),
                            listing.airdate < _vm.dateNow
                              ? _c("preview", {
                                  attrs: {
                                    channel_name: _vm.channel.id,
                                    listing_id: listing.id
                                  }
                                })
                              : _c(
                                  "md-button",
                                  {
                                    staticClass:
                                      "md-icon-button md-dense md-raised",
                                    attrs: { disabled: "" }
                                  },
                                  [
                                    _c("md-icon", [
                                      _vm._v("play_circle_outline")
                                    ])
                                  ],
                                  1
                                ),
                            _vm._v(" "),
                            _c("span", [
                              _vm._v(
                                _vm._s(listing.start) +
                                  " - " +
                                  _vm._s(listing.title)
                              )
                            ]),
                            _vm._v(" "),
                            _c("md-divider")
                          ],
                          1
                        )
                      ])
                    : _vm._e()
                }),
                1
              )
            ],
            1
          )
        ],
        1
      )
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: null,
            functional: undefined
          };
        })());
      
    /* hot reload */
    (function () {
      if (module.hot) {
        var api = require('vue-hot-reload-api');
        api.install(require('vue'));
        if (api.compatible) {
          module.hot.accept();
          if (!module.hot.data) {
            api.createRecord('$a01ba7', $a01ba7);
          } else {
            api.reload('$a01ba7', $a01ba7);
          }
        }

        
        var reloadCSS = require('_css_loader');
        module.hot.dispose(reloadCSS);
        module.hot.accept(reloadCSS);
      
      }
    })();
},{"./Preview.vue":"src/Preview.vue","axios":"node_modules/axios/index.js","moment":"node_modules/moment/moment.js","_css_loader":"node_modules/parcel-bundler/src/builtins/css-loader.js","vue-hot-reload-api":"node_modules/vue-hot-reload-api/dist/index.js","vue":"node_modules/vue/dist/vue.runtime.esm.js"}],"src/Schedule.vue":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _axios = _interopRequireDefault(require("axios"));

var _moment = _interopRequireDefault(require("moment"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _default = {
  name: 'Schedule',
  props: ["listing"],
  data: function data() {
    return {
      active: "first",
      first: false,
      second: false,
      third: false,
      forth: false,
      filter_matches: [],
      filter: "",
      folders: [],
      folder: "",
      watch: true,
      search: "",
      replace: "",
      searches: [],
      appendDate: false,
      prependDate: false,
      appendTime: false,
      prependTime: false,
      name: ""
    };
  },
  methods: {
    save: function save() {
      var _schedule,
          _this = this;

      var url = this.$buildurl("schedules");
      var searches = [];
      this.searches.forEach(function (search, index) {
        searches.push({
          search: search.search,
          replace: search.replace
        });
      });
      var schedule = (_schedule = {
        filter: this.filter,
        folder: this.folder,
        appendDate: this.appendDate,
        preprendDate: this.prependDate,
        appendTime: this.appendTime
      }, _defineProperty(_schedule, "appendDate", this.appendDate), _defineProperty(_schedule, "name", this.name), _defineProperty(_schedule, "watch", this.watch), _defineProperty(_schedule, "searches", searches), _schedule);
      console.log("New Schedule - ");
      console.log(schedule);

      _axios.default.post(url, schedule).then(function (response) {
        alert(response.data);

        _this.reset();

        _this.$emit("schedule");
      }).catch(function (error) {
        alert(error);
      });
    },
    saveSearchAndReplace: function saveSearchAndReplace() {
      this.searches.push({
        search: this.search,
        replace: this.replace
      });
    },
    getFolders: function getFolders(value) {
      var _this2 = this;

      var url = this.$buildurl("content/folders");

      _axios.default.get(url).then(function (response) {
        _this2.folders.splice(0);

        response.data.forEach(function (folder, index) {
          _this2.folders.push(folder);
        });
      });
    },
    modifyTitle: function modifyTitle(value) {
      var toreturn = "";

      if (this['prependDate']) {
        toreturn += (0, _moment.default)(value.airdate).format("YYYY-MM-DD") + " ";
      }

      if (this.prependTime) {
        toreturn += (0, _moment.default)(value.airdate).format("HH:mm") + " ";
      }

      var title = value.title;
      this.searches.forEach(function (search, index) {
        title = title.replace(search.search, search.replace);
      });
      toreturn += title;

      if (this.appendDate) {
        toreturn += " " + (0, _moment.default)(value.airdate).format("YYYY-MM-DD");
      }

      if (this.appendTime) {
        toreturn += " " + (0, _moment.default)(value.airdate).format("HH:mm");
      }

      return toreturn;
    },
    matches: function matches() {
      var _this3 = this;

      if (this.filter == "") {
        return;
      }

      var url = this.$buildurl("channels/guide?search=" + this.filter);

      _axios.default.get(url).then(function (response) {
        _this3.filter_matches.splice(0);

        response.data.forEach(function (channel, index) {
          channel.guide.forEach(function (listing, index) {
            event = {
              channel: channel.channelName,
              id: listing.id,
              airdate: listing.airdate,
              title: listing.name,
              start: (0, _moment.default)(listing.airdate).format("YYYY-MM-DD HH:mm")
            };

            _this3.filter_matches.push(event);
          });
        });
      });
    },
    reset: function reset(value) {
      console.log("Reset");
      this.first = false;
      this.second = false;
      this.third = false;
      this.forth = false;
      this.appendDate = false;
      this.appendTime = false;
      this.prependDate = false;
      this.prependTime = false;
      this.searches = [];
      this.name = "";
      this.folder = "";
      this.filter_matches.splice(0);

      if (value) {
        this.filter = value.title;
      }

      this.active = "first";
    },
    setDone: function setDone(id, index) {
      this[id] = true;

      if (index) {
        this.active = index;
      }
    }
  }
};
exports.default = _default;
        var $aec502 = exports.default || module.exports;
      
      if (typeof $aec502 === 'function') {
        $aec502 = $aec502.options;
      }
    
        /* template */
        Object.assign($aec502, (function () {
          var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _c(
        "md-steppers",
        {
          attrs: {
            "md-alternative": "",
            "md-active-step": _vm.active,
            "md-linear": ""
          },
          on: {
            "update:mdActiveStep": function($event) {
              _vm.active = $event
            },
            "update:md-active-step": function($event) {
              _vm.active = $event
            }
          }
        },
        [
          _c(
            "md-step",
            { attrs: { id: "first", "md-label": "Filter" } },
            [
              _c(
                "div",
                {
                  staticClass: "md-layout md-gutter md-alignment-center-center"
                },
                [
                  _c("div", { staticClass: "md-layout-item md-size-large" }),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "md-layout-item md-size-large" },
                    [
                      _c(
                        "md-field",
                        [
                          _c("label", [_vm._v("Listing Filter")]),
                          _vm._v(" "),
                          _c("md-input", {
                            on: {
                              keyup: function($event) {
                                if (
                                  !$event.type.indexOf("key") &&
                                  _vm._k(
                                    $event.keyCode,
                                    "enter",
                                    13,
                                    $event.key,
                                    "Enter"
                                  )
                                ) {
                                  return null
                                }
                                return _vm.matches($event)
                              }
                            },
                            model: {
                              value: _vm.filter,
                              callback: function($$v) {
                                _vm.filter = $$v
                              },
                              expression: "filter"
                            }
                          })
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "md-layout-item md-size-large" },
                    [
                      _c(
                        "md-button",
                        {
                          staticClass: "md-icon-button",
                          on: { click: _vm.matches }
                        },
                        [_c("md-icon", [_vm._v("search")])],
                        1
                      ),
                      _vm._v(
                        "\n          Matches " +
                          _vm._s(_vm.filter_matches.length) +
                          "\n        "
                      )
                    ],
                    1
                  )
                ]
              ),
              _vm._v(" "),
              _c(
                "md-button",
                {
                  staticClass: "md-raised md-primary",
                  attrs: { disabled: _vm.filter_matches.length == 0 },
                  on: {
                    click: function($event) {
                      return _vm.setDone("first", "second")
                    }
                  }
                },
                [_vm._v("Next")]
              ),
              _vm._v(" "),
              _c(
                "div",
                [
                  _c(
                    "md-list",
                    { staticClass: "matches md-scrollbar" },
                    _vm._l(_vm.filter_matches, function(match) {
                      return _c("md-list-item", [
                        _c("span", [
                          _vm._v(
                            _vm._s(match.channel) +
                              " - " +
                              _vm._s(match.start) +
                              " - " +
                              _vm._s(match.title)
                          )
                        ])
                      ])
                    }),
                    1
                  )
                ],
                1
              )
            ],
            1
          ),
          _vm._v(" "),
          _c("md-step", { attrs: { id: "second", "md-label": "Set Name" } }, [
            _c(
              "div",
              { staticClass: "md-layout md-gutter md-alignment-center-center" },
              [
                _c(
                  "div",
                  { staticClass: "md-layout-item md-size-small" },
                  [
                    _c(
                      "md-checkbox",
                      {
                        attrs: { value: "1" },
                        model: {
                          value: _vm.prependDate,
                          callback: function($$v) {
                            _vm.prependDate = $$v
                          },
                          expression: "prependDate"
                        }
                      },
                      [_vm._v("Prepend Date")]
                    ),
                    _vm._v(" "),
                    _c(
                      "md-checkbox",
                      {
                        attrs: { value: "1" },
                        model: {
                          value: _vm.prependTime,
                          callback: function($$v) {
                            _vm.prependTime = $$v
                          },
                          expression: "prependTime"
                        }
                      },
                      [_vm._v("Prepend Time")]
                    ),
                    _vm._v(" "),
                    _c(
                      "md-checkbox",
                      {
                        attrs: { value: "1" },
                        model: {
                          value: _vm.appendDate,
                          callback: function($$v) {
                            _vm.appendDate = $$v
                          },
                          expression: "appendDate"
                        }
                      },
                      [_vm._v("Append Date")]
                    ),
                    _vm._v(" "),
                    _c(
                      "md-checkbox",
                      {
                        attrs: { value: "1" },
                        model: {
                          value: _vm.appendTime,
                          callback: function($$v) {
                            _vm.appendTime = $$v
                          },
                          expression: "appendTime"
                        }
                      },
                      [_vm._v("Append Time")]
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c("div", { staticClass: "md-layout-item md-size-small" }, [
                  _c(
                    "div",
                    {
                      staticClass:
                        "md-layout md-gutter md-alignment-center-center"
                    },
                    [
                      _c(
                        "div",
                        { staticClass: "md-layout-item md-size-small" },
                        [
                          _c(
                            "md-field",
                            [
                              _c("label", [_vm._v("Search")]),
                              _vm._v(" "),
                              _c("md-input", {
                                model: {
                                  value: _vm.search,
                                  callback: function($$v) {
                                    _vm.search = $$v
                                  },
                                  expression: "search"
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "md-layout-item md-size-small" },
                        [
                          _c(
                            "md-field",
                            [
                              _c("label", [_vm._v("Replace")]),
                              _vm._v(" "),
                              _c("md-input", {
                                model: {
                                  value: _vm.replace,
                                  callback: function($$v) {
                                    _vm.replace = $$v
                                  },
                                  expression: "replace"
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "md-layout-item md-size-small" },
                        [
                          _c(
                            "md-button",
                            {
                              staticClass: "md-raised md-primary",
                              attrs: { disabled: _vm.search == "" },
                              on: {
                                click: function($event) {
                                  return _vm.saveSearchAndReplace()
                                }
                              }
                            },
                            [_c("md-icon", [_vm._v("add")])],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "md-layout-item md-size-small" },
                        _vm._l(_vm.searches, function(search_and_replace, i) {
                          return _c(
                            "div",
                            [
                              _vm._v(
                                "\n                search for " +
                                  _vm._s(search_and_replace.search) +
                                  ", replace with " +
                                  _vm._s(search_and_replace.replace) +
                                  "\n                "
                              ),
                              _c(
                                "md-button",
                                {
                                  on: {
                                    click: function($event) {
                                      return _vm.searches.splice(i, 1)
                                    }
                                  }
                                },
                                [_c("md-icon", [_vm._v("delete")])],
                                1
                              )
                            ],
                            1
                          )
                        }),
                        0
                      )
                    ]
                  )
                ])
              ]
            ),
            _vm._v(" "),
            _c(
              "div",
              { staticClass: "md-layout-item md-size-small" },
              [
                _c(
                  "md-button",
                  {
                    staticClass: "md-raised md-primary",
                    on: {
                      click: function($event) {
                        return _vm.setDone("second", "third")
                      }
                    }
                  },
                  [_vm._v("Next")]
                )
              ],
              1
            ),
            _vm._v(" "),
            _c(
              "div",
              [
                _c(
                  "md-list",
                  { staticClass: "matches md-scrollbar" },
                  _vm._l(_vm.filter_matches, function(match) {
                    return _c("md-list-item", [
                      _c("span", [_vm._v(_vm._s(_vm.modifyTitle(match)))])
                    ])
                  }),
                  1
                )
              ],
              1
            )
          ]),
          _vm._v(" "),
          _c(
            "md-step",
            { attrs: { id: "third", "md-label": "Config" } },
            [
              _c(
                "div",
                [
                  _c(
                    "md-field",
                    [
                      _c("label", [_vm._v("Cool Name")]),
                      _vm._v(" "),
                      _c("md-input", {
                        model: {
                          value: _vm.name,
                          callback: function($$v) {
                            _vm.name = $$v
                          },
                          expression: "name"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                [
                  _c(
                    "md-autocomplete",
                    {
                      attrs: { "md-options": _vm.folders },
                      on: { "md-opened": _vm.getFolders },
                      scopedSlots: _vm._u([
                        {
                          key: "md-autocomplete-item",
                          fn: function(ref) {
                            var item = ref.item
                            return [_vm._v(_vm._s(item))]
                          }
                        }
                      ]),
                      model: {
                        value: _vm.folder,
                        callback: function($$v) {
                          _vm.folder = $$v
                        },
                        expression: "folder"
                      }
                    },
                    [_c("label", [_vm._v("Folder")])]
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                [
                  _c(
                    "md-checkbox",
                    {
                      model: {
                        value: _vm.watch,
                        callback: function($$v) {
                          _vm.watch = $$v
                        },
                        expression: "watch"
                      }
                    },
                    [_vm._v("Watch for future matches")]
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "md-button",
                {
                  staticClass: "md-raised md-primary",
                  on: {
                    click: function($event) {
                      return _vm.setDone("third", "forth")
                    }
                  }
                },
                [_vm._v("Next")]
              )
            ],
            1
          ),
          _vm._v(" "),
          _c("md-step", { attrs: { id: "forth", "md-label": "Review" } }, [
            _c("div", [
              _c("div", [_vm._v("Cool Name: " + _vm._s(_vm.name))]),
              _vm._v(" "),
              _c("div", [_vm._v("Folder: " + _vm._s(_vm.folder))]),
              _vm._v(" "),
              _c("div", [_vm._v("Filter: " + _vm._s(_vm.filter))]),
              _vm._v(" "),
              _c("div", [_vm._v("Prepend Date: " + _vm._s(_vm.prependDate))]),
              _vm._v(" "),
              _c("div", [_vm._v("Prepend Time: " + _vm._s(_vm.prependTime))]),
              _vm._v(" "),
              _c("div", [_vm._v("Append Date: " + _vm._s(_vm.appendDate))]),
              _vm._v(" "),
              _c("div", [_vm._v("Append Time: " + _vm._s(_vm.appendTime))]),
              _vm._v(" "),
              _c(
                "div",
                [
                  _c(
                    "md-button",
                    {
                      staticClass: "md-raised md-primary",
                      on: { click: _vm.save }
                    },
                    [_vm._v("Save")]
                  )
                ],
                1
              )
            ])
          ])
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: null,
            functional: undefined
          };
        })());
      
    /* hot reload */
    (function () {
      if (module.hot) {
        var api = require('vue-hot-reload-api');
        api.install(require('vue'));
        if (api.compatible) {
          module.hot.accept();
          if (!module.hot.data) {
            api.createRecord('$aec502', $aec502);
          } else {
            api.reload('$aec502', $aec502);
          }
        }

        
        var reloadCSS = require('_css_loader');
        module.hot.dispose(reloadCSS);
        module.hot.accept(reloadCSS);
      
      }
    })();
},{"axios":"node_modules/axios/index.js","moment":"node_modules/moment/moment.js","_css_loader":"node_modules/parcel-bundler/src/builtins/css-loader.js","vue-hot-reload-api":"node_modules/vue-hot-reload-api/dist/index.js","vue":"node_modules/vue/dist/vue.runtime.esm.js"}],"src/ScheduleItem.vue":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _axios = _interopRequireDefault(require("axios"));

var _moment = _interopRequireDefault(require("moment"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = {
  name: 'ScheduleItem',
  props: ["schedule"],
  mounted: function mounted() {
    console.log(this.schedule);
  },
  methods: {
    deleteScheduleItem: function deleteScheduleItem() {
      var _this = this;

      var url = this.$buildurl("schedules/" + this.schedule.name);

      _axios.default.delete(url).then(function (response) {
        _this.$emit("deleted");
      });
    }
  }
};
exports.default = _default;
        var $3eee7e = exports.default || module.exports;
      
      if (typeof $3eee7e === 'function') {
        $3eee7e = $3eee7e.options;
      }
    
        /* template */
        Object.assign($3eee7e, (function () {
          var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _c(
        "md-card",
        { staticClass: "schedule" },
        [
          _c("div", { staticClass: "md-title" }, [
            _vm._v("\n        Name: " + _vm._s(_vm.schedule.name) + "\n    ")
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "md-subhead" }, [
            _vm._v("\n       Filter: " + _vm._s(_vm.schedule.filter) + "\n    ")
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "md-subhead" }, [
            _vm._v(
              "\n       PrependDate: " +
                _vm._s(_vm.schedule.prependDate) +
                "\n    "
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "md-subhead" }, [
            _vm._v(
              "\n       PrependTime: " + _vm._s(_vm.schedule.prependTime) + " "
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "md-subhead" }, [
            _vm._v(
              "\n       AppendDate: " +
                _vm._s(_vm.schedule.apependDate) +
                "\n    "
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "md-subhead" }, [
            _vm._v(
              "\n       AppendTime: " +
                _vm._s(_vm.schedule.apependTime) +
                "\n    "
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "md-subhead" }, [
            _vm._v("\n       Watch: " + _vm._s(_vm.schedule.watch) + "\n    ")
          ]),
          _vm._v(" "),
          _c(
            "div",
            { staticClass: "md-subhead" },
            [
              _vm._v("\n       Search/Replace\n       "),
              _vm._l(_vm.schedule.searches, function(search) {
                return _c("div", [
                  _vm._v(
                    "\n         Replace " +
                      _vm._s(search.search) +
                      " with " +
                      _vm._s(search.replace) +
                      "\n       "
                  )
                ])
              })
            ],
            2
          ),
          _vm._v(" "),
          _c(
            "md-card-actions",
            [
              _c("md-button", { on: { click: _vm.deleteScheduleItem } }, [
                _vm._v("Delete")
              ])
            ],
            1
          )
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: null,
            functional: undefined
          };
        })());
      
    /* hot reload */
    (function () {
      if (module.hot) {
        var api = require('vue-hot-reload-api');
        api.install(require('vue'));
        if (api.compatible) {
          module.hot.accept();
          if (!module.hot.data) {
            api.createRecord('$3eee7e', $3eee7e);
          } else {
            api.reload('$3eee7e', $3eee7e);
          }
        }

        
        var reloadCSS = require('_css_loader');
        module.hot.dispose(reloadCSS);
        module.hot.accept(reloadCSS);
      
      }
    })();
},{"axios":"node_modules/axios/index.js","moment":"node_modules/moment/moment.js","_css_loader":"node_modules/parcel-bundler/src/builtins/css-loader.js","vue-hot-reload-api":"node_modules/vue-hot-reload-api/dist/index.js","vue":"node_modules/vue/dist/vue.runtime.esm.js"}],"src/Schedules.vue":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ScheduleItem = _interopRequireDefault(require("./ScheduleItem.vue"));

var _axios = _interopRequireDefault(require("axios"));

var _moment = _interopRequireDefault(require("moment"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
var _default = {
  components: {
    ScheduleItem: _ScheduleItem.default
  },
  name: 'Schedules',
  props: [],
  data: function data() {
    return {
      schedules: []
    };
  },
  mounted: function mounted() {
    this.getSchedules();
  },
  methods: {
    getSchedules: function getSchedules() {
      var _this = this;

      var url = this.$buildurl("schedules");

      _axios.default.get(url).then(function (response) {
        _this.schedules.splice(0);

        response.data.forEach(function (schedule, index) {
          _this.schedules.push(schedule);
        });
      });
    }
  }
};
exports.default = _default;
        var $055dc8 = exports.default || module.exports;
      
      if (typeof $055dc8 === 'function') {
        $055dc8 = $055dc8.options;
      }
    
        /* template */
        Object.assign($055dc8, (function () {
          var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _vm.schedules.length == 0
        ? _c("div", [_vm._v("No Schedules")])
        : _vm._e(),
      _vm._v(" "),
      _c(
        "md-list",
        { staticClass: "md-scrollbar" },
        _vm._l(_vm.schedules, function(schedule) {
          return _c(
            "md-list-item",
            [
              _c("schedule-item", {
                attrs: { schedule: schedule },
                on: { deleted: _vm.getSchedules }
              })
            ],
            1
          )
        }),
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: null,
            functional: undefined
          };
        })());
      
    /* hot reload */
    (function () {
      if (module.hot) {
        var api = require('vue-hot-reload-api');
        api.install(require('vue'));
        if (api.compatible) {
          module.hot.accept();
          if (!module.hot.data) {
            api.createRecord('$055dc8', $055dc8);
          } else {
            api.reload('$055dc8', $055dc8);
          }
        }

        
        var reloadCSS = require('_css_loader');
        module.hot.dispose(reloadCSS);
        module.hot.accept(reloadCSS);
      
      }
    })();
},{"./ScheduleItem.vue":"src/ScheduleItem.vue","axios":"node_modules/axios/index.js","moment":"node_modules/moment/moment.js","_css_loader":"node_modules/parcel-bundler/src/builtins/css-loader.js","vue-hot-reload-api":"node_modules/vue-hot-reload-api/dist/index.js","vue":"node_modules/vue/dist/vue.runtime.esm.js"}],"src/App.vue":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Library = _interopRequireDefault(require("./Library.vue"));

var _Channel = _interopRequireDefault(require("./Channel.vue"));

var _Schedule = _interopRequireDefault(require("./Schedule.vue"));

var _Schedules = _interopRequireDefault(require("./Schedules.vue"));

var _axios = _interopRequireDefault(require("axios"));

var _moment = _interopRequireDefault(require("moment"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = {
  components: {
    Channel: _Channel.default,
    Schedule: _Schedule.default,
    Schedules: _Schedules.default,
    Library: _Library.default
  },
  data: function data() {
    return {
      listing: {},
      currenttab: "tab-guide",
      dateNow: new Date().valueOf() / 1000,
      total_results: 0,
      search_text: "",
      search: "",
      channelGuides: {},
      current_channel: "",
      channels: [],
      channelUpdated: 0,
      selectedChannels: []
    };
  },
  created: function created() {
    var _this = this;

    setInterval(function () {
      return _this.dateNow = new Date().valueOf() / 1000;
    }, 1000 * 60);
  },
  mounted: function mounted() {
    this.getChannels();
  },
  methods: {
    tabChanged: function tabChanged(value) {
      this.currenttab = value;
    },
    onResultsCount: function onResultsCount(value) {
      this.total_results += value;
    },
    newSchedule: function newSchedule() {
      this.currenttab = "tab-schedules";
      this.$refs.schedules.getSchedules();
    },
    onScheduleRequest: function onScheduleRequest(value) {
      console.log(value);
      this.listing = value;
      this.currenttab = "tab-schedule";
      this.$refs.schedule.reset(value);
      console.log("Schedule Request" + value);
    },
    containsKey: function containsKey(obj, key) {
      return Object.keys(obj).includes(key);
    },
    channelGuide: function channelGuide(channel) {
      if (channel in this.channelGuides) {
        return this.channelGuides[channel];
      }

      return [];
    },
    events: function events() {
      var _this2 = this;

      this.channels.forEach(function (value, index) {
        var url = _this2.$buildurl("channels/" + value.id + "/guide?search=" + _this2.search);

        var channel = value.id;

        _axios.default.get(url).then(function (response) {
          if (response.status == 200) {
            var channelGuides = [];
            response.data.guide.forEach(function (value, index) {
              event = {
                title: value.name,
                start: (0, _moment.default)(value.airdate).format("YYYY-MM-DD HH:mm")
              };
              channelGuides.push(event);
            });

            _this2.$set(_this2.channelGuides, channel, channelGuides);

            _this2.channelUpdated += 1;
          } else {
            console.log("Failure! - " + response);
          }
        });
      });
    },
    doClear: function doClear() {
      this.search_text = "";
      this.doSearch();
    },
    doSearch: function doSearch() {
      this.total_results = 0;
      console.log("Search for " + this.search_text);
      this.search = this.search_text; // promote to children
    },
    getChannels: function getChannels() {
      var _this3 = this;

      var url = this.$buildurl("channels");

      _axios.default.get(url).then(function (response) {
        _this3.channels.slice(0);

        response.data.forEach(function (value, index) {
          _this3.$set(_this3.channelGuides, value.channelName, []);

          _this3.channels.push({
            id: value.channelName
          });
        });

        _this3.events();

        _this3.loading = false;
      }).catch(function (error) {
        console.log(error);
      });
    },
    toggleWeekends: function toggleWeekends() {
      this.calendarWeekends = !this.calendarWeekends; // update a property
    },
    gotoPast: function gotoPast() {
      var calendarApi = this.$refs.fullCalendar.getApi(); // from the ref="..."

      calendarApi.gotoDate("2000-01-01"); // call a method on the Calendar object
    },
    handleDateClick: function handleDateClick(arg) {
      /*if (confirm("Would you like to add an event to " + arg.dateStr + " ?")) {
        this.calendarEvents.push({
          // add new event data
          title: "New Event",
          start: arg.date,
          allDay: arg.allDay
        });
      }*/
      alert("Click");
    },
    hasGuide: function hasGuide(channel) {
      return this.containsKey(this.channelGuides, channel);
    }
  }
};
exports.default = _default;
        var $b131e9 = exports.default || module.exports;
      
      if (typeof $b131e9 === 'function') {
        $b131e9 = $b131e9.options;
      }
    
        /* template */
        Object.assign($b131e9, (function () {
          var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "app" },
    [
      _c(
        "md-tabs",
        {
          staticClass: "md-primary",
          attrs: { "md-active-tab": _vm.currenttab },
          on: { "md-changed": _vm.tabChanged }
        },
        [
          _c(
            "md-tab",
            { attrs: { id: "tab-guide", "md-label": "Guide", to: "/guide" } },
            [
              _c("div", { staticClass: "md-layout md-gutter" }, [
                _c("div", { staticClass: "md-layout-item md-size-large" }),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "md-layout-item md-size-xsmall" },
                  [
                    _c(
                      "md-field",
                      [
                        _c("label", { attrs: { for: "movie" } }, [
                          _vm._v("Channel")
                        ]),
                        _vm._v(" "),
                        _c(
                          "md-select",
                          {
                            attrs: { id: "channel", name: "channel" },
                            model: {
                              value: _vm.current_channel,
                              callback: function($$v) {
                                _vm.current_channel = $$v
                              },
                              expression: "current_channel"
                            }
                          },
                          _vm._l(_vm.channels, function(channel) {
                            return _c(
                              "md-option",
                              {
                                attrs: { id: "channel.id", value: "channel.id" }
                              },
                              [_vm._v(_vm._s(channel.id))]
                            )
                          }),
                          1
                        )
                      ],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "md-layout-item md-size-large" },
                  [
                    _c(
                      "md-field",
                      {
                        attrs: { "md-clearable": "" },
                        on: { "md-clear": _vm.doClear }
                      },
                      [
                        _c("label", [_vm._v("Search the Guide")]),
                        _vm._v(" "),
                        _c("md-input", {
                          on: {
                            keyup: function($event) {
                              if (
                                !$event.type.indexOf("key") &&
                                _vm._k(
                                  $event.keyCode,
                                  "enter",
                                  13,
                                  $event.key,
                                  "Enter"
                                )
                              ) {
                                return null
                              }
                              return _vm.doSearch($event)
                            }
                          },
                          model: {
                            value: _vm.search_text,
                            callback: function($$v) {
                              _vm.search_text = $$v
                            },
                            expression: "search_text"
                          }
                        })
                      ],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "md-layout-item md-size-xsmall" },
                  [
                    _c(
                      "md-button",
                      {
                        staticClass: "md-icon-button",
                        on: { click: _vm.doSearch }
                      },
                      [_c("md-icon", [_vm._v("search")])],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c("div", { staticClass: "md-layout-item md-size-large" })
              ])
            ]
          ),
          _vm._v(" "),
          _c(
            "md-tab",
            {
              attrs: {
                id: "tab-schedule",
                "md-label": "Schedule",
                to: "/schedule"
              }
            },
            [
              _c("schedule", {
                ref: "schedule",
                on: { schedule: _vm.newSchedule }
              })
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "md-tab",
            {
              attrs: {
                id: "tab-schedules",
                "md-label": "Schedules",
                to: "/schedules"
              }
            },
            [_c("schedules", { ref: "schedules" })],
            1
          ),
          _vm._v(" "),
          _c(
            "md-tab",
            {
              attrs: {
                id: "tab-library",
                "md-label": "Library",
                to: "/library"
              }
            },
            [_c("library")],
            1
          )
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: null,
            functional: undefined
          };
        })());
      
    /* hot reload */
    (function () {
      if (module.hot) {
        var api = require('vue-hot-reload-api');
        api.install(require('vue'));
        if (api.compatible) {
          module.hot.accept();
          if (!module.hot.data) {
            api.createRecord('$b131e9', $b131e9);
          } else {
            api.reload('$b131e9', $b131e9);
          }
        }

        
        var reloadCSS = require('_css_loader');
        module.hot.dispose(reloadCSS);
        module.hot.accept(reloadCSS);
      
      }
    })();
},{"./Library.vue":"src/Library.vue","./Channel.vue":"src/Channel.vue","./Schedule.vue":"src/Schedule.vue","./Schedules.vue":"src/Schedules.vue","axios":"node_modules/axios/index.js","moment":"node_modules/moment/moment.js","_css_loader":"node_modules/parcel-bundler/src/builtins/css-loader.js","vue-hot-reload-api":"node_modules/vue-hot-reload-api/dist/index.js","vue":"node_modules/vue/dist/vue.runtime.esm.js"}],"node_modules/vue-material/dist/vue-material.js":[function(require,module,exports) {
var define;
var global = arguments[3];
var process = require("process");
/*!
 * vue-material v1.0.0-beta-10.2
 * Made with <3 by marcosmoura 2019
 * Released under the MIT License.
 */
(function webpackUniversalModuleDefinition(root, factory) {
  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require("vue"));else if (typeof define === 'function' && define.amd) define(["vue"], factory);else if (typeof exports === 'object') exports["VueMaterial"] = factory(require("vue"));else root["VueMaterial"] = factory(root["Vue"]);
})(typeof self !== 'undefined' ? self : this, function (__WEBPACK_EXTERNAL_MODULE_8__) {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            /******/
            configurable: false,

            /******/
            enumerable: true,

            /******/
            get: getter
            /******/

          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = 179);
      /******/
    }(
    /************************************************************************/

    /******/
    [
    /* 0 */

    /***/
    function (module, exports) {
      /* globals __VUE_SSR_CONTEXT__ */
      // IMPORTANT: Do NOT use ES2015 features in this file.
      // This module is a runtime utility for cleaner component module output and will
      // be included in the final webpack user bundle.
      module.exports = function normalizeComponent(rawScriptExports, compiledTemplate, functionalTemplate, injectStyles, scopeId, moduleIdentifier
      /* server only */
      ) {
        var esModule;
        var scriptExports = rawScriptExports = rawScriptExports || {}; // ES6 modules interop

        var type = typeof rawScriptExports.default;

        if (type === 'object' || type === 'function') {
          esModule = rawScriptExports;
          scriptExports = rawScriptExports.default;
        } // Vue.extend constructor export interop


        var options = typeof scriptExports === 'function' ? scriptExports.options : scriptExports; // render functions

        if (compiledTemplate) {
          options.render = compiledTemplate.render;
          options.staticRenderFns = compiledTemplate.staticRenderFns;
          options._compiled = true;
        } // functional template


        if (functionalTemplate) {
          options.functional = true;
        } // scopedId


        if (scopeId) {
          options._scopeId = scopeId;
        }

        var hook;

        if (moduleIdentifier) {
          // server build
          hook = function (context) {
            // 2.3 injection
            context = context || // cached call
            this.$vnode && this.$vnode.ssrContext || // stateful
            this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional
            // 2.2 with runInNewContext: true

            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
              context = __VUE_SSR_CONTEXT__;
            } // inject component styles


            if (injectStyles) {
              injectStyles.call(this, context);
            } // register component module identifier for async chunk inferrence


            if (context && context._registeredComponents) {
              context._registeredComponents.add(moduleIdentifier);
            }
          }; // used by ssr in case component is cached and beforeCreate
          // never gets called


          options._ssrRegister = hook;
        } else if (injectStyles) {
          hook = injectStyles;
        }

        if (hook) {
          var functional = options.functional;
          var existing = functional ? options.render : options.beforeCreate;

          if (!functional) {
            // inject component registration as beforeCreate hook
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
          } else {
            // for template-only hot-reload because in that case the render fn doesn't
            // go through the normalizer
            options._injectStyles = hook; // register for functioal component in vue file

            options.render = function renderWithStyleInjection(h, context) {
              hook.call(context);
              return existing(h, context);
            };
          }
        }

        return {
          esModule: esModule,
          exports: scriptExports,
          options: options
        };
      };
      /***/

    },
    /* 1 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      exports.default = function (newComponent) {
        var defaults = {
          props: {
            mdTheme: null
          },
          computed: {
            $mdActiveTheme: function $mdActiveTheme() {
              var enabled = _MdTheme2.default.enabled,
                  getThemeName = _MdTheme2.default.getThemeName,
                  getAncestorTheme = _MdTheme2.default.getAncestorTheme;

              if (enabled && this.mdTheme !== false) {
                return getThemeName(this.mdTheme || getAncestorTheme(this));
              }

              return null;
            }
          }
        };
        return (0, _deepmerge2.default)(defaults, newComponent);
      };

      var _MdTheme = __webpack_require__(32);

      var _MdTheme2 = _interopRequireDefault(_MdTheme);

      var _deepmerge = __webpack_require__(35);

      var _deepmerge2 = _interopRequireDefault(_deepmerge);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }
      /***/

    },
    /* 2 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      __webpack_require__(180);

      var _MdReactive = __webpack_require__(31);

      var _MdReactive2 = _interopRequireDefault(_MdReactive);

      var _MdTheme = __webpack_require__(32);

      var _MdTheme2 = _interopRequireDefault(_MdTheme);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      var init = function init() {
        var material = new _MdReactive2.default({
          ripple: true,
          theming: {},
          locale: {
            startYear: 1900,
            endYear: 2099,
            dateFormat: 'yyyy-MM-dd',
            days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
            shortDays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            shorterDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
            months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],
            shorterMonths: ['J', 'F', 'M', 'A', 'M', 'Ju', 'Ju', 'A', 'Se', 'O', 'N', 'D'],
            firstDayOfAWeek: 0
          },
          router: {
            linkActiveClass: 'router-link-active'
          }
        });
        Object.defineProperties(material.theming, {
          metaColors: {
            get: function get() {
              return _MdTheme2.default.metaColors;
            },
            set: function set(metaColors) {
              _MdTheme2.default.metaColors = metaColors;
            }
          },
          theme: {
            get: function get() {
              return _MdTheme2.default.theme;
            },
            set: function set(theme) {
              _MdTheme2.default.theme = theme;
            }
          },
          enabled: {
            get: function get() {
              return _MdTheme2.default.enabled;
            },
            set: function set(enabled) {
              _MdTheme2.default.enabled = enabled;
            }
          }
        });
        return material;
      };

      exports.default = function (Vue) {
        if (!Vue.material) {
          Vue.material = init();
          Vue.prototype.$material = Vue.material;
        }
      };
      /***/

    },
    /* 3 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (immutable) */

      __webpack_exports__["a"] = toDate;
      /**
       * @name toDate
       * @category Common Helpers
       * @summary Convert the given argument to an instance of Date.
       *
       * @description
       * Convert the given argument to an instance of Date.
       *
       * If the argument is an instance of Date, the function returns its clone.
       *
       * If the argument is a number, it is treated as a timestamp.
       *
       * If the argument is none of the above, the function returns Invalid Date.
       *
       * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
       *
       * @param {Date|Number} argument - the value to convert
       * @returns {Date} the parsed date in the local time zone
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Clone the date:
       * var result = toDate(new Date(2014, 1, 11, 11, 30, 30))
       * //=> Tue Feb 11 2014 11:30:30
       *
       * @example
       * // Convert the timestamp to date:
       * var result = toDate(1392098430000)
       * //=> Tue Feb 11 2014 11:30:30
       */

      function toDate(argument) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var argStr = Object.prototype.toString.call(argument); // Clone the date

        if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {
          // Prevent the date to lose the milliseconds when passed to new Date() in IE10
          return new Date(argument.getTime());
        } else if (typeof argument === 'number' || argStr === '[object Number]') {
          return new Date(argument);
        } else {
          if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
            console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fpAk2");
            console.warn(new Error().stack);
          }

          return new Date(NaN);
        }
      }
      /***/

    },
    /* 4 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _vue = __webpack_require__(8);

      var _vue2 = _interopRequireDefault(_vue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (name, options) {
        return {
          validator: function validator(value) {
            if (options.includes(value)) {
              return true;
            }

            _vue2.default.util.warn('The ' + name + ' prop is invalid. Given value: ' + value + '. Available options: ' + options.join(', ') + '.', undefined);

            return false;
          }
        };
      };
      /***/

    },
    /* 5 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (immutable) */

      __webpack_exports__["a"] = toInteger;

      function toInteger(dirtyNumber) {
        if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
          return NaN;
        }

        var number = Number(dirtyNumber);

        if (isNaN(number)) {
          return number;
        }

        return number < 0 ? Math.ceil(number) : Math.floor(number);
      }
      /***/

    },
    /* 6 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdIcon_vue__ = __webpack_require__(73);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_59c14b8f_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdIcon_vue__ = __webpack_require__(282);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(278);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_59c14b8f_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdIcon/MdIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-59c14b8f", Component.options);
          } else {
            hotAPI.reload("data-v-59c14b8f", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 7 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var MdUuid = function MdUuid() {
        return Math.random().toString(36).slice(4);
      };

      exports.default = MdUuid;
      /***/
    },
    /* 8 */

    /***/
    function (module, exports) {
      module.exports = __WEBPACK_EXTERNAL_MODULE_8__;
      /***/
    },
    /* 9 */

    /***/
    function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */
      (function (global) {
        var now = __webpack_require__(187),
            root = typeof window === 'undefined' ? global : window,
            vendors = ['moz', 'webkit'],
            suffix = 'AnimationFrame',
            raf = root['request' + suffix],
            caf = root['cancel' + suffix] || root['cancelRequest' + suffix];

        for (var i = 0; !raf && i < vendors.length; i++) {
          raf = root[vendors[i] + 'Request' + suffix];
          caf = root[vendors[i] + 'Cancel' + suffix] || root[vendors[i] + 'CancelRequest' + suffix];
        } // Some versions of FF have rAF but not cAF


        if (!raf || !caf) {
          var last = 0,
              id = 0,
              queue = [],
              frameDuration = 1000 / 60;

          raf = function (callback) {
            if (queue.length === 0) {
              var _now = now(),
                  next = Math.max(0, frameDuration - (_now - last));

              last = next + _now;
              setTimeout(function () {
                var cp = queue.slice(0); // Clear queue here to prevent
                // callbacks from appending listeners
                // to the current frame's queue

                queue.length = 0;

                for (var i = 0; i < cp.length; i++) {
                  if (!cp[i].cancelled) {
                    try {
                      cp[i].callback(last);
                    } catch (e) {
                      setTimeout(function () {
                        throw e;
                      }, 0);
                    }
                  }
                }
              }, Math.round(next));
            }

            queue.push({
              handle: ++id,
              callback: callback,
              cancelled: false
            });
            return id;
          };

          caf = function (handle) {
            for (var i = 0; i < queue.length; i++) {
              if (queue[i].handle === handle) {
                queue[i].cancelled = true;
              }
            }
          };
        }

        module.exports = function (fn) {
          // Wrap in a new function to prevent
          // `cancel` potentially being assigned
          // to the native rAF function
          return raf.call(root, fn);
        };

        module.exports.cancel = function () {
          caf.apply(root, arguments);
        };

        module.exports.polyfill = function (object) {
          if (!object) {
            object = root;
          }

          object.requestAnimationFrame = raf;
          object.cancelAnimationFrame = caf;
        };
        /* WEBPACK VAR INJECTION */

      }).call(exports, __webpack_require__(37));
      /***/
    },
    /* 10 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdRipple_vue__ = __webpack_require__(48);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdRipple_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdRipple_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdRipple_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdRipple_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7692b1af_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdRipple_vue__ = __webpack_require__(226);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(223);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdRipple_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7692b1af_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdRipple_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdRipple/MdRipple.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-7692b1af", Component.options);
          } else {
            hotAPI.reload("data-v-7692b1af", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 11 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdRipple = __webpack_require__(23);

      var _MdRipple2 = _interopRequireDefault(_MdRipple);

      var _MdListItemContent = __webpack_require__(399);

      var _MdListItemContent2 = _interopRequireDefault(_MdListItemContent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        mixins: [_MdRipple2.default],
        components: {
          MdListItemContent: _MdListItemContent2.default
        },
        props: {
          disabled: Boolean
        },
        computed: {
          isDisabled: function isDisabled() {
            return !this.mdRipple || this.disabled;
          }
        }
      };
      /***/
    },
    /* 12 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialog_vue__ = __webpack_require__(96);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialog_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialog_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialog_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialog_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f080a6a2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialog_vue__ = __webpack_require__(323);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(322);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialog_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f080a6a2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialog_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdDialog/MdDialog.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-f080a6a2", Component.options);
          } else {
            hotAPI.reload("data-v-f080a6a2", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 13 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = {
        props: {
          to: [String, Object],
          replace: Boolean,
          append: Boolean,
          activeClass: String,
          exact: Boolean,
          event: [String, Array],
          exactActiveClass: String
        }
      };
      /***/
    },
    /* 14 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      exports.default = function (context, props) {
        var RouterLink = context.$options.components['RouterLink'] || context.$options.components['router-link'];
        return _extends({}, props, RouterLink.options.props);
      };
      /***/

    },
    /* 15 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdButton_vue__ = __webpack_require__(52);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdButton_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdButton_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdButton_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdButton_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(231);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */


      var __vue_template__ = null;
      /* template functional */

      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdButton_vue___default.a, __vue_template__, __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdButton/MdButton.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-7d2cd822", Component.options);
          } else {
            hotAPI.reload("data-v-7d2cd822", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 16 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      exports.default = function (el, config, cb) {
        if ('MutationObserver' in window) {
          var observer = new window.MutationObserver(cb);
          observer.observe(el, config);
          return {
            disconnect: function disconnect() {
              observer.disconnect();
            }
          };
        }
      };
      /***/

    },
    /* 17 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdInput_vue__ = __webpack_require__(77);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdInput_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdInput_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdInput_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdInput_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_69de42aa_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdInput_vue__ = __webpack_require__(289);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdInput_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_69de42aa_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdInput_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdField/MdInput/MdInput.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-69de42aa", Component.options);
          } else {
            hotAPI.reload("data-v-69de42aa", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 18 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      exports.default = {
        props: {
          value: {},
          placeholder: String,
          name: String,
          maxlength: [String, Number],
          readonly: Boolean,
          required: Boolean,
          disabled: Boolean,
          mdCounter: [String, Number]
        },
        data: function data() {
          return {
            localValue: this.value,
            textareaHeight: false
          };
        },
        computed: {
          model: {
            get: function get() {
              return this.localValue;
            },
            set: function set(value) {
              var _this = this;

              if (value.constructor.toString().match(/function (\w*)/)[1].toLowerCase() !== 'inputevent') {
                this.$nextTick(function () {
                  _this.localValue = value;
                });
              }
            }
          },
          clear: function clear() {
            return this.MdField.clear;
          },
          attributes: function attributes() {
            return _extends({}, this.$attrs, {
              type: this.type,
              id: this.id,
              name: this.name,
              disabled: this.disabled,
              required: this.required,
              placeholder: this.placeholder,
              readonly: this.readonly,
              maxlength: this.maxlength
            });
          }
        },
        watch: {
          model: function model() {
            this.setFieldValue();
          },
          clear: function clear(_clear) {
            if (_clear) {
              this.clearField();
            }
          },
          placeholder: function placeholder() {
            this.setPlaceholder();
          },
          disabled: function disabled() {
            this.setDisabled();
          },
          required: function required() {
            this.setRequired();
          },
          maxlength: function maxlength() {
            this.setMaxlength();
          },
          mdCounter: function mdCounter() {
            this.setMaxlength();
          },
          localValue: function localValue(val) {
            this.$emit('input', val);
          },
          value: function value(val) {
            this.localValue = val;
          }
        },
        methods: {
          clearField: function clearField() {
            this.$el.value = '';
            this.model = '';
            this.setFieldValue();
          },
          setLabelFor: function setLabelFor() {
            if (this.$el.parentNode) {
              var label = this.$el.parentNode.querySelector('label');

              if (label) {
                var forAttribute = label.getAttribute('for');

                if (!forAttribute || forAttribute.indexOf('md-') >= 0) {
                  label.setAttribute('for', this.id);
                }
              }
            }
          },
          setFieldValue: function setFieldValue() {
            this.MdField.value = this.model;
          },
          setPlaceholder: function setPlaceholder() {
            this.MdField.placeholder = Boolean(this.placeholder);
          },
          setDisabled: function setDisabled() {
            this.MdField.disabled = Boolean(this.disabled);
          },
          setRequired: function setRequired() {
            this.MdField.required = Boolean(this.required);
          },
          setMaxlength: function setMaxlength() {
            if (this.mdCounter) {
              this.MdField.counter = parseInt(this.mdCounter, 10);
            } else {
              this.MdField.maxlength = parseInt(this.maxlength, 10);
            }
          },
          onFocus: function onFocus() {
            this.MdField.focused = true;
          },
          onBlur: function onBlur() {
            this.MdField.focused = false;
          }
        },
        created: function created() {
          this.setFieldValue();
          this.setPlaceholder();
          this.setDisabled();
          this.setRequired();
          this.setMaxlength();
        },
        mounted: function mounted() {
          this.setLabelFor();
        }
      };
      /***/
    },
    /* 19 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (immutable) */

      __webpack_exports__["a"] = startOfUTCISOWeek;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(3); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function startOfUTCISOWeek(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var weekStartsOn = 1;
        var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        var day = date.getUTCDay();
        var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
        date.setUTCDate(date.getUTCDate() - diff);
        date.setUTCHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },
    /* 20 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (immutable) */

      __webpack_exports__["a"] = startOfUTCWeek;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ = __webpack_require__(3); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function startOfUTCWeek(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(__WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a"
        /* default */
        ])(localeWeekStartsOn);
        var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(__WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a"
        /* default */
        ])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        var day = date.getUTCDay();
        var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
        date.setUTCDate(date.getUTCDate() - diff);
        date.setUTCHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },
    /* 21 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _vue = __webpack_require__(8);

      var _vue2 = _interopRequireDefault(_vue);

      var _raf = __webpack_require__(9);

      var _raf2 = _interopRequireDefault(_raf);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdPortal',
        abstract: true,
        props: {
          mdAttachToParent: Boolean,
          mdTarget: {
            type: null,
            validator: function validator(value) {
              if (HTMLElement && value && value instanceof HTMLElement) {
                return true;
              }

              _vue2.default.util.warn('The md-target-el prop is invalid. You should pass a valid HTMLElement.', this);

              return false;
            }
          }
        },
        data: function data() {
          return {
            leaveTimeout: null,
            originalParentEl: null
          };
        },
        computed: {
          transitionName: function transitionName() {
            var childrenComponent = this._vnode.componentOptions.children[0];

            if (childrenComponent) {
              var transition = childrenComponent.data.transition;

              if (transition) {
                return transition.name;
              } else {
                var _transition = childrenComponent.componentOptions.propsData.name;

                if (_transition) {
                  return _transition;
                }
              }
            }

            return 'v';
          },
          leaveClass: function leaveClass() {
            return this.transitionName + '-leave';
          },
          leaveActiveClass: function leaveActiveClass() {
            return this.transitionName + '-leave-active';
          },
          leaveToClass: function leaveToClass() {
            return this.transitionName + '-leave-to';
          }
        },
        watch: {
          mdTarget: function mdTarget(newTarget, oldTarget) {
            this.changeParentEl(newTarget);

            if (oldTarget) {
              this.$forceUpdate();
            }
          }
        },
        methods: {
          getTransitionDuration: function getTransitionDuration(el) {
            var duration = window.getComputedStyle(el).transitionDuration;
            var num = parseFloat(duration, 10);
            var unit = duration.match(/m?s/);

            if (unit) {
              unit = unit[0];
            }

            if (unit === 's') {
              return num * 1000;
            }

            if (unit === 'ms') {
              return num;
            }

            return 0;
          },
          killGhostElement: function killGhostElement(el) {
            if (el.parentNode) {
              this.changeParentEl(this.originalParentEl);
              this.$options._parentElm = this.originalParentEl;
              el.parentNode.removeChild(el);
            }
          },
          initDestroy: function initDestroy(manualCall) {
            var _this = this;

            var el = this.$el;

            if (manualCall && this.$el.nodeType === Node.COMMENT_NODE) {
              el = this.$vnode.elm;
            }

            el.classList.add(this.leaveClass);
            el.classList.add(this.leaveActiveClass);
            this.$nextTick().then(function () {
              el.classList.add(_this.leaveToClass);
              clearTimeout(_this.leaveTimeout);
              _this.leaveTimeout = setTimeout(function () {
                _this.destroyElement(el);
              }, _this.getTransitionDuration(el));
            });
          },
          destroyElement: function destroyElement(el) {
            var _this2 = this;

            (0, _raf2.default)(function () {
              el.classList.remove(_this2.leaveClass);
              el.classList.remove(_this2.leaveActiveClass);
              el.classList.remove(_this2.leaveToClass);

              _this2.$emit('md-destroy');

              _this2.killGhostElement(el);
            });
          },
          changeParentEl: function changeParentEl(newTarget) {
            newTarget && newTarget.appendChild(this.$el);
          }
        },
        mounted: function mounted() {
          if (!this.originalParentEl) {
            this.originalParentEl = this.$el.parentNode;
            this.$emit('md-initial-parent', this.$el.parentNode);
          }

          if (this.mdAttachToParent && this.$el.parentNode.parentNode) {
            this.changeParentEl(this.$el.parentNode.parentNode);
          } else if (document) {
            this.changeParentEl(this.mdTarget || document.body);
          }
        },
        beforeDestroy: function beforeDestroy() {
          if (this.$el.classList) {
            this.initDestroy();
          } else {
            this.killGhostElement(this.$el);
          }
        },
        render: function render(createElement) {
          var defaultSlot = this.$slots.default;

          if (defaultSlot && defaultSlot[0]) {
            return defaultSlot[0];
          }
        }
      };
      /***/
    },
    /* 22 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = {
        methods: {
          isAssetIcon: function isAssetIcon(icon) {
            return /\w+[/\\.]\w+/.test(icon);
          }
        }
      };
      /***/
    },
    /* 23 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdRipple = __webpack_require__(10);

      var _MdRipple2 = _interopRequireDefault(_MdRipple);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        components: {
          MdRipple: _MdRipple2.default
        },
        props: {
          mdRipple: {
            type: Boolean,
            default: true
          }
        }
      };
      /***/
    },
    /* 24 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdField_vue__ = __webpack_require__(70);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdField_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdField_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdField_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdField_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2ecd7b97_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdField_vue__ = __webpack_require__(288);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(277);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdField_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2ecd7b97_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdField_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdField/MdField.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-2ecd7b97", Component.options);
          } else {
            hotAPI.reload("data-v-2ecd7b97", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 25 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (immutable) */

      __webpack_exports__["a"] = getUTCWeekYear;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__startOfUTCWeek_index_js__ = __webpack_require__(20); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function getUTCWeekYear(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a"
        /* default */
        ])(dirtyDate, dirtyOptions);
        var year = date.getUTCFullYear();
        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(__WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a"
        /* default */
        ])(localeFirstWeekContainsDate);
        var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(__WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a"
        /* default */
        ])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

        if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
          throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
        }

        var firstWeekOfNextYear = new Date(0);
        firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
        firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
        var startOfNextYear = Object(__WEBPACK_IMPORTED_MODULE_2__startOfUTCWeek_index_js__["a"
        /* default */
        ])(firstWeekOfNextYear, dirtyOptions);
        var firstWeekOfThisYear = new Date(0);
        firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
        firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
        var startOfThisYear = Object(__WEBPACK_IMPORTED_MODULE_2__startOfUTCWeek_index_js__["a"
        /* default */
        ])(firstWeekOfThisYear, dirtyOptions);

        if (date.getTime() >= startOfNextYear.getTime()) {
          return year + 1;
        } else if (date.getTime() >= startOfThisYear.getTime()) {
          return year;
        } else {
          return year - 1;
        }
      }
      /***/

    },
    /* 26 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOverlay_vue__ = __webpack_require__(90);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOverlay_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOverlay_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOverlay_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOverlay_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0e05c97a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdOverlay_vue__ = __webpack_require__(302);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(301);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOverlay_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0e05c97a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdOverlay_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdOverlay/MdOverlay.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-0e05c97a", Component.options);
          } else {
            hotAPI.reload("data-v-0e05c97a", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 27 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (immutable) */

      __webpack_exports__["default"] = getDaysInMonth;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(3);
      /**
       * @name getDaysInMonth
       * @category Month Helpers
       * @summary Get the number of days in a month of the given date.
       *
       * @description
       * Get the number of days in a month of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the number of days in a month
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // How many days are in February 2000?
       * var result = getDaysInMonth(new Date(2000, 1))
       * //=> 29
       */


      function getDaysInMonth(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        var year = date.getFullYear();
        var monthIndex = date.getMonth();
        var lastDayOfMonth = new Date(0);
        lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
        lastDayOfMonth.setHours(0, 0, 0, 0);
        return lastDayOfMonth.getDate();
      }
      /***/

    },
    /* 28 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPopover_vue__ = __webpack_require__(93);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPopover_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPopover_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPopover_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPopover_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(316);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */


      var __vue_template__ = null;
      /* template functional */

      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPopover_vue___default.a, __vue_template__, __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdPopover/MdPopover.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-d36236a6", Component.options);
          } else {
            hotAPI.reload("data-v-d36236a6", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 29 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _raf = __webpack_require__(9);

      var _raf2 = _interopRequireDefault(_raf);

      var _MdObserveEvent = __webpack_require__(118);

      var _MdObserveEvent2 = _interopRequireDefault(_MdObserveEvent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function () {
        var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
        var observerFn = arguments[1];
        var observer = (0, _MdObserveEvent2.default)(el, 'resize', function () {
          (0, _raf2.default)(observerFn);
        }, {
          passive: true
        });
        return {
          destroy: observer.destroy
        };
      };
      /***/

    },
    /* 30 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableHead_vue__ = __webpack_require__(161);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableHead_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableHead_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableHead_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableHead_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_98ddc082_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableHead_vue__ = __webpack_require__(478);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(475);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableHead_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_98ddc082_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableHead_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTable/MdTableHead.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-98ddc082", Component.options);
          } else {
            hotAPI.reload("data-v-98ddc082", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 31 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      exports.default = function (data) {
        var Instance = {};

        _vue2.default.util.defineReactive(Instance, 'reactive', data);

        return Instance.reactive;
      };

      var _vue = __webpack_require__(8);

      var _vue2 = _interopRequireDefault(_vue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }
      /***/

    },
    /* 32 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _vue = __webpack_require__(8);

      var _vue2 = _interopRequireDefault(_vue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      var msColor = null;
      var themeColor = null;
      var maskIcon = null;
      exports.default = new _vue2.default({
        data: function data() {
          return {
            prefix: 'md-theme-',
            theme: 'default',
            enabled: true,
            metaColors: false
          };
        },
        computed: {
          themeTarget: function themeTarget() {
            if (!this.$isServer) {
              return document.documentElement;
            }

            return false;
          },
          fullThemeName: function fullThemeName() {
            return this.getThemeName();
          }
        },
        watch: {
          enabled: {
            immediate: true,
            handler: function handler() {
              var fullThemeName = this.fullThemeName,
                  themeTarget = this.themeTarget,
                  enabled = this.enabled;

              if (themeTarget) {
                if (enabled) {
                  themeTarget.classList.add(fullThemeName);
                  this.metaColors && this.setHtmlMetaColors(fullThemeName);
                } else {
                  themeTarget.classList.remove(fullThemeName);
                  this.metaColors && this.setHtmlMetaColors();
                }
              }
            }
          },
          theme: function theme(newTheme, oldTheme) {
            var getThemeName = this.getThemeName,
                themeTarget = this.themeTarget;
            newTheme = getThemeName(newTheme);
            themeTarget.classList.remove(getThemeName(oldTheme));
            themeTarget.classList.add(newTheme);

            if (this.metaColors) {
              this.setHtmlMetaColors(newTheme);
            }
          },
          metaColors: function metaColors(meta) {
            if (meta) {
              this.setHtmlMetaColors(this.fullThemeName);
            } else {
              this.setHtmlMetaColors();
            }
          }
        },
        methods: {
          getAncestorTheme: function getAncestorTheme(component) {
            var _this = this;

            if (component) {
              var currentTheme = component.mdTheme;

              var getParentThemeName = function getParentThemeName(parent) {
                if (parent) {
                  var mdTheme = parent.mdTheme,
                      $parent = parent.$parent;

                  if (mdTheme && mdTheme !== currentTheme) {
                    return mdTheme;
                  }

                  return getParentThemeName($parent);
                }

                return _this.theme;
              };

              return getParentThemeName(component.$parent);
            }

            return null;
          },
          getThemeName: function getThemeName(theme) {
            var themeName = theme || this.theme;
            return this.prefix + themeName;
          },
          setMicrosoftColors: function setMicrosoftColors(primaryColor) {
            if (msColor) {
              msColor.setAttribute('content', primaryColor);
            }
          },
          setThemeColors: function setThemeColors(primaryColor) {
            if (themeColor) {
              themeColor.setAttribute('content', primaryColor);
            }
          },
          setMaskColors: function setMaskColors(primaryColor) {
            if (maskIcon) {
              maskIcon.setAttribute('color', primaryColor);
            }
          },
          setHtmlMetaColors: function setHtmlMetaColors(themeName) {
            var primaryColor = '#fff';

            if (themeName) {
              var computedStyle = window.getComputedStyle(document.documentElement);
              primaryColor = computedStyle.getPropertyValue('--' + themeName + '-primary');
            }

            if (primaryColor) {
              this.setMicrosoftColors(primaryColor);
              this.setThemeColors(primaryColor);
              this.setMaskColors(primaryColor);
            }
          }
        },
        mounted: function mounted() {
          var _this2 = this;

          msColor = document.querySelector('[name="msapplication-TileColor"]');
          themeColor = document.querySelector('[name="theme-color"]');
          maskIcon = document.querySelector('[rel="mask-icon"]');

          if (this.enabled && this.metaColors) {
            window.addEventListener('load', function () {
              _this2.setHtmlMetaColors(_this2.fullThemeName);
            });
          }
        }
      });
      /***/
    },
    /* 33 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _vue = __webpack_require__(8);

      var _vue2 = _interopRequireDefault(_vue);

      var _MdAppSideDrawer = __webpack_require__(185);

      var _MdAppSideDrawer2 = _interopRequireDefault(_MdAppSideDrawer);

      var _MdAppInternalDrawer = __webpack_require__(190);

      var _MdAppInternalDrawer2 = _interopRequireDefault(_MdAppInternalDrawer);

      var _MdDrawerRightPrevious = __webpack_require__(193);

      var _MdDrawerRightPrevious2 = _interopRequireDefault(_MdDrawerRightPrevious);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      var componentTypes = ['md-app-toolbar', 'md-app-drawer', 'md-app-content'];

      function normilizeTagName(tagName) {
        return tagName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
      }

      function isValidChild(componentOptions) {
        return componentOptions && componentTypes.includes(normilizeTagName(componentOptions.tag));
      }

      function isRightDrawer(propsData) {
        if (!propsData) return false;
        return propsData.mdRight === '' || !!propsData.mdRight;
      }

      function shouldRenderSlot(data, componentOptions) {
        return data && componentTypes.includes(data.slot) || isValidChild(componentOptions);
      }

      function generateAttrKeys(attrs) {
        return JSON.stringify({
          'persistent': attrs && attrs['md-persistent'],
          'permanent': attrs && attrs['md-permanent']
        });
      }
      /* eslint-disable complexity */


      function buildSlots(children, context, functionalContext, options, createElement) {
        var slots = [];
        var hasDrawer = false;

        if (children) {
          children.forEach(function (child) {
            var data = child.data;
            var componentOptions = child.componentOptions;

            if (shouldRenderSlot(data, componentOptions)) {
              var slotName = data.slot || normilizeTagName(componentOptions.tag);
              child.data.slot = slotName;

              if (slotName === 'md-app-drawer') {
                var isRight = isRightDrawer(componentOptions.propsData);

                if (hasDrawer) {
                  _vue2.default.util.warn('There shouldn\'t be more than one drawer in a MdApp at one time.');

                  return;
                }

                hasDrawer = true;
                child.data.slot += '-' + (isRight ? 'right' : 'left');
                child.key = generateAttrKeys(data.attrs);

                if (isRight) {
                  var drawerRightPrevious = createElement(_MdDrawerRightPrevious2.default, {
                    props: _extends({}, child.data.attrs)
                  });
                  drawerRightPrevious.data.slot = 'md-app-drawer-right-previous';
                  slots.push(drawerRightPrevious);
                }
              }

              child.data.provide = options.Ctor.options.provide;
              child.context = context;
              child.functionalContext = functionalContext;
              slots.push(child);
            }
          });
        }

        return slots;
      }
      /* eslint-enable complexity */


      function getDrawers(children) {
        var drawerVnodes = children.filter(function (child) {
          var tag = child.data.slot || normilizeTagName(child.componentOptions.tag);
          return tag === 'md-app-drawer';
        });
        return drawerVnodes.length ? drawerVnodes : [];
      }

      function hasInternalDrawer(attrs) {
        var mdPermanent = attrs && attrs['md-permanent'];
        return mdPermanent && (mdPermanent === 'clipped' || mdPermanent === 'card');
      }

      exports.default = {
        name: 'MdApp',
        functional: true,
        render: function render(createElement, _ref) {
          var children = _ref.children,
              props = _ref.props,
              data = _ref.data;
          var appComponent = _MdAppSideDrawer2.default;

          var _createElement = createElement(appComponent),
              context = _createElement.context,
              functionalContext = _createElement.functionalContext,
              componentOptions = _createElement.componentOptions;

          var slots = buildSlots(children, context, functionalContext, componentOptions, createElement);
          var drawers = getDrawers(slots);
          drawers.forEach(function (drawer) {
            if (drawer && hasInternalDrawer(drawer.data.attrs)) {
              appComponent = _MdAppInternalDrawer2.default;
            }
          });
          var staticClass = {};

          if (data.staticClass) {
            data.staticClass.split(/\s+/).forEach(function (name) {
              if (name.length === 0) return;
              staticClass[name] = true;
            });
          }

          return createElement(appComponent, {
            attrs: props,
            class: _extends({}, staticClass, data.class),
            style: _extends({}, data.staticStyle, data.style)
          }, slots);
        }
      };
      /***/
    },
    /* 34 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdAppMixin = __webpack_require__(36);

      var _MdAppMixin2 = _interopRequireDefault(_MdAppMixin);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      } //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      exports.default = new _MdComponent2.default({
        name: 'MdAppSideDrawer',
        mixins: [_MdAppMixin2.default]
      });
      /***/
    },
    /* 35 */

    /***/
    function (module, exports, __webpack_require__) {
      (function (global, factory) {
        true ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.deepmerge = factory();
      })(this, function () {
        'use strict';

        var isMergeableObject = function isMergeableObject(value) {
          return isNonNullObject(value) && !isSpecial(value);
        };

        function isNonNullObject(value) {
          return !!value && typeof value === 'object';
        }

        function isSpecial(value) {
          var stringValue = Object.prototype.toString.call(value);
          return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);
        } // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25


        var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
        var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

        function isReactElement(value) {
          return value.$$typeof === REACT_ELEMENT_TYPE;
        }

        function emptyTarget(val) {
          return Array.isArray(val) ? [] : {};
        }

        function cloneUnlessOtherwiseSpecified(value, options) {
          return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
        }

        function defaultArrayMerge(target, source, options) {
          return target.concat(source).map(function (element) {
            return cloneUnlessOtherwiseSpecified(element, options);
          });
        }

        function getMergeFunction(key, options) {
          if (!options.customMerge) {
            return deepmerge;
          }

          var customMerge = options.customMerge(key);
          return typeof customMerge === 'function' ? customMerge : deepmerge;
        }

        function mergeObject(target, source, options) {
          var destination = {};

          if (options.isMergeableObject(target)) {
            Object.keys(target).forEach(function (key) {
              destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
            });
          }

          Object.keys(source).forEach(function (key) {
            if (!options.isMergeableObject(source[key]) || !target[key]) {
              destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
            } else {
              destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
            }
          });
          return destination;
        }

        function deepmerge(target, source, options) {
          options = options || {};
          options.arrayMerge = options.arrayMerge || defaultArrayMerge;
          options.isMergeableObject = options.isMergeableObject || isMergeableObject;
          var sourceIsArray = Array.isArray(source);
          var targetIsArray = Array.isArray(target);
          var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

          if (!sourceAndTargetTypesMatch) {
            return cloneUnlessOtherwiseSpecified(source, options);
          } else if (sourceIsArray) {
            return options.arrayMerge(target, source, options);
          } else {
            return mergeObject(target, source, options);
          }
        }

        deepmerge.all = function deepmergeAll(array, options) {
          if (!Array.isArray(array)) {
            throw new Error('first argument should be an array');
          }

          return array.reduce(function (prev, next) {
            return deepmerge(prev, next, options);
          }, {});
        };

        var deepmerge_1 = deepmerge;
        return deepmerge_1;
      });
      /***/

    },
    /* 36 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _raf = __webpack_require__(9);

      var _raf2 = _interopRequireDefault(_raf);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }

        return obj;
      }

      var mdAppModes = ['fixed', 'fixed-last', 'reveal', 'overlap', 'flexible'];
      exports.default = {
        props: {
          mdMode: _extends({
            type: String
          }, (0, _MdPropValidator2.default)('md-mode', mdAppModes)),
          mdWaterfall: Boolean,
          mdScrollbar: {
            type: Boolean,
            default: true
          }
        },
        data: function data() {
          return {
            revealTimer: null,
            revealLastPos: 0,
            manualTick: false,
            MdApp: {
              options: {
                mode: null,
                waterfall: false,
                flexible: false
              },
              toolbar: {
                element: null,
                titleElement: null,
                height: '0px',
                initialHeight: 0,
                top: 0,
                titleSize: 20,
                hasElevation: true,
                revealActive: false,
                fixedLastActive: false,
                fixedLastHeight: false,
                overlapOff: false
              },
              drawer: {
                initialWidth: 0,
                active: false,
                mode: 'temporary',
                submode: null,
                width: 0,
                right: false
              }
            }
          };
        },
        provide: function provide() {
          return {
            MdApp: this.MdApp
          };
        },
        computed: {
          isFixed: function isFixed() {
            return this.mdMode && this.mdMode !== 'fixed';
          },
          isDrawerMini: function isDrawerMini() {
            return this.MdApp.drawer.mode === 'persistent' && this.MdApp.drawer.submode === 'mini';
          },
          contentPadding: function contentPadding() {
            var drawer = this.MdApp.drawer;

            if (this.MdApp.drawer.active && this.MdApp.drawer.mode === 'persistent' && this.MdApp.drawer.submode === 'full') {
              return this.MdApp.drawer.width;
            }

            return 0;
          },
          contentStyles: function contentStyles() {
            return _defineProperty({}, 'padding-' + (this.MdApp.drawer.right ? 'right' : 'left'), this.contentPadding);
          },
          containerStyles: function containerStyles() {
            var styles = {};

            if (this.isFixed) {
              styles['margin-top'] = this.MdApp.toolbar.initialHeight + 'px';
            }

            if (this.isDrawerMini) {
              styles['padding-' + (this.MdApp.drawer.right ? 'right' : 'left')] = !this.MdApp.drawer.active ? this.MdApp.drawer.initialWidth + 'px' : 0;
            }

            return styles;
          },
          scrollerClasses: function scrollerClasses() {
            if (this.mdScrollbar) {
              return 'md-scrollbar';
            }
          },
          appClasses: function appClasses() {
            return {
              'md-waterfall': this.mdWaterfall,
              'md-flexible': this.mdMode === 'flexible',
              'md-fixed': this.mdMode === 'fixed',
              'md-fixed-last': this.mdMode === 'fixed-last',
              'md-reveal': this.mdMode === 'reveal',
              'md-overlap': this.mdMode === 'overlap',
              'md-drawer-active': this.MdApp.drawer.active
            };
          }
        },
        watch: {
          mdMode: function mdMode(mode) {
            this.MdApp.options.mode = mode;
          },
          mdWaterfall: function mdWaterfall(waterfall) {
            this.MdApp.options.waterfall = waterfall;
            this.setToolbarElevation();
          }
        },
        methods: {
          setToolbarElevation: function setToolbarElevation() {
            this.MdApp.toolbar.hasElevation = !this.mdWaterfall;
          },
          setToolbarTimer: function setToolbarTimer(scrollTop) {
            var _this = this;

            window.clearTimeout(this.revealTimer);
            this.revealTimer = window.setTimeout(function () {
              _this.revealLastPos = scrollTop;
            }, 100);
          },
          setToolbarMarginAndHeight: function setToolbarMarginAndHeight(margin, height) {
            this.MdApp.toolbar.top = margin;
            this.MdApp.toolbar.height = height;
          },
          getToolbarConstrants: function getToolbarConstrants($event) {
            var toolbarHeight = this.MdApp.toolbar.element.offsetHeight;
            var safeAmount = 10;
            var threshold = toolbarHeight + safeAmount;
            var scrollTop = $event.target.scrollTop;

            if (!this.MdApp.toolbar.initialHeight) {
              this.MdApp.toolbar.initialHeight = toolbarHeight;
            }

            return {
              toolbarHeight: toolbarHeight,
              safeAmount: safeAmount,
              threshold: threshold,
              scrollTop: scrollTop,
              initialHeight: this.MdApp.toolbar.initialHeight
            };
          },
          handleWaterfallScroll: function handleWaterfallScroll($event) {
            var _getToolbarConstrants = this.getToolbarConstrants($event),
                threshold = _getToolbarConstrants.threshold,
                scrollTop = _getToolbarConstrants.scrollTop;

            var elevationMark = 4;

            if (this.mdMode === 'reveal') {
              elevationMark = threshold;
            }

            this.MdApp.toolbar.hasElevation = scrollTop >= elevationMark;
          },
          handleFlexibleMode: function handleFlexibleMode($event) {
            var _getToolbarConstrants2 = this.getToolbarConstrants($event),
                scrollTop = _getToolbarConstrants2.scrollTop,
                initialHeight = _getToolbarConstrants2.initialHeight;

            var toolbar = this.MdApp.toolbar.element;
            var firstRow = toolbar.querySelector('.md-toolbar-row:first-child');
            var firstRowHeight = firstRow.offsetHeight;
            var scrollAmount = initialHeight - scrollTop;
            var shouldKeepFlexible = scrollTop < initialHeight - firstRowHeight;

            if (firstRowHeight) {
              if (shouldKeepFlexible) {
                toolbar.style.height = scrollAmount + 'px';
              } else {
                toolbar.style.height = firstRowHeight + 'px';
              }
            }

            var titleElement = this.MdApp.toolbar.titleElement;

            if (titleElement) {
              var targetSize = 20;
              var initialSize = this.MdApp.toolbar.titleSize;

              if (shouldKeepFlexible) {
                var newSize = Math.max(0, 1 - (scrollTop - initialSize) / (scrollAmount + initialSize + 0.000001)) * (initialSize - targetSize) + targetSize;
                titleElement.style.fontSize = newSize + 'px';
              } else {
                titleElement.style.fontSize = '20px';
              }
            }

            var _getToolbarConstrants3 = this.getToolbarConstrants($event),
                threshold = _getToolbarConstrants3.threshold,
                toolbarHeight = _getToolbarConstrants3.toolbarHeight;

            this.setToolbarMarginAndHeight(scrollTop - threshold, toolbarHeight);
          },
          handleRevealMode: function handleRevealMode($event) {
            var _getToolbarConstrants4 = this.getToolbarConstrants($event),
                toolbarHeight = _getToolbarConstrants4.toolbarHeight,
                safeAmount = _getToolbarConstrants4.safeAmount,
                threshold = _getToolbarConstrants4.threshold,
                scrollTop = _getToolbarConstrants4.scrollTop;

            this.setToolbarTimer(scrollTop);
            this.setToolbarMarginAndHeight(scrollTop - threshold, toolbarHeight);

            if (scrollTop >= threshold) {
              this.MdApp.toolbar.revealActive = this.revealLastPos > scrollTop + safeAmount;
            } else {
              this.MdApp.toolbar.revealActive = true;
            }
          },
          handleFixedLastMode: function handleFixedLastMode($event) {
            var _getToolbarConstrants5 = this.getToolbarConstrants($event),
                scrollTop = _getToolbarConstrants5.scrollTop,
                toolbarHeight = _getToolbarConstrants5.toolbarHeight,
                safeAmount = _getToolbarConstrants5.safeAmount;

            var toolbar = this.MdApp.toolbar.element;
            var firstRow = toolbar.querySelector('.md-toolbar-row:first-child');
            var firstRowHeight = firstRow.offsetHeight;
            this.setToolbarTimer(scrollTop);
            this.setToolbarMarginAndHeight(scrollTop - firstRowHeight, toolbarHeight);
            this.MdApp.toolbar.fixedLastHeight = firstRowHeight;

            if (scrollTop >= firstRowHeight) {
              this.MdApp.toolbar.fixedLastActive = this.revealLastPos > scrollTop + safeAmount;
            } else {
              this.MdApp.toolbar.fixedLastActive = true;
            }
          },
          handleOverlapMode: function handleOverlapMode($event) {
            var _getToolbarConstrants6 = this.getToolbarConstrants($event),
                toolbarHeight = _getToolbarConstrants6.toolbarHeight,
                scrollTop = _getToolbarConstrants6.scrollTop,
                initialHeight = _getToolbarConstrants6.initialHeight;

            var toolbar = this.MdApp.toolbar.element;
            var firstRow = toolbar.querySelector('.md-toolbar-row:first-child');
            var firstRowHeight = firstRow.offsetHeight;
            var newHeight = initialHeight - scrollTop - scrollTop * 100 / (initialHeight - firstRowHeight - firstRowHeight / 1.5);

            if (firstRowHeight) {
              if (scrollTop < initialHeight - firstRowHeight && newHeight >= firstRowHeight) {
                this.MdApp.toolbar.overlapOff = false;
                toolbar.style.height = newHeight + 'px';
              } else {
                this.MdApp.toolbar.overlapOff = true;
                toolbar.style.height = firstRowHeight + 'px';
              }
            }

            this.setToolbarMarginAndHeight(scrollTop, toolbarHeight);
          },
          handleModeScroll: function handleModeScroll($event) {
            if (this.mdMode === 'reveal') {
              this.handleRevealMode($event);
            } else if (this.mdMode === 'fixed-last') {
              this.handleFixedLastMode($event);
            } else if (this.mdMode === 'overlap') {
              this.handleOverlapMode($event);
            } else if (this.mdMode === 'flexible') {
              this.handleFlexibleMode($event);
            }
          },
          handleScroll: function handleScroll($event) {
            var _this2 = this;

            if (this.MdApp.toolbar.element) {
              (0, _raf2.default)(function () {
                if (_this2.mdWaterfall) {
                  _this2.handleWaterfallScroll($event);
                }

                if (_this2.mdMode) {
                  _this2.handleModeScroll($event);
                }
              });
            }
          }
        },
        created: function created() {
          this.MdApp.options.mode = this.mdMode;
          this.MdApp.options.waterfall = this.mdWaterfall;
          this.setToolbarElevation();
        },
        mounted: function mounted() {
          var fakeEvent = {
            target: {
              scrollTop: 0
            }
          };

          if (this.mdMode === 'reveal') {
            this.MdApp.toolbar.revealActive = true;
            this.handleRevealMode(fakeEvent);
          }

          if (this.mdMode === 'flexible') {
            this.MdApp.toolbar.revealActive = true;
            this.handleFlexibleMode(fakeEvent);
          }

          if (this.mdMode === 'fixed-last') {
            this.MdApp.toolbar.fixedLastActive = true;
            this.handleFixedLastMode(fakeEvent);
          }

          if (this.mdMode === 'overlap') {
            this.handleOverlapMode(fakeEvent);
          }
        }
      };
      /***/
    },
    /* 37 */

    /***/
    function (module, exports) {
      var g; // This works in non-strict mode

      g = function () {
        return this;
      }();

      try {
        // This works if eval is allowed (see CSP)
        g = g || Function("return this")() || (1, eval)("this");
      } catch (e) {
        // This works if the window reference is available
        if (typeof window === "object") g = window;
      } // g can still be undefined, but nothing to do about it...
      // We return undefined, instead of nothing here, so it's
      // easier to handle this case. if(!global) { ...}


      module.exports = g;
      /***/
    },
    /* 38 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdAppMixin = __webpack_require__(36);

      var _MdAppMixin2 = _interopRequireDefault(_MdAppMixin);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      } //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      exports.default = new _MdComponent2.default({
        name: 'MdAppInternalDrawer',
        mixins: [_MdAppMixin2.default]
      });
      /***/
    },
    /* 39 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //


      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdDrawer',
        props: {
          mdPermanent: _extends({
            type: String
          }, (0, _MdPropValidator2.default)('md-permanent', ['full', 'clipped', 'card'])),
          mdPersistent: _extends({
            type: String
          }, (0, _MdPropValidator2.default)('md-persistent', ['mini', 'full'])),
          mdActive: Boolean,
          mdFixed: Boolean
        },
        computed: {
          drawerClasses: function drawerClasses() {
            var classes = {
              'md-temporary': this.isTemporary,
              'md-persistent': this.mdPersistent,
              'md-permanent': this.mdPermanent,
              'md-active': this.mdActive,
              'md-fixed': this.mdFixed
            };

            if (this.mdPermanent) {
              classes['md-permanent-' + this.mdPermanent] = true;
            }

            if (this.mdPersistent) {
              classes['md-persistent-' + this.mdPersistent] = true;
            }

            return classes;
          },
          isTemporary: function isTemporary() {
            return !this.mdPermanent && !this.mdPersistent;
          }
        }
      });
      /***/
    },
    /* 40 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdAppToolbar',
        inject: ['MdApp'],
        computed: {
          toolbarClasses: function toolbarClasses() {
            return {
              'md-no-elevation': !this.MdApp.toolbar.hasElevation,
              'md-reveal-active': this.MdApp.toolbar.revealActive,
              'md-fixed-last-active': this.MdApp.toolbar.fixedLastActive,
              'md-overlap-off': this.MdApp.toolbar.overlapOff
            };
          },
          toolbarStyles: function toolbarStyles() {
            var styles = {
              'top': this.MdApp.toolbar.top + 'px'
            };

            if (this.MdApp.toolbar.fixedLastActive) {
              styles['transform'] = 'translate3D(0, ' + this.MdApp.toolbar.fixedLastHeight + 'px, 0)';
            }

            return styles;
          }
        },
        mounted: function mounted() {
          var title = this.$el.querySelector('.md-title, .md-display-1, .md-display-2');
          this.MdApp.toolbar.element = this.$el;
          this.MdApp.toolbar.titleElement = title;

          if (title) {
            this.MdApp.toolbar.titleSize = parseInt(window.getComputedStyle(title).fontSize, 10);
          }
        }
      };
      /***/
    },
    /* 41 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdAppContent',
        inject: ['MdApp'],
        computed: {
          showCard: function showCard() {
            return this.MdApp.options && this.MdApp.options.mode === 'overlap';
          }
        }
      };
      /***/
    },
    /* 42 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdAppDrawer',
        inject: ['MdApp'],
        data: function data() {
          return {
            drawerElement: {
              mdActive: null,
              mode: null,
              submode: null
            },
            initialized: false
          };
        },
        props: {
          mdRight: {
            type: Boolean,
            default: false
          },
          mdActive: {
            type: Boolean,
            default: false
          }
        },
        computed: {
          visible: function visible() {
            return this.drawerElement.mdActive;
          },
          mode: function mode() {
            return this.drawerElement.mode;
          },
          submode: function submode() {
            return this.drawerElement.submode;
          }
        },
        watch: {
          visible: function visible(_visible) {
            this.MdApp.drawer.width = this.getDrawerWidth();
            this.MdApp.drawer.active = _visible;
          },
          mode: function mode(_mode) {
            this.MdApp.drawer.mode = _mode;
          },
          submode: function submode(_submode) {
            this.MdApp.drawer.submode = _submode;
          },
          mdRight: function mdRight(right) {
            this.MdApp.drawer.right = right;
          }
        },
        methods: {
          getDrawerWidth: function getDrawerWidth() {
            if (this.$el) {
              return window.getComputedStyle(this.$el).width;
            }

            return 0;
          },
          updateDrawerData: function updateDrawerData() {
            this.MdApp.drawer.width = this.getDrawerWidth();
            this.MdApp.drawer.active = this.visible;
            this.MdApp.drawer.mode = this.mode;
            this.MdApp.drawer.submode = this.submode;
            this.MdApp.drawer.right = this.mdRight;
          },
          clearDrawerData: function clearDrawerData() {
            this.MdApp.drawer.width = 0;
            this.MdApp.drawer.active = false;
            this.MdApp.drawer.mode = 'temporary';
            this.MdApp.drawer.submode = null;
            this.MdApp.drawer.initialWidth = 0;
          }
        },
        mounted: function mounted() {
          var _this = this;

          this.$nextTick().then(function () {
            _this.MdApp.drawer.initialWidth = _this.$el.offsetWidth;
            _this.drawerElement = _this.$refs.drawer;

            _this.updateDrawerData();

            _this.initialized = true;
          });
        },
        updated: function updated() {
          this.drawerElement = this.$refs.drawer;
        },
        beforeDestroy: function beforeDestroy() {
          this.clearDrawerData();
        }
      };
      /***/
    },
    /* 43 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      var _MdBadgeStandalone = __webpack_require__(206);

      var _MdBadgeStandalone2 = _interopRequireDefault(_MdBadgeStandalone);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }

        return obj;
      }

      exports.default = new _MdComponent2.default({
        name: 'MdBadge',
        components: {
          MdBadgeStandalone: _MdBadgeStandalone2.default
        },
        props: {
          mdContent: [String, Number],
          mdPosition: _extends({
            type: String,
            default: 'top'
          }, (0, _MdPropValidator2.default)('md-position', ['top', 'bottom'])),
          mdDense: Boolean
        },
        computed: {
          hasDefaultSlot: function hasDefaultSlot() {
            return !!this.$slots.default;
          },
          badgeClasses: function badgeClasses() {
            var _extends2;

            var staticClass = this.getStaticClass();
            var dynamicClass = this.$vnode.data.class;
            return _extends((_extends2 = {}, _defineProperty(_extends2, 'md-position-' + this.mdPosition, true), _defineProperty(_extends2, 'md-dense', this.mdDense), _extends2), staticClass, dynamicClass);
          },
          styles: function styles() {
            var staticStyle = this.$vnode.data.staticStyle;
            var style = this.$vnode.data.style;
            return _extends({}, staticStyle, style);
          }
        },
        methods: {
          getStaticClass: function getStaticClass() {
            var staticClass = this.$vnode.data.staticClass;

            function filterClasses() {
              return staticClass.split(' ').filter(function (val) {
                return val;
              }).reduce(function (result, key) {
                result[key] = true;
                return result;
              }, {});
            }

            return staticClass ? filterClasses() : {};
          }
        }
      });
      /***/
    },
    /* 44 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdBadgeStandalone'
      }); //
      //
      //
      //
      //
      //

      /***/
    },
    /* 45 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj;
      } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _fuzzysearch = __webpack_require__(213);

      var _fuzzysearch2 = _interopRequireDefault(_fuzzysearch);

      var _isPromise2 = __webpack_require__(214);

      var _isPromise3 = _interopRequireDefault(_isPromise2);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdAutocomplete',
        props: {
          value: {
            type: null,
            required: true
          },
          mdDense: Boolean,
          mdLayout: _extends({
            type: String,
            default: 'floating'
          }, (0, _MdPropValidator2.default)('md-layout', ['floating', 'box'])),
          mdOpenOnFocus: {
            type: Boolean,
            default: true
          },
          mdFuzzySearch: {
            type: Boolean,
            default: true
          },
          mdOptions: {
            type: [Array, Promise],
            required: true
          },
          mdInputName: String,
          mdInputId: String,
          mdInputMaxlength: [String, Number],
          mdInputPlaceholder: [String, Number]
        },
        data: function data() {
          return {
            searchTerm: this.value,
            showMenu: false,
            triggerPopover: false,
            isPromisePending: false,
            filteredAsyncOptions: []
          };
        },
        computed: {
          isBoxLayout: function isBoxLayout() {
            return this.mdLayout === 'box';
          },
          fieldClasses: function fieldClasses() {
            if (this.isBoxLayout) {
              return 'md-autocomplete-box';
            }
          },
          contentClasses: function contentClasses() {
            if (this.isBoxLayout) {
              return 'md-autocomplete-box-content';
            }
          },
          shouldFilter: function shouldFilter() {
            return this.mdOptions[0] && this.searchTerm;
          },
          filteredStaticOptions: function filteredStaticOptions() {
            if (this.isPromise(this.mdOptions)) {
              return false;
            }

            var firstItem = this.mdOptions[0];

            if (this.shouldFilter) {
              if (typeof firstItem === 'string') {
                return this.filterByString();
              } else if ((typeof firstItem === 'undefined' ? 'undefined' : _typeof(firstItem)) === 'object') {
                return this.filterByObject();
              }
            }

            return this.mdOptions;
          },
          hasFilteredItems: function hasFilteredItems() {
            return this.filteredStaticOptions.length > 0 || this.filteredAsyncOptions.length > 0;
          },
          hasScopedEmptySlot: function hasScopedEmptySlot() {
            return this.$scopedSlots['md-autocomplete-empty'];
          }
        },
        watch: {
          mdOptions: {
            deep: true,
            immediate: true,
            handler: function handler() {
              var _this = this;

              if (this.isPromise(this.mdOptions)) {
                this.isPromisePending = true;
                this.mdOptions.then(function (options) {
                  _this.filteredAsyncOptions = options;
                  _this.isPromisePending = false;
                });
              }
            }
          },
          value: function value(val) {
            this.searchTerm = val;
          }
        },
        methods: {
          getOptions: function getOptions() {
            if (this.isPromise(this.mdOptions)) {
              return this.filteredAsyncOptions;
            }

            return this.filteredStaticOptions;
          },
          isPromise: function isPromise(obj) {
            return (0, _isPromise3.default)(obj);
          },
          matchText: function matchText(item) {
            var target = item.toLowerCase();
            var search = this.searchTerm.toLowerCase();

            if (this.mdFuzzySearch) {
              return (0, _fuzzysearch2.default)(search, target);
            }

            return target.includes(search);
          },
          filterByString: function filterByString() {
            var _this2 = this;

            return this.mdOptions.filter(function (item) {
              return _this2.matchText(item);
            });
          },
          filterByObject: function filterByObject() {
            var _this3 = this;

            return this.mdOptions.filter(function (item) {
              var values = Object.values(item);
              var valuesCount = values.length;

              for (var i = 0; i <= valuesCount; i++) {
                if (typeof values[i] === 'string' && _this3.matchText(values[i])) {
                  return true;
                }
              }
            });
          },
          openOnFocus: function openOnFocus() {
            if (this.mdOpenOnFocus) {
              this.showOptions();
            }
          },
          onInput: function onInput(value) {
            this.$emit('input', value);

            if (!this.mdOpenOnFocus) {
              this.showOptions();
            }

            if (this.searchTerm.constructor.toString().match(/function (\w*)/)[1].toLowerCase() !== 'inputevent') {
              this.$emit('md-changed', this.searchTerm);
            }
          },
          showOptions: function showOptions() {
            var _this4 = this;

            if (this.showMenu) {
              return false;
            }

            this.showMenu = true;
            this.$nextTick(function () {
              _this4.triggerPopover = true;

              _this4.$emit('md-opened');
            });
          },
          hideOptions: function hideOptions() {
            var _this5 = this;

            this.$nextTick(function () {
              _this5.triggerPopover = false;

              _this5.$emit('md-closed');
            });
          },
          selectItem: function selectItem(item, $event) {
            var content = $event.target.textContent.trim();
            this.searchTerm = content;
            this.$emit('input', item);
            this.$emit('md-selected', item);
            this.hideOptions();
          }
        }
      };
      /***/
    },
    /* 46 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdAvatar'
      }); //
      //
      //
      //
      //
      //

      /***/
    },
    /* 47 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //


      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      var _MdRipple = __webpack_require__(10);

      var _MdRipple2 = _interopRequireDefault(_MdRipple);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }

        return obj;
      }

      exports.default = new _MdComponent2.default({
        name: 'MdBottomBar',
        components: {
          MdRipple: _MdRipple2.default
        },
        props: {
          mdSyncRoute: Boolean,
          mdActiveItem: [String, Number],
          mdType: _extends({
            type: String,
            default: 'fixed'
          }, (0, _MdPropValidator2.default)('md-type', ['fixed', 'shift']))
        },
        data: function data() {
          return {
            MdBottomBar: {
              mouseEvent: null,
              activeItem: null,
              items: {},
              syncRoute: this.mdSyncRoute
            }
          };
        },
        provide: function provide() {
          return {
            MdBottomBar: this.MdBottomBar
          };
        },
        computed: {
          activeItem: function activeItem() {
            return this.MdBottomBar.activeItem;
          },
          barClasses: function barClasses() {
            return _defineProperty({}, 'md-type-' + this.mdType, true);
          }
        },
        watch: {
          activeItem: function activeItem() {
            this.$emit('md-changed', this.activeItem);
          },
          mdSyncRoute: function (_mdSyncRoute) {
            function mdSyncRoute() {
              return _mdSyncRoute.apply(this, arguments);
            }

            mdSyncRoute.toString = function () {
              return _mdSyncRoute.toString();
            };

            return mdSyncRoute;
          }(function () {
            this.MdBottomBar.syncRoute = mdSyncRoute;
          })
        },
        methods: {
          hasActiveItem: function hasActiveItem() {
            return this.MdBottomBar.activeItem || this.mdActiveItem;
          },
          getItemsAndKeys: function getItemsAndKeys() {
            var items = this.MdBottomBar.items;
            return {
              items: items,
              keys: Object.keys(items)
            };
          },
          setActiveItemByIndex: function setActiveItemByIndex(index) {
            var _getItemsAndKeys = this.getItemsAndKeys(),
                keys = _getItemsAndKeys.keys;

            if (!this.mdActiveItem) {
              this.MdBottomBar.activeItem = keys[index];
            } else {
              this.MdBottomBar.activeItem = this.mdActiveItem;
            }
          }
        },
        created: function created() {
          this.MdBottomBar.type = this.mdType;
        },
        mounted: function mounted() {
          var _this = this;

          this.$nextTick().then(function () {
            if (!_this.mdSyncRoute) {
              _this.setActiveItemByIndex(0);
            }
          });
        }
      });
      /***/
    },
    /* 48 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _raf = __webpack_require__(9);

      var _raf2 = _interopRequireDefault(_raf);

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdUuid = __webpack_require__(7);

      var _MdUuid2 = _interopRequireDefault(_MdUuid);

      var _MdWave = __webpack_require__(49);

      var _MdWave2 = _interopRequireDefault(_MdWave);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdRipple',
        components: {
          MdWave: _MdWave2.default
        },
        props: {
          mdActive: null,
          mdDisabled: Boolean,
          mdCentered: Boolean,
          mdEventTrigger: {
            type: Boolean,
            default: true
          }
        },
        data: function data() {
          return {
            ripples: [],
            touchTimeout: null,
            eventType: null
          };
        },
        computed: {
          isDisabled: function isDisabled() {
            return !this.$material.ripple || this.mdDisabled;
          },
          rippleClasses: function rippleClasses() {
            return {
              'md-disabled': this.isDisabled
            };
          },
          waveClasses: function waveClasses() {
            return {
              'md-centered': this.mdCentered
            };
          }
        },
        watch: {
          mdActive: function mdActive(active) {
            var isBoolean = typeof active === 'boolean';
            var isEvent = active.constructor.toString().match(/function (\w*)/)[1].toLowerCase() === 'mouseevent';

            if (isBoolean && this.mdCentered && active) {
              this.startRipple({
                type: 'mousedown'
              });
            } else if (isEvent) {
              this.startRipple(active);
            }

            this.$emit('update:mdActive', false);
          }
        },
        methods: {
          touchMoveCheck: function touchMoveCheck() {
            window.clearTimeout(this.touchTimeout);
          },
          touchStartCheck: function touchStartCheck($event) {
            var _this = this;

            this.touchTimeout = window.setTimeout(function () {
              _this.startRipple($event);
            }, 100);
          },
          startRipple: function startRipple($event) {
            var _this2 = this;

            (0, _raf2.default)(function () {
              var eventType = _this2.eventType,
                  isDisabled = _this2.isDisabled,
                  mdCentered = _this2.mdCentered;

              if (!isDisabled && (!eventType || eventType === $event.type)) {
                var size = _this2.getSize();

                var position = null;

                if (mdCentered) {
                  position = _this2.getCenteredPosition(size);
                } else {
                  position = _this2.getHitPosition($event, size);
                }

                _this2.eventType = $event.type;

                _this2.ripples.push({
                  waveStyles: _this2.applyStyles(position, size),
                  uuid: (0, _MdUuid2.default)()
                });
              }
            });
          },
          applyStyles: function applyStyles(position, size) {
            size += 'px';
            return _extends({}, position, {
              width: size,
              height: size
            });
          },
          clearWave: function clearWave(uuid) {
            uuid ? this.ripples = this.ripples.filter(function (ripple) {
              return ripple.uuid !== uuid;
            }) : this.ripples = [];
          },
          getSize: function getSize() {
            var _$el = this.$el,
                offsetWidth = _$el.offsetWidth,
                offsetHeight = _$el.offsetHeight;
            return Math.round(Math.max(offsetWidth, offsetHeight));
          },
          getCenteredPosition: function getCenteredPosition(size) {
            var halfSize = -size / 2 + 'px';
            return {
              'margin-top': halfSize,
              'margin-left': halfSize
            };
          },
          getHitPosition: function getHitPosition($event, elementSize) {
            var rect = this.$el.getBoundingClientRect();
            var top = $event.pageY;
            var left = $event.pageX;

            if ($event.type === 'touchstart') {
              top = $event.changedTouches[0].pageY;
              left = $event.changedTouches[0].pageX;
            }

            return {
              top: top - rect.top - elementSize / 2 - document.documentElement.scrollTop + 'px',
              left: left - rect.left - elementSize / 2 - document.documentElement.scrollLeft + 'px'
            };
          }
        }
      });
      /***/
    },
    /* 49 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdWave_vue__ = __webpack_require__(50);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdWave_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdWave_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdWave_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdWave_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_58890fb8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdWave_vue__ = __webpack_require__(225);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(224);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdWave_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_58890fb8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdWave_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdRipple/MdWave.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-58890fb8", Component.options);
          } else {
            hotAPI.reload("data-v-58890fb8", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 50 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdWave',
        data: function data() {
          return {
            animating: false
          };
        },
        props: {
          waveClasses: null,
          waveStyles: null
        },
        mounted: function mounted() {
          this.animating = true;
        },
        methods: {
          end: function end() {
            this.animating = false;
            this.$emit('md-end');
          }
        }
      }); //
      //
      //
      //
      //
      //

      /***/
    },
    /* 51 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _MdAssetIcon = __webpack_require__(22);

      var _MdAssetIcon2 = _interopRequireDefault(_MdAssetIcon);

      var _MdRouterLink = __webpack_require__(13);

      var _MdRouterLink2 = _interopRequireDefault(_MdRouterLink);

      var _MdUuid = __webpack_require__(7);

      var _MdUuid2 = _interopRequireDefault(_MdUuid);

      var _MdRouterLinkProps = __webpack_require__(14);

      var _MdRouterLinkProps2 = _interopRequireDefault(_MdRouterLinkProps);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      var ignoredProps = ['id', 'mdLabel', 'mdIcon', 'mdDisabled'];
      exports.default = {
        name: 'MdBottomBarItem',
        mixins: [_MdAssetIcon2.default, _MdRouterLink2.default],
        props: {
          id: {
            type: String,
            default: function _default() {
              return 'md-bottom-bar-item-' + (0, _MdUuid2.default)();
            }
          },
          mdLabel: String,
          mdIcon: String,
          mdDisabled: Boolean
        },
        inject: ['MdBottomBar'],
        watch: {
          $props: {
            deep: true,
            handler: function handler() {
              this.setItemData();
            }
          },
          $attrs: {
            deep: true,
            handler: function handler() {
              this.setItemData();
            }
          }
        },
        computed: {
          itemClasses: function itemClasses() {
            return {
              'md-active': this.id === this.MdBottomBar.activeItem
            };
          },
          attrs: function attrs() {
            var _this = this;

            var attrs = _extends({}, this.$attrs);

            var propNames = Object.keys(this.$options.propsData);
            propNames.forEach(function (prop) {
              if (!ignoredProps.includes(prop)) {
                attrs[prop] = _this[prop];
              }
            });
            return attrs;
          }
        },
        methods: {
          getPropValues: function getPropValues() {
            var _this2 = this;

            var propNames = Object.keys(this.$options.props);
            var values = {};
            propNames.forEach(function (prop) {
              if (!ignoredProps.includes(prop)) {
                if (_this2[prop]) {
                  values[prop] = _this2[prop];
                } else if (_this2.$attrs && _this2.$attrs.hasOwnProperty(prop)) {
                  if (prop) {
                    values[prop] = _this2.$attrs[prop];
                  } else {
                    values[prop] = true;
                  }
                }
              }
            });
            return values;
          },
          setItemData: function setItemData() {
            this.$set(this.MdBottomBar.items, this.id, {
              disabled: this.mdDisabled,
              options: this.mdTemplateOptions,
              props: this.getPropValues()
            });
          },
          setActiveItem: function setActiveItem($event) {
            if (!this.MdBottomBar.syncRoute) {
              this.MdBottomBar.activeItem = this.id;
            }

            if (this.MdBottomBar.type === 'shift') {
              this.MdBottomBar.mouseEvent = $event;
            }
          }
        },
        beforeCreate: function beforeCreate() {
          if (this.$router && this.$options.propsData.to) {
            var componentProps = (0, _MdRouterLinkProps2.default)(this, this.$options.props);
            this.$options.props = componentProps;
          }
        },
        created: function created() {
          this.setItemData();
        },
        beforeDestroy: function beforeDestroy() {
          this.$delete(this.MdBottomBar.items, this.id);
        }
      };
      /***/
    },
    /* 52 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdFocused = __webpack_require__(53);

      var _MdFocused2 = _interopRequireDefault(_MdFocused);

      var _MdRipple = __webpack_require__(23);

      var _MdRipple2 = _interopRequireDefault(_MdRipple);

      var _MdRouterLink = __webpack_require__(13);

      var _MdRouterLink2 = _interopRequireDefault(_MdRouterLink);

      var _MdRouterLinkProps = __webpack_require__(14);

      var _MdRouterLinkProps2 = _interopRequireDefault(_MdRouterLinkProps);

      var _MdButtonContent = __webpack_require__(232);

      var _MdButtonContent2 = _interopRequireDefault(_MdButtonContent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdButton',
        data: function data() {
          return {
            rippleActive: false
          };
        },
        components: {
          MdButtonContent: _MdButtonContent2.default
        },
        mixins: [_MdRipple2.default, _MdFocused2.default, _MdRouterLink2.default],
        props: {
          href: String,
          type: {
            type: String,
            default: 'button'
          },
          disabled: Boolean
        },
        computed: {
          rippleWorks: function rippleWorks() {
            return this.mdRipple && !this.disabled;
          },
          isRouterLink: function isRouterLink() {
            return this.$router && this.to;
          }
        },
        render: function render(createElement) {
          var _this = this;

          var buttonContent = createElement('md-button-content', {
            attrs: {
              mdRipple: this.mdRipple,
              disabled: this.disabled
            },
            props: {
              mdRippleActive: this.rippleActive
            },
            on: {
              'update:mdRippleActive': function updateMdRippleActive(active) {
                return _this.rippleActive = active;
              }
            }
          }, this.$slots.default);
          var buttonAttrs = {
            staticClass: 'md-button',
            class: [this.$mdActiveTheme, {
              'md-ripple-off': !this.mdRipple,
              'md-focused': this.mdHasFocus
            }],
            attrs: _extends({}, this.attrs, {
              href: this.href,
              disabled: this.disabled,
              type: !this.href && (this.type || 'button')
            }),
            on: _extends({}, this.$listeners, {
              touchstart: function touchstart(event) {
                if (_this.rippleWorks) {
                  _this.rippleActive = event;
                }

                _this.$listeners.touchstart && _this.$listeners.touchstart(event);
              },
              touchmove: function touchmove(event) {
                if (_this.rippleWorks) {
                  _this.rippleActive = event;
                }

                _this.$listeners.touchmove && _this.$listeners.touchmove(event);
              },
              mousedown: function mousedown(event) {
                if (_this.rippleWorks) {
                  _this.rippleActive = event;
                }

                _this.$listeners.mousedown && _this.$listeners.mousedown(event);
              }
            })
          };
          var tag = 'button';

          if (this.href) {
            tag = 'a';
          } else if (this.isRouterLink) {
            this.$options.props = (0, _MdRouterLinkProps2.default)(this, this.$options.props);
            tag = 'router-link';
            var exactActiveClass = this.$props.exactActiveClass;
            var activeClass = (this.$props.activeClass || this.$material.router.linkActiveClass) + ' md-active';
            buttonAttrs.props = _extends({}, this.$props, {
              exactActiveClass: exactActiveClass,
              activeClass: activeClass
            });
            delete buttonAttrs.props.type;
            delete buttonAttrs.attrs.type;
            delete buttonAttrs.props.href;
            delete buttonAttrs.attrs.href;
          }

          return createElement(tag, buttonAttrs, [buttonContent]);
        }
      });
      /***/
    },
    /* 53 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdReactive = __webpack_require__(31);

      var _MdReactive2 = _interopRequireDefault(_MdReactive);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      var hasEvents = false;
      var eventTarget = null;
      var supportsPassiveEvent = false;
      var MdFocused = new _MdReactive2.default({
        currentElement: null
      });

      function checkPassiveEventSupport() {
        try {
          var opts = Object.defineProperty({}, 'passive', {
            get: function get() {
              supportsPassiveEvent = {
                passive: true
              };
            }
          });
          window.addEventListener('ghost', null, opts);
        } catch (e) {}
      }

      function setKeyboardInteraction(_ref) {
        var keyCode = _ref.keyCode,
            target = _ref.target;
        MdFocused.currentElement = target;
      }

      function setMouseAndTouchInteraction(event) {
        MdFocused.currentElement = null;
      }

      function createKeyboardEvents() {
        eventTarget.addEventListener('keyup', setKeyboardInteraction);
      }

      function createPointerEvents() {
        eventTarget.addEventListener('pointerup', setMouseAndTouchInteraction);
      }

      function createMSPointerEvents() {
        eventTarget.addEventListener('MSPointerUp', setMouseAndTouchInteraction);
      }

      function createMouseAndTouchEvents() {
        eventTarget.addEventListener('mouseup', setMouseAndTouchInteraction);

        if ('ontouchend' in window) {
          eventTarget.addEventListener('touchend', setMouseAndTouchInteraction, supportsPassiveEvent);
        }
      }

      function bindEvents() {
        if (window.PointerEvent) {
          createPointerEvents();
        } else if (window.MSPointerEvent) {
          createMSPointerEvents();
        } else {
          createMouseAndTouchEvents();
        }

        createKeyboardEvents();
      }

      function createEvents() {
        if (!hasEvents) {
          eventTarget = document.body;
          checkPassiveEventSupport();
          bindEvents();
          hasEvents = true;
        }
      }

      exports.default = {
        data: function data() {
          return {
            mdHasFocus: false
          };
        },
        computed: {
          focusedElement: function focusedElement() {
            return MdFocused.currentElement;
          }
        },
        watch: {
          focusedElement: function focusedElement(el) {
            this.mdHasFocus = el === this.$el;
          }
        },
        mounted: function mounted() {
          createEvents();
        }
      };
      /***/
    },
    /* 54 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdRipple = __webpack_require__(10);

      var _MdRipple2 = _interopRequireDefault(_MdRipple);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdButtonContent',
        components: {
          MdRipple: _MdRipple2.default
        },
        props: {
          mdRipple: Boolean,
          mdRippleActive: null,
          disabled: Boolean
        }
      }; //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 55 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdCard',
        props: {
          mdWithHover: Boolean
        },
        data: function data() {
          return {
            MdCard: {
              expand: false
            }
          };
        },
        provide: function provide() {
          return {
            MdCard: this.MdCard
          };
        },
        computed: {
          cardClasses: function cardClasses() {
            return {
              'md-with-hover': this.mdWithHover,
              'md-expand-active': this.MdCard.expand
            };
          }
        }
      }); //
      //
      //
      //
      //
      //

      /***/
    },
    /* 56 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdCardArea',
        props: {
          mdInset: Boolean
        },
        computed: {
          areaClasses: function areaClasses() {
            return {
              'md-inset': this.mdInset
            };
          }
        }
      };
      /***/
    },
    /* 57 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdCardHeader'
      };
      /***/
    },
    /* 58 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdCardHeaderText',
        data: function data() {
          return {
            parentClasses: null
          };
        },
        mounted: function mounted() {
          this.parentClasses = this.$parent.$el.classList;

          if (this.parentClasses.contains('md-card-header')) {
            this.parentClasses.add('md-card-header-flex');
          }
        },
        beforeDestroy: function beforeDestroy() {
          this.parentClasses.remove('md-card-header-flex');
        }
      };
      /***/
    },
    /* 59 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _slicedToArray = function () {
        function sliceIterator(arr, i) {
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e = undefined;

          try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);

              if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;
            _e = err;
          } finally {
            try {
              if (!_n && _i["return"]) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }

          return _arr;
        }

        return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }
        };
      }();

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //


      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdCardMedia',
        props: {
          mdRatio: _extends({
            type: String
          }, (0, _MdPropValidator2.default)('md-ratio', ['16-9', '16/9', '16:9', '4-3', '4/3', '4:3', '1-1', '1/1', '1:1'])),
          mdMedium: Boolean,
          mdBig: Boolean
        },
        computed: {
          mediaClasses: function mediaClasses() {
            var classes = {};

            if (this.mdRatio) {
              var ratio = this.getAspectRatio();

              if (ratio) {
                var _ratio = _slicedToArray(ratio, 2),
                    horiz = _ratio[0],
                    vert = _ratio[1];

                classes['md-ratio-' + horiz + '-' + vert] = true;
              }
            }

            if (this.mdMedium || this.mdBig) {
              classes = {
                'md-medium': this.mdMedium,
                'md-big': this.mdBig
              };
            }

            return classes;
          }
        },
        methods: {
          getAspectRatio: function getAspectRatio() {
            var ratio = [];

            if (this.mdRatio.indexOf(':') !== -1) {
              ratio = this.mdRatio.split(':');
            } else if (this.mdRatio.indexOf('/') !== -1) {
              ratio = this.mdRatio.split('/');
            } else if (this.mdRatio.indexOf('-') !== -1) {
              ratio = this.mdRatio.split('-');
            }

            return ratio.length === 2 ? ratio : null;
          }
        }
      };
      /***/
    },
    /* 60 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdCardMediaActions'
      };
      /***/
    },
    /* 61 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdCardMediaCover',
        props: {
          mdTextScrim: Boolean,
          mdSolid: Boolean
        },
        data: function data() {
          return {
            backdropBackground: {}
          };
        },
        computed: {
          coverClasses: function coverClasses() {
            return {
              'md-text-scrim': this.mdTextScrim,
              'md-solid': this.mdSolid
            };
          },
          coverStyles: function coverStyles() {
            return {
              background: this.backdropBackground
            };
          }
        },
        methods: {
          applyScrimColor: function applyScrimColor(darkness) {
            if (this.$refs.backdrop) {
              this.backdropBackground = 'linear-gradient(to bottom, rgba(0, 0, 0, 0) 20%, rgba(0, 0, 0, ' + darkness / 2 + ') 66%, rgba(0, 0, 0, ' + darkness + ') 100%)';
            }
          },
          applySolidColor: function applySolidColor(darkness) {
            var area = this.$el.querySelector('.md-card-area');

            if (area) {
              area.style.background = 'rgba(0, 0, 0, ' + darkness + ')';
            }
          },
          getImageLightness: function getImageLightness(image, onLoad, onError) {
            var canvas = document.createElement('canvas');
            image.crossOrigin = 'Anonymous';

            image.onload = function () {
              var colorSum = 0;
              var ctx = void 0;
              var imageData = void 0;
              var imageMetadata = void 0;
              var r = void 0;
              var g = void 0;
              var b = void 0;
              var average = void 0;
              canvas.width = this.width;
              canvas.height = this.height;
              ctx = canvas.getContext('2d');
              ctx.drawImage(this, 0, 0);
              imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
              imageMetadata = imageData.data;

              for (var x = 0, len = imageMetadata.length; x < len; x += 4) {
                r = imageMetadata[x];
                g = imageMetadata[x + 1];
                b = imageMetadata[x + 2];
                average = Math.floor((r + g + b) / 3);
                colorSum += average;
              }

              onLoad(Math.floor(colorSum / (this.width * this.height)));
            };

            image.onerror = onError;
          }
        },
        mounted: function mounted() {
          var _this = this;

          var applyBackground = function applyBackground() {
            var darkness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.6;

            if (_this.mdTextScrim) {
              _this.applyScrimColor(darkness);
            } else if (_this.mdSolid) {
              _this.applySolidColor(darkness);
            }
          };

          var image = this.$el.querySelector('img');

          if (image && (this.mdTextScrim || this.mdSolid)) {
            this.getImageLightness(image, function (lightness) {
              var limit = 256;
              var darkness = (Math.abs(limit - lightness) * 100 / limit + 15) / 100;

              if (darkness >= 0.7) {
                darkness = 0.7;
              }

              applyBackground(darkness);
            }, applyBackground);
          }
        }
      };
      /***/
    },
    /* 62 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdCardContent'
      };
      /***/
    },
    /* 63 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdCardExpand',
        inject: ['MdCard']
      };
      /***/
    },
    /* 64 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _slicedToArray = function () {
        function sliceIterator(arr, i) {
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e = undefined;

          try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);

              if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;
            _e = err;
          } finally {
            try {
              if (!_n && _i["return"]) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }

          return _arr;
        }

        return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }
        };
      }();

      exports.default = {
        name: 'MdCardExpandTrigger',
        inject: ['MdCard'],
        render: function render(createElement) {
          var _this = this;

          var _$slots$default = _slicedToArray(this.$slots.default, 1),
              trigger = _$slots$default[0];

          var staticClass = ' md-card-expand-trigger';
          var listeners = {
            click: function click() {
              _this.MdCard.expand = !_this.MdCard.expand;
            }
          };

          if (trigger) {
            trigger.componentOptions.listeners = _extends({}, trigger.componentOptions.listeners, listeners);
            trigger.data.staticClass += staticClass;
            return trigger;
          }

          return createElement('div', {
            staticClass: staticClass,
            on: listeners
          });
        }
      };
      /***/
    },
    /* 65 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdObserveElement = __webpack_require__(16);

      var _MdObserveElement2 = _interopRequireDefault(_MdObserveElement);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdCardExpandContent',
        inject: ['MdCard'],
        data: function data() {
          return {
            marginTop: 0,
            resizeObserver: null,
            transitionEnabled: true
          };
        },
        computed: {
          expand: function expand() {
            return this.MdCard.expand;
          },
          contentStyles: function contentStyles() {
            return {
              'margin-top': '-' + this.marginTop + 'px',
              'opacity': this.marginTop === 0 ? 1 : 0,
              'transition-property': this.transitionEnabled ? null : 'none'
            };
          }
        },
        methods: {
          calculateMarginTop: function calculateMarginTop() {
            if (!this.expand) {
              this.marginTop = this.$el.children[0].offsetHeight;
            } else {
              this.marginTop = 0;
            }
          },
          calculateMarginTopImmediately: function calculateMarginTopImmediately() {
            var _this = this;

            if (this.expand) {
              return;
            }

            this.transitionEnabled = false;
            this.$nextTick(function () {
              _this.calculateMarginTop();

              _this.$nextTick(function () {
                // force reflow
                _this.$el.offsetHeight;
                _this.transitionEnabled = true;
              });
            });
          }
        },
        watch: {
          expand: function expand() {
            this.calculateMarginTop();
          }
        },
        mounted: function mounted() {
          this.calculateMarginTopImmediately();
          this.resizeObserver = (0, _MdObserveElement2.default)(this.$el, {
            childList: true,
            characterData: true,
            subtree: true
          }, this.calculateMarginTopImmediately);
        },
        beforeDestroy: function beforeDestroy() {
          this.resizeObserver.disconnect();
        }
      }; //
      //
      //
      //
      //
      //

      /***/
    },
    /* 66 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //


      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      var alignments = ['left', 'right', 'space-between'];
      exports.default = {
        name: 'MdCardActions',
        props: {
          mdAlignment: _extends({
            type: String,
            default: 'right'
          }, (0, _MdPropValidator2.default)('md-alignment', alignments))
        }
      };
      /***/
    },
    /* 67 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdCheckboxMixin = __webpack_require__(68);

      var _MdCheckboxMixin2 = _interopRequireDefault(_MdCheckboxMixin);

      var _MdUuid = __webpack_require__(7);

      var _MdUuid2 = _interopRequireDefault(_MdUuid);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdCheckbox',
        mixins: [_MdCheckboxMixin2.default],
        props: {
          id: {
            type: String,
            default: function _default() {
              return 'md-checkbox-' + (0, _MdUuid2.default)();
            }
          }
        }
      }); //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 68 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj;
      } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };

      var _MdRipple = __webpack_require__(10);

      var _MdRipple2 = _interopRequireDefault(_MdRipple);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        components: {
          MdRipple: _MdRipple2.default
        },
        props: {
          model: [String, Boolean, Object, Number, Array],
          value: {
            type: [String, Boolean, Object, Number]
          },
          name: [String, Number],
          required: Boolean,
          disabled: Boolean,
          indeterminate: Boolean,
          trueValue: {
            default: true
          },
          falseValue: {
            default: false
          }
        },
        model: {
          prop: 'model',
          event: 'change'
        },
        data: function data() {
          return {
            rippleActive: false
          };
        },
        computed: {
          attrs: function attrs() {
            var attrs = {
              id: this.id,
              name: this.name,
              disabled: this.disabled,
              required: this.required,
              'true-value': this.trueValue,
              'false-value': this.falseValue
            };

            if (this.$options.propsData.hasOwnProperty('value')) {
              if (this.value === null || _typeof(this.value) !== 'object') {
                attrs.value = this.value === null || this.value === undefined ? '' : String(this.value);
              }
            }

            return attrs;
          },
          isSelected: function isSelected() {
            if (this.isModelArray) {
              return this.model.includes(this.value);
            }

            if (this.hasValue) {
              return this.model === this.value;
            }

            return this.model === this.trueValue;
          },
          isModelArray: function isModelArray() {
            return Array.isArray(this.model);
          },
          checkClasses: function checkClasses() {
            return {
              'md-checked': this.isSelected,
              'md-disabled': this.disabled,
              'md-required': this.required,
              'md-indeterminate': this.indeterminate
            };
          },
          hasValue: function hasValue() {
            return this.$options.propsData.hasOwnProperty('value');
          }
        },
        methods: {
          removeItemFromModel: function removeItemFromModel(newModel) {
            var index = newModel.indexOf(this.value);

            if (index !== -1) {
              newModel.splice(index, 1);
            }
          },
          handleArrayCheckbox: function handleArrayCheckbox() {
            var newModel = this.model;

            if (!this.isSelected) {
              newModel.push(this.value);
            } else {
              this.removeItemFromModel(newModel);
            }

            this.$emit('change', newModel);
          },
          handleSingleSelectCheckbox: function handleSingleSelectCheckbox() {
            this.$emit('change', this.isSelected ? null : this.value);
          },
          handleSimpleCheckbox: function handleSimpleCheckbox() {
            this.$emit('change', this.isSelected ? this.falseValue : this.trueValue);
          },
          toggleCheck: function toggleCheck() {
            if (!this.disabled) {
              this.rippleActive = true;

              if (this.isModelArray) {
                this.handleArrayCheckbox();
              } else if (this.hasValue) {
                this.handleSingleSelectCheckbox();
              } else {
                this.handleSimpleCheckbox();
              }
            }
          }
        }
      };
      /***/
    },
    /* 69 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdField = __webpack_require__(24);

      var _MdField2 = _interopRequireDefault(_MdField);

      var _MdInput = __webpack_require__(17);

      var _MdInput2 = _interopRequireDefault(_MdInput);

      var _MdUuid = __webpack_require__(7);

      var _MdUuid2 = _interopRequireDefault(_MdUuid);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdChips',
        components: {
          MdField: _MdField2.default,
          MdInput: _MdInput2.default
        },
        props: {
          value: Array,
          id: {
            type: [String, Number],
            default: function _default() {
              return 'md-chips-' + (0, _MdUuid2.default)();
            }
          },
          mdInputType: _extends({
            type: [String, Number]
          }, (0, _MdPropValidator2.default)('md-input-type', ['email', 'number', 'password', 'search', 'tel', 'text', 'url'])),
          mdPlaceholder: [String, Number],
          mdStatic: Boolean,
          mdLimit: Number,
          mdCheckDuplicated: {
            type: Boolean,
            default: false
          },
          mdFormat: {
            type: Function
          }
        },
        data: function data() {
          return {
            inputValue: '',
            duplicatedChip: null
          };
        },
        computed: {
          chipsClasses: function chipsClasses() {
            return {
              'md-has-value': this.value && this.value.length
            };
          },
          modelRespectLimit: function modelRespectLimit() {
            return !this.mdLimit || this.value.length < this.mdLimit;
          },
          formattedInputValue: function formattedInputValue() {
            if (!this.mdFormat) {
              return this.inputValue;
            }

            return this.mdFormat(this.inputValue);
          }
        },
        methods: {
          insertChip: function insertChip(_ref) {
            var _this = this;

            var target = _ref.target;
            var inputValue = this.formattedInputValue;

            if (!inputValue || !this.modelRespectLimit) {
              return;
            }

            if (this.value.includes(inputValue)) {
              this.duplicatedChip = null; // to trigger animate

              this.$nextTick(function () {
                _this.duplicatedChip = inputValue;
              });
              return;
            }

            this.value.push(inputValue);
            this.$emit('input', this.value);
            this.$emit('md-insert', inputValue);
            this.inputValue = '';
          },
          removeChip: function removeChip(chip) {
            var _this2 = this;

            var index = this.value.indexOf(chip);
            this.value.splice(index, 1);
            this.$emit('input', this.value);
            this.$emit('md-delete', chip, index);
            this.$nextTick(function () {
              return _this2.$refs.input.$el.focus();
            });
          },
          handleBackRemove: function handleBackRemove() {
            if (!this.inputValue) {
              this.removeChip(this.value[this.value.length - 1]);
            }
          },
          handleInput: function handleInput() {
            if (this.mdCheckDuplicated) {
              this.checkDuplicated();
            } else {
              this.duplicatedChip = null;
            }
          },
          checkDuplicated: function checkDuplicated() {
            if (!this.value.includes(this.formattedInputValue)) {
              this.duplicatedChip = null;
              return false;
            }

            if (!this.mdCheckDuplicated) {
              return false;
            }

            this.duplicatedChip = this.formattedInputValue;
          }
        },
        watch: {
          value: function value() {
            this.checkDuplicated();
          }
        }
      });
      /***/
    },
    /* 70 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdClearIcon = __webpack_require__(71);

      var _MdClearIcon2 = _interopRequireDefault(_MdClearIcon);

      var _MdPasswordOffIcon = __webpack_require__(284);

      var _MdPasswordOffIcon2 = _interopRequireDefault(_MdPasswordOffIcon);

      var _MdPasswordOnIcon = __webpack_require__(286);

      var _MdPasswordOnIcon2 = _interopRequireDefault(_MdPasswordOnIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      } //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      exports.default = new _MdComponent2.default({
        name: 'MdField',
        components: {
          MdClearIcon: _MdClearIcon2.default,
          MdPasswordOffIcon: _MdPasswordOffIcon2.default,
          MdPasswordOnIcon: _MdPasswordOnIcon2.default
        },
        props: {
          mdInline: Boolean,
          mdClearable: Boolean,
          mdCounter: {
            type: Boolean,
            default: true
          },
          mdTogglePassword: {
            type: Boolean,
            default: true
          }
        },
        data: function data() {
          return {
            showPassword: false,
            MdField: {
              value: null,
              focused: false,
              highlighted: false,
              disabled: false,
              required: false,
              placeholder: false,
              textarea: false,
              autogrow: false,
              maxlength: null,
              counter: null,
              password: null,
              togglePassword: false,
              clear: false,
              file: false
            }
          };
        },
        provide: function provide() {
          return {
            MdField: this.MdField
          };
        },
        computed: {
          stringValue: function stringValue() {
            return (this.MdField.value || this.MdField.value === 0) && this.MdField.value.toString();
          },
          hasCounter: function hasCounter() {
            return this.mdCounter && (this.MdField.maxlength || this.MdField.counter);
          },
          hasPasswordToggle: function hasPasswordToggle() {
            return this.mdTogglePassword && this.MdField.password;
          },
          hasValue: function hasValue() {
            return this.stringValue && this.stringValue.length > 0;
          },
          valueLength: function valueLength() {
            if (this.stringValue) {
              return this.stringValue.length;
            }

            return 0;
          },
          fieldClasses: function fieldClasses() {
            return {
              'md-inline': this.mdInline,
              'md-clearable': this.mdClearable,
              'md-focused': this.MdField.focused,
              'md-highlight': this.MdField.highlighted,
              'md-disabled': this.MdField.disabled,
              'md-required': this.MdField.required,
              'md-has-value': this.hasValue,
              'md-has-placeholder': this.MdField.placeholder,
              'md-has-textarea': this.MdField.textarea,
              'md-has-password': this.MdField.password,
              'md-has-file': this.MdField.file,
              'md-has-select': this.MdField.select,
              'md-autogrow': this.MdField.autogrow
            };
          }
        },
        methods: {
          clearInput: function clearInput() {
            var _this = this;

            this.MdField.clear = true;
            this.$emit('md-clear');
            this.$nextTick().then(function () {
              _this.MdField.clear = false;
            });
          },
          togglePassword: function togglePassword() {
            this.MdField.togglePassword = !this.MdField.togglePassword;
          },
          onBlur: function onBlur() {
            this.MdField.highlighted = false;
          }
        }
      });
      /***/
    },
    /* 71 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdClearIcon_vue__ = __webpack_require__(72);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdClearIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdClearIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdClearIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdClearIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f53126ba_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdClearIcon_vue__ = __webpack_require__(283);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdClearIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f53126ba_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdClearIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/core/icons/MdClearIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-f53126ba", Component.options);
          } else {
            hotAPI.reload("data-v-f53126ba", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 72 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdClearIcon',
        components: {
          MdIcon: _MdIcon2.default
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 73 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdSvgLoader = __webpack_require__(279);

      var _MdSvgLoader2 = _interopRequireDefault(_MdSvgLoader);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      } //
      //
      //
      //
      //
      //
      //


      exports.default = new _MdComponent2.default({
        name: 'MdIcon',
        components: {
          MdSvgLoader: _MdSvgLoader2.default
        },
        props: {
          mdSrc: String
        }
      });
      /***/
    },
    /* 74 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //

      var mdSVGStore = {};
      exports.default = {
        name: 'MdSVGLoader',
        props: {
          mdSrc: {
            type: String,
            required: true
          }
        },
        data: function data() {
          return {
            html: null,
            error: null
          };
        },
        watch: {
          mdSrc: function mdSrc() {
            this.html = null;
            this.loadSVG();
          }
        },
        methods: {
          isSVG: function isSVG(mimetype) {
            if (typeof mimetype !== 'string') return false;
            return mimetype.indexOf('svg') >= 0;
          },
          setHtml: function setHtml(value) {
            var _this = this;

            mdSVGStore[this.mdSrc].then(function (html) {
              _this.html = html;
              return _this.$nextTick();
            }).then(function () {
              return _this.$emit('md-loaded');
            });
          },
          unexpectedError: function unexpectedError(reject) {
            this.error = 'Something bad happened trying to fetch ' + this.mdSrc + '.';
            reject(this.error);
          },
          loadSVG: function loadSVG() {
            var _this2 = this;

            if (!mdSVGStore.hasOwnProperty(this.mdSrc)) {
              mdSVGStore[this.mdSrc] = new Promise(function (resolve, reject) {
                var request = new window.XMLHttpRequest();
                request.open('GET', _this2.mdSrc, true);

                request.onload = function () {
                  var mimetype = request.getResponseHeader('content-type');

                  if (request.status === 200) {
                    if (_this2.isSVG(mimetype)) {
                      resolve(request.response);

                      _this2.setHtml();
                    } else {
                      _this2.error = 'The file ' + _this2.mdSrc + ' is not a valid SVG.';
                      reject(_this2.error);
                    }
                  } else if (request.status >= 400 && request.status < 500) {
                    _this2.error = 'The file ' + _this2.mdSrc + ' do not exists.';
                    reject(_this2.error);
                  } else {
                    _this2.unexpectedError(reject);
                  }
                };

                request.onerror = function () {
                  return _this2.unexpectedError(reject);
                };

                request.onabort = function () {
                  return _this2.unexpectedError(reject);
                };

                request.send();
              });
            } else {
              this.setHtml();
            }
          }
        },
        mounted: function mounted() {
          this.loadSVG();
        }
      };
      /***/
    },
    /* 75 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdPasswordOffIcon',
        components: {
          MdIcon: _MdIcon2.default
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 76 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdPasswordOnIcon',
        components: {
          MdIcon: _MdIcon2.default
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 77 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdUuid = __webpack_require__(7);

      var _MdUuid2 = _interopRequireDefault(_MdUuid);

      var _MdFieldMixin = __webpack_require__(18);

      var _MdFieldMixin2 = _interopRequireDefault(_MdFieldMixin);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdInput',
        mixins: [_MdFieldMixin2.default],
        inject: ['MdField'],
        props: {
          id: {
            type: String,
            default: function _default() {
              return 'md-input-' + (0, _MdUuid2.default)();
            }
          },
          type: {
            type: String,
            default: 'text'
          }
        },
        computed: {
          toggleType: function toggleType() {
            return this.MdField.togglePassword;
          },
          isPassword: function isPassword() {
            return this.type === 'password';
          },
          listeners: function listeners() {
            var l = _extends({}, this.$listeners);

            delete l.input;
            return l;
          }
        },
        watch: {
          type: function type(_type) {
            this.setPassword(this.isPassword);
          },
          toggleType: function toggleType(toggle) {
            if (toggle) {
              this.setTypeText();
            } else {
              this.setTypePassword();
            }
          }
        },
        methods: {
          setPassword: function setPassword(state) {
            this.MdField.password = state;
            this.MdField.togglePassword = false;
          },
          setTypePassword: function setTypePassword() {
            this.$el.type = 'password';
          },
          setTypeText: function setTypeText() {
            this.$el.type = 'text';
          }
        },
        created: function created() {
          this.setPassword(this.isPassword);
        },
        beforeDestroy: function beforeDestroy() {
          this.setPassword(false);
        }
      });
      /***/
    },
    /* 78 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdFocused = __webpack_require__(53);

      var _MdFocused2 = _interopRequireDefault(_MdFocused);

      var _MdRipple = __webpack_require__(23);

      var _MdRipple2 = _interopRequireDefault(_MdRipple);

      var _MdClearIcon = __webpack_require__(71);

      var _MdClearIcon2 = _interopRequireDefault(_MdClearIcon);

      var _MdButton = __webpack_require__(15);

      var _MdButton2 = _interopRequireDefault(_MdButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdChip',
        components: {
          MdButton: _MdButton2.default,
          MdClearIcon: _MdClearIcon2.default
        },
        mixins: [_MdFocused2.default, _MdRipple2.default],
        props: {
          mdDisabled: Boolean,
          mdDeletable: Boolean,
          mdClickable: Boolean,
          mdDuplicated: {
            type: Boolean,
            default: false
          }
        },
        computed: {
          chipClasses: function chipClasses() {
            return {
              'md-disabled': this.mdDisabled,
              'md-deletable': this.mdDeletable,
              'md-clickable': this.mdClickable,
              'md-focused': this.mdHasFocus,
              'md-duplicated': this.mdDuplicated
            };
          }
        }
      }); //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 79 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdContent_vue__ = __webpack_require__(80);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdContent_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdContent_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdContent_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdContent_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */


      var __vue_template__ = null;
      /* template functional */

      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdContent_vue___default.a, __vue_template__, __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdContent/MdContent.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-500cc355", Component.options);
          } else {
            hotAPI.reload("data-v-500cc355", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 80 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdContent',
        props: {
          mdTag: {
            type: String,
            default: 'div'
          }
        },
        render: function render(createElement) {
          return createElement(this.mdTag, {
            staticClass: 'md-content',
            class: [this.$mdActiveTheme],
            attrs: this.$attrs,
            on: this.$listeners
          }, this.$slots.default);
        }
      });
      /***/
    },
    /* 81 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj;
      } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _vue = __webpack_require__(8);

      var _vue2 = _interopRequireDefault(_vue);

      var _isFirefox = __webpack_require__(298);

      var _isFirefox2 = _interopRequireDefault(_isFirefox);

      var _format = __webpack_require__(299);

      var _format2 = _interopRequireDefault(_format);

      var _parse = __webpack_require__(300);

      var _parse2 = _interopRequireDefault(_parse);

      var _isValid = __webpack_require__(83);

      var _isValid2 = _interopRequireDefault(_isValid);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      var _MdOverlay = __webpack_require__(26);

      var _MdOverlay2 = _interopRequireDefault(_MdOverlay);

      var _MdDatepickerDialog = __webpack_require__(303);

      var _MdDatepickerDialog2 = _interopRequireDefault(_MdDatepickerDialog);

      var _MdDateIcon = __webpack_require__(325);

      var _MdDateIcon2 = _interopRequireDefault(_MdDateIcon);

      var _MdDebounce = __webpack_require__(327);

      var _MdDebounce2 = _interopRequireDefault(_MdDebounce);

      var _MdField = __webpack_require__(24);

      var _MdField2 = _interopRequireDefault(_MdField);

      var _MdInput = __webpack_require__(17);

      var _MdInput2 = _interopRequireDefault(_MdInput);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdDatepicker',
        components: {
          MdOverlay: _MdOverlay2.default,
          MdDateIcon: _MdDateIcon2.default,
          MdField: _MdField2.default,
          MdInput: _MdInput2.default,
          MdDatepickerDialog: _MdDatepickerDialog2.default
        },
        props: {
          value: [String, Number, Date],
          mdDisabledDates: [Array, Function],
          mdOpenOnFocus: {
            type: Boolean,
            default: true
          },
          mdOverrideNative: {
            type: Boolean,
            default: true
          },
          mdImmediately: {
            type: Boolean,
            default: false
          },
          mdModelType: _extends({
            type: Function,
            default: Date
          }, (0, _MdPropValidator2.default)('md-model-type', [Date, String, Number])),
          MdDebounce: {
            type: Number,
            default: 1000
          }
        },
        data: function data() {
          return {
            showDialog: false,
            // String for input
            inputDate: '',
            // Date for real value
            localDate: null
          };
        },
        computed: {
          locale: function locale() {
            return this.$material.locale;
          },
          type: function type() {
            return this.mdOverrideNative ? 'text' : 'date';
          },
          dateFormat: function dateFormat() {
            return this.locale.dateFormat || 'yyyy-MM-dd';
          },
          modelType: function modelType() {
            if (this.isModelTypeString) {
              return String;
            } else if (this.isModelTypeNumber) {
              return Number;
            } else if (this.isModelTypeDate) {
              return Date;
            } else {
              return this.mdModelType;
            }
          },
          isModelNull: function isModelNull() {
            return this.value === null || this.value === undefined;
          },
          isModelTypeString: function isModelTypeString() {
            return typeof this.value === 'string';
          },
          isModelTypeNumber: function isModelTypeNumber() {
            return Number.isInteger(this.value) && this.value >= 0;
          },
          isModelTypeDate: function isModelTypeDate() {
            return _typeof(this.value) === 'object' && this.value instanceof Date && (0, _isValid2.default)(this.value);
          },
          localString: function localString() {
            return this.localDate && (0, _format2.default)(this.localDate, this.dateFormat);
          },
          localNumber: function localNumber() {
            return this.localDate && Number(this.localDate);
          },
          parsedInputDate: function parsedInputDate() {
            var parsedDate = (0, _parse2.default)(this.inputDate, this.dateFormat, new Date());
            return parsedDate && (0, _isValid2.default)(parsedDate) ? parsedDate : null;
          },
          pattern: function pattern() {
            return this.dateFormat.replace(/yyyy|MM|dd/g, function (match) {
              switch (match) {
                case 'yyyy':
                  return '[0-9]{4}';

                case 'MM':
                case 'dd':
                  return '[0-9]{2}';
              }
            });
          }
        },
        watch: {
          inputDate: function inputDate(value) {
            this.inputDateToLocalDate();
          },
          localDate: function localDate() {
            this.inputDate = this.localString;

            if (this.modelType === Date) {
              this.$emit('input', this.localDate);
            }
          },
          localString: function localString() {
            if (this.modelType === String) {
              this.$emit('input', this.localString);
            }
          },
          localNumber: function localNumber() {
            if (this.modelType === Number) {
              this.$emit('input', this.localNumber);
            }
          },
          value: {
            immediate: true,
            handler: function handler() {
              this.valueDateToLocalDate();
            }
          },
          mdModelType: function mdModelType(type) {
            switch (type) {
              case Date:
                this.$emit('input', this.localDate);
                break;

              case String:
                this.$emit('input', this.localString);
                break;

              case Number:
                this.$emit('input', this.localNumber);
                break;
            }
          },
          dateFormat: function dateFormat() {
            if (this.localDate) {
              this.inputDate = (0, _format2.default)(this.localDate, this.dateFormat);
            }
          }
        },
        methods: {
          toggleDialog: function toggleDialog() {
            if (!_isFirefox2.default || this.mdOverrideNative) {
              this.showDialog = !this.showDialog;

              if (this.showDialog) {
                this.$emit('md-opened');
              } else {
                this.$emit('md-closed');
              }
            } else {
              this.$refs.input.$el.click();
            }
          },
          onFocus: function onFocus() {
            if (this.mdOpenOnFocus) {
              this.toggleDialog();
            }
          },
          inputDateToLocalDate: function inputDateToLocalDate() {
            if (this.inputDate) {
              if (this.parsedInputDate) {
                this.localDate = this.parsedInputDate;
              }
            } else {
              this.localDate = null;
            }
          },
          valueDateToLocalDate: function valueDateToLocalDate() {
            if (this.isModelNull) {
              this.localDate = null;
            } else if (this.isModelTypeNumber) {
              this.localDate = new Date(this.value);
            } else if (this.isModelTypeDate) {
              this.localDate = this.value;
            } else if (this.isModelTypeString) {
              var parsedDate = (0, _parse2.default)(this.value, this.dateFormat, new Date());

              if ((0, _isValid2.default)(parsedDate)) {
                this.localDate = (0, _parse2.default)(this.value, this.dateFormat, new Date());
              } else {
                _vue2.default.util.warn('The datepicker value is not a valid date. Given value: ' + this.value + ', format: ' + this.dateFormat);
              }
            } else {
              _vue2.default.util.warn('The datepicker value is not a valid date. Given value: ' + this.value);
            }
          }
        },
        created: function created() {
          this.inputDateToLocalDate = (0, _MdDebounce2.default)(this.inputDateToLocalDate, this.MdDebounce);
        }
      };
      /***/
    },
    /* 82 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (immutable) */

      __webpack_exports__["a"] = getTimezoneOffsetInMilliseconds;
      var MILLISECONDS_IN_MINUTE = 60000;
      /**
       * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
       * They usually appear for dates that denote time before the timezones were introduced
       * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
       * and GMT+01:00:00 after that date)
       *
       * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
       * which would lead to incorrect calculations.
       *
       * This function returns the timezone offset in milliseconds that takes seconds in account.
       */

      function getTimezoneOffsetInMilliseconds(dirtyDate) {
        var date = new Date(dirtyDate.getTime());
        var baseTimezoneOffset = date.getTimezoneOffset();
        date.setSeconds(0, 0);
        var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;
        return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;
      }
      /***/

    },
    /* 83 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (immutable) */

      __webpack_exports__["default"] = isValid;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(3);
      /**
       * @name isValid
       * @category Common Helpers
       * @summary Is the given date valid?
       *
       * @description
       * Returns false if argument is Invalid Date and true otherwise.
       * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * Invalid Date is a Date, whose time value is NaN.
       *
       * Time value of Date: http://es5.github.io/#x15.9.1.1
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - Now `isValid` doesn't throw an exception
       *   if the first argument is not an instance of Date.
       *   Instead, argument is converted beforehand using `toDate`.
       *
       *   Examples:
       *
       *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |
       *   |---------------------------|---------------|---------------|
       *   | `new Date()`              | `true`        | `true`        |
       *   | `new Date('2016-01-01')`  | `true`        | `true`        |
       *   | `new Date('')`            | `false`       | `false`       |
       *   | `new Date(1488370835081)` | `true`        | `true`        |
       *   | `new Date(NaN)`           | `false`       | `false`       |
       *   | `'2016-01-01'`            | `TypeError`   | `true`        |
       *   | `''`                      | `TypeError`   | `false`       |
       *   | `1488370835081`           | `TypeError`   | `true`        |
       *   | `NaN`                     | `TypeError`   | `false`       |
       *
       *   We introduce this change to make *date-fns* consistent with ECMAScript behavior
       *   that try to coerce arguments to the expected type
       *   (which is also the case with other *date-fns* functions).
       *
       * @param {*} date - the date to check
       * @returns {Boolean} the date is valid
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // For the valid date:
       * var result = isValid(new Date(2014, 1, 31))
       * //=> true
       *
       * @example
       * // For the value, convertable into a date:
       * var result = isValid(1393804800000)
       * //=> true
       *
       * @example
       * // For the invalid date:
       * var result = isValid(new Date(''))
       * //=> false
       */


      function isValid(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        return !isNaN(date);
      }
      /***/

    },
    /* 84 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict"; // CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js

      var formatDistanceLocale = {
        lessThanXSeconds: {
          one: 'less than a second',
          other: 'less than {{count}} seconds'
        },
        xSeconds: {
          one: '1 second',
          other: '{{count}} seconds'
        },
        halfAMinute: 'half a minute',
        lessThanXMinutes: {
          one: 'less than a minute',
          other: 'less than {{count}} minutes'
        },
        xMinutes: {
          one: '1 minute',
          other: '{{count}} minutes'
        },
        aboutXHours: {
          one: 'about 1 hour',
          other: 'about {{count}} hours'
        },
        xHours: {
          one: '1 hour',
          other: '{{count}} hours'
        },
        xDays: {
          one: '1 day',
          other: '{{count}} days'
        },
        aboutXMonths: {
          one: 'about 1 month',
          other: 'about {{count}} months'
        },
        xMonths: {
          one: '1 month',
          other: '{{count}} months'
        },
        aboutXYears: {
          one: 'about 1 year',
          other: 'about {{count}} years'
        },
        xYears: {
          one: '1 year',
          other: '{{count}} years'
        },
        overXYears: {
          one: 'over 1 year',
          other: 'over {{count}} years'
        },
        almostXYears: {
          one: 'almost 1 year',
          other: 'almost {{count}} years'
        }
      };

      function formatDistance(token, count, options) {
        options = options || {};
        var result;

        if (typeof formatDistanceLocale[token] === 'string') {
          result = formatDistanceLocale[token];
        } else if (count === 1) {
          result = formatDistanceLocale[token].one;
        } else {
          result = formatDistanceLocale[token].other.replace('{{count}}', count);
        }

        if (options.addSuffix) {
          if (options.comparison > 0) {
            return 'in ' + result;
          } else {
            return result + ' ago';
          }
        }

        return result;
      } // CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js


      function buildFormatLongFn(args) {
        return function (dirtyOptions) {
          var options = dirtyOptions || {};
          var width = options.width ? String(options.width) : args.defaultWidth;
          var format = args.formats[width] || args.formats[args.defaultWidth];
          return format;
        };
      } // CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js


      var dateFormats = {
        full: 'EEEE, MMMM do, y',
        long: 'MMMM do, y',
        medium: 'MMM d, y',
        short: 'MM/dd/yyyy'
      };
      var timeFormats = {
        full: 'h:mm:ss a zzzz',
        long: 'h:mm:ss a z',
        medium: 'h:mm:ss a',
        short: 'h:mm a'
      };
      var dateTimeFormats = {
        full: "{{date}} 'at' {{time}}",
        long: "{{date}} 'at' {{time}}",
        medium: '{{date}}, {{time}}',
        short: '{{date}}, {{time}}'
      };
      var formatLong = {
        date: buildFormatLongFn({
          formats: dateFormats,
          defaultWidth: 'full'
        }),
        time: buildFormatLongFn({
          formats: timeFormats,
          defaultWidth: 'full'
        }),
        dateTime: buildFormatLongFn({
          formats: dateTimeFormats,
          defaultWidth: 'full'
        })
        /* harmony default export */

      };
      var _lib_formatLong = formatLong; // CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js

      var formatRelativeLocale = {
        lastWeek: "'last' eeee 'at' p",
        yesterday: "'yesterday at' p",
        today: "'today at' p",
        tomorrow: "'tomorrow at' p",
        nextWeek: "eeee 'at' p",
        other: 'P'
      };

      function formatRelative(token, date, baseDate, options) {
        return formatRelativeLocale[token];
      } // CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js


      function buildLocalizeFn(args) {
        return function (dirtyIndex, dirtyOptions) {
          var options = dirtyOptions || {};
          var width = options.width ? String(options.width) : args.defaultWidth;
          var context = options.context ? String(options.context) : 'standalone';
          var valuesArray;

          if (context === 'formatting' && args.formattingValues) {
            valuesArray = args.formattingValues[width] || args.formattingValues[args.defaultFormattingWidth];
          } else {
            valuesArray = args.values[width] || args.values[args.defaultWidth];
          }

          var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
          return valuesArray[index];
        };
      } // CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js


      var eraValues = {
        narrow: ['B', 'A'],
        abbreviated: ['BC', 'AD'],
        wide: ['Before Christ', 'Anno Domini']
      };
      var quarterValues = {
        narrow: ['1', '2', '3', '4'],
        abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
        wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.
        // If you are making a new locale based on this one, check if the same is true for the language you're working on.
        // Generally, formatted dates should look like they are in the middle of a sentence,
        // e.g. in Spanish language the weekdays and months should be in the lowercase.

      };
      var monthValues = {
        narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
        abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
        wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
      };
      var dayValues = {
        narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
        short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
        abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
        wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
      };
      var dayPeriodValues = {
        narrow: {
          am: 'a',
          pm: 'p',
          midnight: 'mi',
          noon: 'n',
          morning: 'morning',
          afternoon: 'afternoon',
          evening: 'evening',
          night: 'night'
        },
        abbreviated: {
          am: 'AM',
          pm: 'PM',
          midnight: 'midnight',
          noon: 'noon',
          morning: 'morning',
          afternoon: 'afternoon',
          evening: 'evening',
          night: 'night'
        },
        wide: {
          am: 'a.m.',
          pm: 'p.m.',
          midnight: 'midnight',
          noon: 'noon',
          morning: 'morning',
          afternoon: 'afternoon',
          evening: 'evening',
          night: 'night'
        }
      };
      var formattingDayPeriodValues = {
        narrow: {
          am: 'a',
          pm: 'p',
          midnight: 'mi',
          noon: 'n',
          morning: 'in the morning',
          afternoon: 'in the afternoon',
          evening: 'in the evening',
          night: 'at night'
        },
        abbreviated: {
          am: 'AM',
          pm: 'PM',
          midnight: 'midnight',
          noon: 'noon',
          morning: 'in the morning',
          afternoon: 'in the afternoon',
          evening: 'in the evening',
          night: 'at night'
        },
        wide: {
          am: 'a.m.',
          pm: 'p.m.',
          midnight: 'midnight',
          noon: 'noon',
          morning: 'in the morning',
          afternoon: 'in the afternoon',
          evening: 'in the evening',
          night: 'at night'
        }
      };

      function ordinalNumber(dirtyNumber, dirtyOptions) {
        var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
        // if they are different for different grammatical genders,
        // use `options.unit`:
        //
        //   var options = dirtyOptions || {}
        //   var unit = String(options.unit)
        //
        // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
        // 'day', 'hour', 'minute', 'second'

        var rem100 = number % 100;

        if (rem100 > 20 || rem100 < 10) {
          switch (rem100 % 10) {
            case 1:
              return number + 'st';

            case 2:
              return number + 'nd';

            case 3:
              return number + 'rd';
          }
        }

        return number + 'th';
      }

      var localize = {
        ordinalNumber: ordinalNumber,
        era: buildLocalizeFn({
          values: eraValues,
          defaultWidth: 'wide'
        }),
        quarter: buildLocalizeFn({
          values: quarterValues,
          defaultWidth: 'wide',
          argumentCallback: function (quarter) {
            return Number(quarter) - 1;
          }
        }),
        month: buildLocalizeFn({
          values: monthValues,
          defaultWidth: 'wide'
        }),
        day: buildLocalizeFn({
          values: dayValues,
          defaultWidth: 'wide'
        }),
        dayPeriod: buildLocalizeFn({
          values: dayPeriodValues,
          defaultWidth: 'wide',
          formattingValues: formattingDayPeriodValues,
          defaultFormattingWidth: 'wide'
        })
        /* harmony default export */

      };
      var _lib_localize = localize; // CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js

      function buildMatchPatternFn(args) {
        return function (dirtyString, dirtyOptions) {
          var string = String(dirtyString);
          var options = dirtyOptions || {};
          var matchResult = string.match(args.matchPattern);

          if (!matchResult) {
            return null;
          }

          var matchedString = matchResult[0];
          var parseResult = string.match(args.parsePattern);

          if (!parseResult) {
            return null;
          }

          var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
          value = options.valueCallback ? options.valueCallback(value) : value;
          return {
            value: value,
            rest: string.slice(matchedString.length)
          };
        };
      } // CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js


      function buildMatchFn(args) {
        return function (dirtyString, dirtyOptions) {
          var string = String(dirtyString);
          var options = dirtyOptions || {};
          var width = options.width;
          var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
          var matchResult = string.match(matchPattern);

          if (!matchResult) {
            return null;
          }

          var matchedString = matchResult[0];
          var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
          var value;

          if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {
            value = parsePatterns.findIndex(function (pattern) {
              return pattern.test(string);
            });
          } else {
            value = findKey(parsePatterns, function (pattern) {
              return pattern.test(string);
            });
          }

          value = args.valueCallback ? args.valueCallback(value) : value;
          value = options.valueCallback ? options.valueCallback(value) : value;
          return {
            value: value,
            rest: string.slice(matchedString.length)
          };
        };
      }

      function findKey(object, predicate) {
        for (var key in object) {
          if (object.hasOwnProperty(key) && predicate(object[key])) {
            return key;
          }
        }
      } // CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js


      var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
      var parseOrdinalNumberPattern = /\d+/i;
      var matchEraPatterns = {
        narrow: /^(b|a)/i,
        abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
        wide: /^(before christ|before common era|anno domini|common era)/i
      };
      var parseEraPatterns = {
        any: [/^b/i, /^(a|c)/i]
      };
      var matchQuarterPatterns = {
        narrow: /^[1234]/i,
        abbreviated: /^q[1234]/i,
        wide: /^[1234](th|st|nd|rd)? quarter/i
      };
      var parseQuarterPatterns = {
        any: [/1/i, /2/i, /3/i, /4/i]
      };
      var matchMonthPatterns = {
        narrow: /^[jfmasond]/i,
        abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
        wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
      };
      var parseMonthPatterns = {
        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
        any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
      };
      var matchDayPatterns = {
        narrow: /^[smtwf]/i,
        short: /^(su|mo|tu|we|th|fr|sa)/i,
        abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
        wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
      };
      var parseDayPatterns = {
        narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
        any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
      };
      var matchDayPeriodPatterns = {
        narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
        any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
      };
      var parseDayPeriodPatterns = {
        any: {
          am: /^a/i,
          pm: /^p/i,
          midnight: /^mi/i,
          noon: /^no/i,
          morning: /morning/i,
          afternoon: /afternoon/i,
          evening: /evening/i,
          night: /night/i
        }
      };
      var match = {
        ordinalNumber: buildMatchPatternFn({
          matchPattern: matchOrdinalNumberPattern,
          parsePattern: parseOrdinalNumberPattern,
          valueCallback: function (value) {
            return parseInt(value, 10);
          }
        }),
        era: buildMatchFn({
          matchPatterns: matchEraPatterns,
          defaultMatchWidth: 'wide',
          parsePatterns: parseEraPatterns,
          defaultParseWidth: 'any'
        }),
        quarter: buildMatchFn({
          matchPatterns: matchQuarterPatterns,
          defaultMatchWidth: 'wide',
          parsePatterns: parseQuarterPatterns,
          defaultParseWidth: 'any',
          valueCallback: function (index) {
            return index + 1;
          }
        }),
        month: buildMatchFn({
          matchPatterns: matchMonthPatterns,
          defaultMatchWidth: 'wide',
          parsePatterns: parseMonthPatterns,
          defaultParseWidth: 'any'
        }),
        day: buildMatchFn({
          matchPatterns: matchDayPatterns,
          defaultMatchWidth: 'wide',
          parsePatterns: parseDayPatterns,
          defaultParseWidth: 'any'
        }),
        dayPeriod: buildMatchFn({
          matchPatterns: matchDayPeriodPatterns,
          defaultMatchWidth: 'any',
          parsePatterns: parseDayPeriodPatterns,
          defaultParseWidth: 'any'
        })
        /* harmony default export */

      };
      var _lib_match = match; // CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/index.js

      /**
       * @type {Locale}
       * @category Locales
       * @summary English locale (United States).
       * @language English
       * @iso-639-2 eng
       * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
       * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
       */

      var locale = {
        formatDistance: formatDistance,
        formatLong: _lib_formatLong,
        formatRelative: formatRelative,
        localize: _lib_localize,
        match: _lib_match,
        options: {
          weekStartsOn: 0
          /* Sunday */
          ,
          firstWeekContainsDate: 1
        }
        /* harmony default export */

      };
      var en_US = __webpack_exports__["a"] = locale;
      /***/
    },
    /* 85 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict"; // EXTERNAL MODULE: ./node_modules/date-fns/esm/toDate/index.js

      var toDate = __webpack_require__(3); // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js


      var startOfUTCISOWeek = __webpack_require__(19); // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js


      var getUTCISOWeekYear = __webpack_require__(86); // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js
      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function startOfUTCISOWeekYear(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var year = Object(getUTCISOWeekYear["a"
        /* default */
        ])(dirtyDate);
        var fourthOfJanuary = new Date(0);
        fourthOfJanuary.setUTCFullYear(year, 0, 4);
        fourthOfJanuary.setUTCHours(0, 0, 0, 0);
        var date = Object(startOfUTCISOWeek["a"
        /* default */
        ])(fourthOfJanuary);
        return date;
      } // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js

      /* harmony export (immutable) */


      __webpack_exports__["a"] = getUTCISOWeek;
      var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376

      function getUTCISOWeek(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var date = Object(toDate["a"
        /* default */
        ])(dirtyDate);
        var diff = Object(startOfUTCISOWeek["a"
        /* default */
        ])(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer
        // because the number of milliseconds in a week is not constant
        // (e.g. it's different in the week of the daylight saving time clock shift)

        return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
      }
      /***/

    },
    /* 86 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (immutable) */

      __webpack_exports__["a"] = getUTCISOWeekYear;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__ = __webpack_require__(19); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function getUTCISOWeekYear(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        var year = date.getUTCFullYear();
        var fourthOfJanuaryOfNextYear = new Date(0);
        fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
        fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
        var startOfNextYear = Object(__WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__["a"
        /* default */
        ])(fourthOfJanuaryOfNextYear);
        var fourthOfJanuaryOfThisYear = new Date(0);
        fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
        fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
        var startOfThisYear = Object(__WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__["a"
        /* default */
        ])(fourthOfJanuaryOfThisYear);

        if (date.getTime() >= startOfNextYear.getTime()) {
          return year + 1;
        } else if (date.getTime() >= startOfThisYear.getTime()) {
          return year;
        } else {
          return year - 1;
        }
      }
      /***/

    },
    /* 87 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict"; // EXTERNAL MODULE: ./node_modules/date-fns/esm/toDate/index.js

      var toDate = __webpack_require__(3); // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js


      var startOfUTCWeek = __webpack_require__(20); // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/toInteger/index.js


      var toInteger = __webpack_require__(5); // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js


      var getUTCWeekYear = __webpack_require__(25); // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js
      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(toInteger["a"
        /* default */
        ])(localeFirstWeekContainsDate);
        var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(toInteger["a"
        /* default */
        ])(options.firstWeekContainsDate);
        var year = Object(getUTCWeekYear["a"
        /* default */
        ])(dirtyDate, dirtyOptions);
        var firstWeek = new Date(0);
        firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
        firstWeek.setUTCHours(0, 0, 0, 0);
        var date = Object(startOfUTCWeek["a"
        /* default */
        ])(firstWeek, dirtyOptions);
        return date;
      } // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/getUTCWeek/index.js

      /* harmony export (immutable) */


      __webpack_exports__["a"] = getUTCWeek;
      var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376

      function getUTCWeek(dirtyDate, options) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var date = Object(toDate["a"
        /* default */
        ])(dirtyDate);
        var diff = Object(startOfUTCWeek["a"
        /* default */
        ])(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer
        // because the number of milliseconds in a week is not constant
        // (e.g. it's different in the week of the daylight saving time clock shift)

        return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
      }
      /***/

    },
    /* 88 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict"; // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/toInteger/index.js

      var toInteger = __webpack_require__(5); // EXTERNAL MODULE: ./node_modules/date-fns/esm/toDate/index.js


      var toDate = __webpack_require__(3); // CONCATENATED MODULE: ./node_modules/date-fns/esm/addMilliseconds/index.js

      /**
       * @name addMilliseconds
       * @category Millisecond Helpers
       * @summary Add the specified number of milliseconds to the given date.
       *
       * @description
       * Add the specified number of milliseconds to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of milliseconds to be added
       * @returns {Date} the new date with the milliseconds added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
       * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
       * //=> Thu Jul 10 2014 12:45:30.750
       */


      function addMilliseconds(dirtyDate, dirtyAmount) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var timestamp = Object(toDate["a"
        /* default */
        ])(dirtyDate).getTime();
        var amount = Object(toInteger["a"
        /* default */
        ])(dirtyAmount);
        return new Date(timestamp + amount);
      } // CONCATENATED MODULE: ./node_modules/date-fns/esm/subMilliseconds/index.js

      /* harmony export (immutable) */


      __webpack_exports__["a"] = subMilliseconds;
      /**
       * @name subMilliseconds
       * @category Millisecond Helpers
       * @summary Subtract the specified number of milliseconds from the given date.
       *
       * @description
       * Subtract the specified number of milliseconds from the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of milliseconds to be subtracted
       * @returns {Date} the new date with the milliseconds subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
       * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
       * //=> Thu Jul 10 2014 12:45:29.250
       */

      function subMilliseconds(dirtyDate, dirtyAmount) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var amount = Object(toInteger["a"
        /* default */
        ])(dirtyAmount);
        return addMilliseconds(dirtyDate, -amount);
      }
      /***/

    },
    /* 89 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export protectedTokens */

      /* harmony export (immutable) */

      __webpack_exports__["a"] = isProtectedToken;
      /* harmony export (immutable) */

      __webpack_exports__["b"] = throwProtectedError;
      var protectedTokens = ['D', 'DD', 'YY', 'YYYY'];

      function isProtectedToken(token) {
        return protectedTokens.indexOf(token) !== -1;
      }

      function throwProtectedError(token) {
        throw new RangeError('`options.awareOfUnicodeTokens` must be set to `true` to use `' + token + '` token; see: https://git.io/fxCyr');
      }
      /***/

    },
    /* 90 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdPortal = __webpack_require__(21);

      var _MdPortal2 = _interopRequireDefault(_MdPortal);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdOverlay',
        components: {
          MdPortal: _MdPortal2.default
        },
        props: {
          mdActive: Boolean,
          mdAttachToParent: Boolean,
          mdFixed: Boolean
        },
        computed: {
          overlayClasses: function overlayClasses() {
            return {
              'md-fixed': this.mdFixed
            };
          }
        }
      }; //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 91 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _addMonths = __webpack_require__(92);

      var _addMonths2 = _interopRequireDefault(_addMonths);

      var _startOfMonth = __webpack_require__(305);

      var _startOfMonth2 = _interopRequireDefault(_startOfMonth);

      var _subMonths = __webpack_require__(306);

      var _subMonths2 = _interopRequireDefault(_subMonths);

      var _getDate = __webpack_require__(307);

      var _getDate2 = _interopRequireDefault(_getDate);

      var _getDay = __webpack_require__(308);

      var _getDay2 = _interopRequireDefault(_getDay);

      var _getDaysInMonth = __webpack_require__(27);

      var _getDaysInMonth2 = _interopRequireDefault(_getDaysInMonth);

      var _getMonth = __webpack_require__(309);

      var _getMonth2 = _interopRequireDefault(_getMonth);

      var _getYear = __webpack_require__(310);

      var _getYear2 = _interopRequireDefault(_getYear);

      var _isEqual = __webpack_require__(311);

      var _isEqual2 = _interopRequireDefault(_isEqual);

      var _isSameDay = __webpack_require__(312);

      var _isSameDay2 = _interopRequireDefault(_isSameDay);

      var _setDate = __webpack_require__(313);

      var _setDate2 = _interopRequireDefault(_setDate);

      var _setMonth = __webpack_require__(314);

      var _setMonth2 = _interopRequireDefault(_setMonth);

      var _setYear = __webpack_require__(315);

      var _setYear2 = _interopRequireDefault(_setYear);

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdPopover = __webpack_require__(28);

      var _MdPopover2 = _interopRequireDefault(_MdPopover);

      var _MdArrowRightIcon = __webpack_require__(318);

      var _MdArrowRightIcon2 = _interopRequireDefault(_MdArrowRightIcon);

      var _MdArrowLeftIcon = __webpack_require__(320);

      var _MdArrowLeftIcon2 = _interopRequireDefault(_MdArrowLeftIcon);

      var _MdDialog = __webpack_require__(12);

      var _MdDialog2 = _interopRequireDefault(_MdDialog);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      } //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var daysInAWeek = 7;

      var getElements = function getElements(el, selector) {
        if (el && el.querySelector) {
          return el.querySelectorAll(selector);
        }

        return false;
      };

      exports.default = new _MdComponent2.default({
        name: 'MdDatepickerDialog',
        components: {
          MdPopover: _MdPopover2.default,
          MdArrowRightIcon: _MdArrowRightIcon2.default,
          MdArrowLeftIcon: _MdArrowLeftIcon2.default,
          MdDialog: _MdDialog2.default
        },
        props: {
          mdDate: Date,
          mdDisabledDates: [Array, Function],
          mdImmediately: {
            type: Boolean,
            default: false
          }
        },
        data: function data() {
          return {
            currentDate: null,
            selectedDate: null,
            showDialog: false,
            monthAction: null,
            currentView: 'day',
            contentStyles: {},
            availableYears: null
          };
        },
        computed: {
          firstDayOfAWeek: function firstDayOfAWeek() {
            // normalize
            var firstDayOfAWeek = Number(this.locale.firstDayOfAWeek);

            if (Number.isNaN(firstDayOfAWeek) || !Number.isFinite(firstDayOfAWeek)) {
              return 0;
            }

            firstDayOfAWeek = Math.floor(firstDayOfAWeek) % daysInAWeek;
            firstDayOfAWeek += firstDayOfAWeek < 0 ? daysInAWeek : 0;
            return firstDayOfAWeek;
          },
          locale: function locale() {
            return this.$material.locale;
          },
          popperSettings: function popperSettings() {
            return {
              placement: 'bottom-start',
              modifiers: {
                keepTogether: {
                  enabled: true
                },
                flip: {
                  enabled: false
                }
              }
            };
          },
          calendarClasses: function calendarClasses() {
            if (this.monthAction === 'next') {
              return 'md-next';
            }

            return 'md-previous';
          },
          firstDayOfMonth: function firstDayOfMonth() {
            return (0, _startOfMonth2.default)(this.currentDate).getDay();
          },
          prefixEmptyDays: function prefixEmptyDays() {
            var prefixEmptyDays = this.firstDayOfMonth - this.firstDayOfAWeek;
            prefixEmptyDays += prefixEmptyDays < 0 ? daysInAWeek : 0;
            return prefixEmptyDays;
          },
          daysInMonth: function daysInMonth() {
            return (0, _getDaysInMonth2.default)(this.currentDate);
          },
          currentDay: function currentDay() {
            if (this.selectedDate) {
              return (0, _getDate2.default)(this.selectedDate);
            }

            return (0, _getDate2.default)(this.currentDate);
          },
          currentMonth: function currentMonth() {
            return (0, _getMonth2.default)(this.currentDate);
          },
          currentMonthName: function currentMonthName() {
            return this.locale.months[this.currentMonth];
          },
          currentYear: function currentYear() {
            return (0, _getYear2.default)(this.currentDate);
          },
          selectedYear: function selectedYear() {
            if (this.selectedDate) {
              return (0, _getYear2.default)(this.selectedDate);
            }

            return (0, _getYear2.default)(this.currentDate);
          },
          shortDayName: function shortDayName() {
            if (this.selectedDate) {
              return this.locale.shortDays[(0, _getDay2.default)(this.selectedDate)];
            }

            return this.locale.shortDays[(0, _getDay2.default)(this.currentDate)];
          },
          shortMonthName: function shortMonthName() {
            if (this.selectedDate) {
              return this.locale.shortMonths[(0, _getMonth2.default)(this.selectedDate)];
            }

            return this.locale.shortMonths[(0, _getMonth2.default)(this.currentDate)];
          }
        },
        watch: {
          mdDate: function mdDate() {
            this.currentDate = this.mdDate || new Date();
            this.selectedDate = this.mdDate;
          },
          currentDate: function currentDate(next, previous) {
            var _this = this;

            this.$nextTick().then(function () {
              if (previous) {
                _this.setContentStyles();
              }
            });
          },
          currentView: function currentView() {
            var _this2 = this;

            this.$nextTick().then(function () {
              if (_this2.currentView === 'year') {
                var activeYear = getElements(_this2.$el, '.md-datepicker-year-button.md-datepicker-selected');

                if (activeYear.length) {
                  activeYear[0].scrollIntoView({
                    behavior: 'instant',
                    block: 'center',
                    inline: 'center'
                  });
                }
              }
            });
          }
        },
        methods: {
          setContentStyles: function setContentStyles() {
            var months = getElements(this.$el, '.md-datepicker-month');

            if (months.length) {
              var nextMonth = months[months.length - 1];
              this.contentStyles = {
                height: nextMonth.offsetHeight + 10 + 'px'
              };
            }
          },
          setAvailableYears: function setAvailableYears() {
            var _locale = this.locale,
                startYear = _locale.startYear,
                endYear = _locale.endYear;
            var counter = startYear;
            var years = [];

            while (counter <= endYear) {
              years.push(counter++);
            }

            this.availableYears = years;
          },
          handleDisabledDateByArray: function handleDisabledDateByArray(date) {
            return this.mdDisabledDates.some(function (disabledDate) {
              return (0, _isSameDay2.default)(disabledDate, date);
            });
          },
          isDisabled: function isDisabled(day) {
            if (this.mdDisabledDates) {
              var targetDate = (0, _setDate2.default)(this.currentDate, day);

              if (Array.isArray(this.mdDisabledDates)) {
                return this.handleDisabledDateByArray(targetDate);
              } else if (typeof this.mdDisabledDates === 'function') {
                return this.mdDisabledDates(targetDate);
              }
            }
          },
          isSelectedDay: function isSelectedDay(day) {
            return (0, _isEqual2.default)(this.selectedDate, (0, _setDate2.default)(this.currentDate, day));
          },
          isToday: function isToday(day) {
            return (0, _isSameDay2.default)(new Date(), (0, _setDate2.default)(this.currentDate, day));
          },
          previousMonth: function previousMonth() {
            this.monthAction = 'previous';
            this.currentDate = (0, _subMonths2.default)(this.currentDate, 1);
          },
          nextMonth: function nextMonth() {
            this.monthAction = 'next';
            this.currentDate = (0, _addMonths2.default)(this.currentDate, 1);
          },
          switchMonth: function switchMonth(index) {
            this.currentDate = (0, _setMonth2.default)(this.currentDate, index);
            this.currentView = 'day';
          },
          switchYear: function switchYear(year) {
            this.currentDate = (0, _setYear2.default)(this.currentDate, year);
            this.currentView = 'month';
          },
          selectDate: function selectDate(day) {
            this.currentDate = (0, _setDate2.default)(this.currentDate, day);
            this.selectedDate = this.currentDate;

            if (this.mdImmediately) {
              this.$emit('update:mdDate', this.selectedDate);
              this.closeDialog();
            }
          },
          closeDialog: function closeDialog() {
            this.$emit('md-closed');
          },
          onClose: function onClose() {
            this.closeDialog();
          },
          onCancel: function onCancel() {
            this.closeDialog();
          },
          onConfirm: function onConfirm() {
            this.$emit('update:mdDate', this.selectedDate);
            this.closeDialog();
          },
          resetDate: function resetDate() {
            this.currentDate = this.mdDate || new Date();
            this.selectedDate = this.mdDate;
            this.currentView = 'day';
          }
        },
        created: function created() {
          this.setAvailableYears();
          this.resetDate();
        }
      });
      /***/
    },
    /* 92 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (immutable) */

      __webpack_exports__["default"] = addMonths;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__getDaysInMonth_index_js__ = __webpack_require__(27);
      /**
       * @name addMonths
       * @category Month Helpers
       * @summary Add the specified number of months to the given date.
       *
       * @description
       * Add the specified number of months to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of months to be added
       * @returns {Date} the new date with the months added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add 5 months to 1 September 2014:
       * var result = addMonths(new Date(2014, 8, 1), 5)
       * //=> Sun Feb 01 2015 00:00:00
       */


      function addMonths(dirtyDate, dirtyAmount) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        var amount = Object(__WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__["a"
        /* default */
        ])(dirtyAmount);
        var desiredMonth = date.getMonth() + amount;
        var dateWithDesiredMonth = new Date(0);
        dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1);
        dateWithDesiredMonth.setHours(0, 0, 0, 0);
        var daysInMonth = Object(__WEBPACK_IMPORTED_MODULE_2__getDaysInMonth_index_js__["default"])(dateWithDesiredMonth); // Set the last day of the new month
        // if the original date was the last day of the longer month

        date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()));
        return date;
      }
      /***/

    },
    /* 93 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _popper = __webpack_require__(317);

      var _popper2 = _interopRequireDefault(_popper);

      var _deepmerge = __webpack_require__(35);

      var _deepmerge2 = _interopRequireDefault(_deepmerge);

      var _MdPortal = __webpack_require__(21);

      var _MdPortal2 = _interopRequireDefault(_MdPortal);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdPopover',
        abstract: true,
        components: {
          MdPortal: _MdPortal2.default
        },
        props: {
          mdActive: Boolean,
          mdSettings: {
            type: Object,
            default: function _default() {
              return {};
            }
          }
        },
        data: function data() {
          return {
            popperInstance: null,
            originalParentEl: null,
            shouldRender: false,
            shouldActivate: false
          };
        },
        computed: {
          popoverClasses: function popoverClasses() {
            if (this.shouldActivate) {
              return 'md-active';
            } else if (this.shouldRender) {
              return 'md-rendering';
            }
          }
        },
        watch: {
          mdActive: {
            immediate: true,
            handler: function handler(shouldRender) {
              this.shouldRender = shouldRender;

              if (shouldRender) {
                this.bindPopper();
              } else {
                this.shouldActivate = false;
              }
            }
          },
          mdSettings: function mdSettings() {
            if (this.popperInstance) {
              this.createPopper();
            }
          }
        },
        methods: {
          getPopperOptions: function getPopperOptions() {
            var _this = this;

            return {
              placement: 'bottom',
              modifiers: {
                preventOverflow: {
                  boundariesElement: 'viewport',
                  padding: 16
                },
                computeStyle: {
                  gpuAcceleration: false
                }
              },
              onCreate: function onCreate() {
                _this.shouldActivate = true;

                _this.$emit('md-active');
              }
            };
          },
          setOriginalParent: function setOriginalParent(el) {
            if (!this.originalParentEl) {
              this.originalParentEl = el;
            }
          },
          killPopper: function killPopper() {
            if (this.popperInstance) {
              this.popperInstance.destroy();
              this.popperInstance = null;
            }
          },
          bindPopper: function bindPopper() {
            var _this2 = this;

            this.$nextTick().then(function () {
              if (_this2.originalParentEl) {
                _this2.createPopper();
              }
            });
          },
          createPopper: function createPopper() {
            if (this.mdSettings) {
              var options = (0, _deepmerge2.default)(this.getPopperOptions(), this.mdSettings);

              if (this.$el.nodeType !== Node.COMMENT_NODE) {
                this.popperInstance = new _popper2.default(this.originalParentEl, this.$el, options);
              }
            }
          },
          resetPopper: function resetPopper() {
            if (this.popperInstance) {
              this.killPopper();
              this.createPopper();
            }
          }
        },
        beforeDestroy: function beforeDestroy() {
          this.killPopper();
        },
        mounted: function mounted() {
          this.resetPopper();
        },
        render: function render(createElement) {
          return createElement(_MdPortal2.default, {
            props: _extends({}, this.$attrs),
            on: _extends({}, this.$listeners, {
              'md-initial-parent': this.setOriginalParent,
              'md-destroy': this.killPopper
            })
          }, this.$slots.default);
        }
      };
      /***/
    },
    /* 94 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdArrowRightIcon',
        components: {
          MdIcon: _MdIcon2.default
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 95 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdArrowLeftIcon',
        components: {
          MdIcon: _MdIcon2.default
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 96 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdPortal = __webpack_require__(21);

      var _MdPortal2 = _interopRequireDefault(_MdPortal);

      var _MdOverlay = __webpack_require__(26);

      var _MdOverlay2 = _interopRequireDefault(_MdOverlay);

      var _MdFocusTrap = __webpack_require__(97);

      var _MdFocusTrap2 = _interopRequireDefault(_MdFocusTrap);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      } //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      exports.default = new _MdComponent2.default({
        name: 'MdDialog',
        components: {
          MdPortal: _MdPortal2.default,
          MdOverlay: _MdOverlay2.default,
          MdFocusTrap: _MdFocusTrap2.default
        },
        props: {
          mdActive: Boolean,
          mdBackdrop: {
            type: Boolean,
            default: true
          },
          mdBackdropClass: {
            type: String,
            default: 'md-dialog-overlay'
          },
          mdCloseOnEsc: {
            type: Boolean,
            default: true
          },
          mdClickOutsideToClose: {
            type: Boolean,
            default: true
          },
          mdFullscreen: {
            type: Boolean,
            default: true
          },
          mdAnimateFromSource: Boolean
        },
        computed: {
          dialogClasses: function dialogClasses() {
            return {
              'md-dialog-fullscreen': this.mdFullscreen
            };
          }
        },
        watch: {
          mdActive: function mdActive(isActive) {
            var _this = this;

            this.$nextTick().then(function () {
              if (isActive) {
                _this.$emit('md-opened');
              } else {
                _this.$emit('md-closed');
              }
            });
          }
        },
        methods: {
          closeDialog: function closeDialog() {
            this.$emit('update:mdActive', false);
          },
          onClick: function onClick() {
            if (this.mdClickOutsideToClose) {
              this.closeDialog();
            }

            this.$emit('md-clicked-outside');
          },
          onEsc: function onEsc() {
            if (this.mdCloseOnEsc) {
              this.closeDialog();
            }
          }
        }
      });
      /***/
    },
    /* 97 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _vue = __webpack_require__(8);

      var _vue2 = _interopRequireDefault(_vue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdFocusTrap',
        abstract: true,
        methods: {
          setFocus: function setFocus() {
            var _this = this;

            window.setTimeout(function () {
              if (_this.$el.tagName) {
                _this.$el.setAttribute('tabindex', '-1');

                _this.$el.focus();
              }
            }, 20);
          }
        },
        mounted: function mounted() {
          this.setFocus();
        },
        render: function render() {
          try {
            var defaultSlot = this.$slots.default;

            if (!defaultSlot) {
              return null;
            }

            if (defaultSlot.length > 1) {
              throw new Error();
            }

            return defaultSlot[0];
          } catch (e) {
            _vue2.default.util.warn('MdFocusTrap can only render one, and exactly one child component.', this);
          }

          return null;
        }
      };
      /***/
    },
    /* 98 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdDateIcon',
        components: {
          MdIcon: _MdIcon2.default
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 99 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdDialogTitle'
      };
      /***/
    },
    /* 100 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdDialogContent'
      }); //
      //
      //
      //
      //
      //

      /***/
    },
    /* 101 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdDialogActions'
      };
      /***/
    },
    /* 102 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdDialogAlert',
        props: {
          mdTitle: String,
          mdContent: String,
          mdConfirmText: {
            type: String,
            default: 'Ok'
          }
        }
      };
      /***/
    },
    /* 103 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdDialogConfirm',
        props: {
          mdTitle: String,
          mdContent: String,
          mdConfirmText: {
            type: String,
            default: 'Ok'
          },
          mdCancelText: {
            type: String,
            default: 'Cancel'
          }
        },
        methods: {
          onCancel: function onCancel() {
            this.$emit('md-cancel');
            this.$emit('update:mdActive', false);
          },
          onConfirm: function onConfirm() {
            this.$emit('md-confirm');
            this.$emit('update:mdActive', false);
          }
        }
      };
      /***/
    },
    /* 104 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdDialogPrompt',
        props: {
          value: {},
          mdTitle: String,
          mdInputName: String,
          mdInputId: String,
          mdInputMaxlength: [String, Number],
          mdInputPlaceholder: [String, Number],
          mdContent: String,
          mdConfirmText: {
            type: String,
            default: 'Ok'
          },
          mdCancelText: {
            type: String,
            default: 'Cancel'
          }
        },
        data: function data() {
          return {
            inputValue: null
          };
        },
        watch: {
          value: function value() {
            this.inputValue = this.value;
          }
        },
        methods: {
          onCancel: function onCancel() {
            this.$emit('md-cancel');
            this.$emit('update:mdActive', false);
          },
          onConfirm: function onConfirm() {
            this.$emit('input', this.inputValue);
            this.$emit('md-confirm', this.inputValue);
            this.$emit('update:mdActive', false);
          },
          setInputFocus: function setInputFocus() {
            var _this = this;

            window.setTimeout(function () {
              _this.$refs.input.$el.focus();
            }, 50);
          }
        },
        created: function created() {
          this.inputValue = this.value;
        }
      };
      /***/
    },
    /* 105 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdDivider',
        computed: {
          insideList: function insideList() {
            return this.$parent.$options._componentTag === 'md-list';
          }
        }
      }); //
      //
      //
      //
      //

      /***/
    },
    /* 106 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //


      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdOverlay = __webpack_require__(26);

      var _MdOverlay2 = _interopRequireDefault(_MdOverlay);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      var _MdSwipeable = __webpack_require__(107);

      var _MdSwipeable2 = _interopRequireDefault(_MdSwipeable);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdDrawer',
        mixins: [_MdSwipeable2.default],
        components: {
          MdOverlay: _MdOverlay2.default
        },
        props: {
          mdRight: Boolean,
          mdPermanent: _extends({
            type: String
          }, (0, _MdPropValidator2.default)('md-permanent', ['full', 'clipped', 'card'])),
          mdPersistent: _extends({
            type: String
          }, (0, _MdPropValidator2.default)('md-persistent', ['mini', 'full'])),
          mdActive: Boolean,
          mdFixed: Boolean
        },
        watch: {
          mdActive: function mdActive(visible) {
            if (visible) {
              this.$emit('md-opened');
            } else {
              this.$emit('md-closed');
            }
          },
          swiped: function swiped(value) {
            if (value === 'right' || value === 'left') {
              this.$emit('update:mdActive', value === 'right');
            }
          }
        },
        computed: {
          drawerClasses: function drawerClasses() {
            var classes = {
              'md-left': !this.mdRight,
              'md-right': this.mdRight,
              'md-temporary': this.isTemporary,
              'md-persistent': this.mdPersistent,
              'md-permanent': this.mdPermanent,
              'md-active': this.mdActive,
              'md-fixed': this.mdFixed
            };

            if (this.mdPermanent) {
              classes['md-permanent-' + this.mdPermanent] = true;
            }

            if (this.mdPersistent) {
              classes['md-persistent-' + this.mdPersistent] = true;
            }

            return classes;
          },
          isTemporary: function isTemporary() {
            return !this.mdPermanent && !this.mdPersistent;
          },
          mode: function mode() {
            if (this.mdPersistent) {
              return 'persistent';
            }

            if (this.mdPermanent) {
              return 'permanent';
            }

            return 'temporary';
          },
          submode: function submode() {
            if (this.mdPersistent) {
              return this.mdPersistent;
            }

            if (this.mdPermanent) {
              return this.mdPermanent;
            }
          },
          mdSwipeElement: function mdSwipeElement() {
            return this.$el.parentNode;
          }
        },
        methods: {
          closeDrawer: function closeDrawer() {
            this.$emit('update:mdActive', false);
          }
        }
      });
      /***/
    },
    /* 107 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = {
        props: {
          mdSwipeable: Boolean,
          mdSwipeThreshold: {
            type: Number,
            default: 150
          },
          mdSwipeRestraint: {
            type: Number,
            default: 100
          },
          mdSwipeTime: {
            type: Number,
            default: 300
          }
        },
        data: function data() {
          return {
            swipeStart: false,
            swipeStartTime: null,
            swiped: null,
            touchPosition: {
              startX: 0,
              startY: 0
            }
          };
        },
        computed: {
          getSwipeElement: function getSwipeElement() {
            return this.mdSwipeElement || window;
          }
        },
        methods: {
          handleTouchStart: function handleTouchStart(event) {
            this.touchPosition.startX = event.touches[0].screenX;
            this.touchPosition.startY = event.touches[0].screenY;
            this.swipeStartTime = new Date();
            this.swipeStart = true;
          },

          /* eslint-disable complexity */
          handleTouchMove: function handleTouchMove(event) {
            if (this.swipeStart) {
              var touchmoveX = event.touches[0].screenX;
              var touchmoveY = event.touches[0].screenY;
              var actualX = touchmoveX - this.touchPosition.startX;
              var actualY = touchmoveY - this.touchPosition.startY;
              var elapsedTime = new Date() - this.swipeStartTime;

              if (elapsedTime <= this.mdSwipeTime) {
                if (Math.abs(actualX) >= this.mdSwipeThreshold && Math.abs(actualY) <= this.mdSwipeRestraint) {
                  this.swiped = actualX < 0 ? 'left' : 'right';
                } else if (Math.abs(actualY) >= this.mdSwipeThreshold && Math.abs(actualX) <= this.mdSwipeRestraint) {
                  this.swiped = actualY < 0 ? 'up' : 'down';
                }
              }
            }
          },

          /* eslint-enable complexity */
          handleTouchEnd: function handleTouchEnd() {
            this.touchPosition = {
              startX: 0,
              startY: 0
            };
            this.swiped = null;
            this.swipeStart = false;
          }
        },
        mounted: function mounted() {
          if (this.mdSwipeable) {
            this.getSwipeElement.addEventListener('touchstart', this.handleTouchStart, false);
            this.getSwipeElement.addEventListener('touchend', this.handleTouchEnd, false);
            this.getSwipeElement.addEventListener('touchmove', this.handleTouchMove, false);
          }
        },
        beforeDestroy: function beforeDestroy() {
          if (this.mdSwipeable) {
            this.getSwipeElement.removeEventListener('touchstart', this.handleTouchStart, false);
            this.getSwipeElement.removeEventListener('touchend', this.handleTouchEnd, false);
            this.getSwipeElement.removeEventListener('touchmove', this.handleTouchMove, false);
          }
        }
      };
      /***/
    },
    /* 108 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdEmptyState_vue__ = __webpack_require__(109);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdEmptyState_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdEmptyState_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdEmptyState_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdEmptyState_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d8a893a2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdEmptyState_vue__ = __webpack_require__(360);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(359);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdEmptyState_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d8a893a2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdEmptyState_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdEmptyState/MdEmptyState.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-d8a893a2", Component.options);
          } else {
            hotAPI.reload("data-v-d8a893a2", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 109 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdEmptyStateProps = __webpack_require__(110);

      var _MdEmptyStateProps2 = _interopRequireDefault(_MdEmptyStateProps);

      var _MdAssetIcon = __webpack_require__(22);

      var _MdAssetIcon2 = _interopRequireDefault(_MdAssetIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdEmptyState',
        mixins: [_MdAssetIcon2.default],
        props: _MdEmptyStateProps2.default,
        computed: {
          emptyStateClasses: function emptyStateClasses() {
            return {
              'md-rounded': this.mdRounded
            };
          },
          emptyStateStyles: function emptyStateStyles() {
            if (this.mdRounded) {
              var size = this.mdSize + 'px';
              return {
                width: size,
                height: size
              };
            }
          }
        }
      }); //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 110 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = {
        mdRounded: Boolean,
        mdSize: {
          type: Number,
          default: 420
        },
        mdIcon: String,
        mdLabel: String,
        mdDescription: String
      };
      /***/
    },
    /* 111 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdIcon2.default.name, _MdIcon2.default);
      };
      /***/

    },
    /* 112 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _raf = __webpack_require__(9);

      var _raf2 = _interopRequireDefault(_raf);

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdDropDownIcon = __webpack_require__(365);

      var _MdDropDownIcon2 = _interopRequireDefault(_MdDropDownIcon);

      var _MdMenu = __webpack_require__(114);

      var _MdMenu2 = _interopRequireDefault(_MdMenu);

      var _MdMenuContent = __webpack_require__(116);

      var _MdMenuContent2 = _interopRequireDefault(_MdMenuContent);

      var _MdInput = __webpack_require__(17);

      var _MdInput2 = _interopRequireDefault(_MdInput);

      var _MdFieldMixin = __webpack_require__(18);

      var _MdFieldMixin2 = _interopRequireDefault(_MdFieldMixin);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      var defaultOffset = {
        x: -15,
        y: -48
      };
      exports.default = {
        name: 'MdSelect',
        components: {
          MdInput: _MdInput2.default,
          MdMenu: _MdMenu2.default,
          MdMenuContent: _MdMenuContent2.default,
          MdDropDownIcon: _MdDropDownIcon2.default
        },
        mixins: [_MdFieldMixin2.default],
        props: {
          mdDense: Boolean,
          mdClass: String,
          multiple: Boolean,
          id: String,
          name: String
        },
        inject: ['MdField'],
        data: function data() {
          return {
            menuStyles: {},
            offset: {
              x: defaultOffset.x,
              y: 0
            },
            showSelect: true,
            didMount: false,
            MdSelect: {
              items: {},
              label: null,
              multiple: false,
              modelValue: this.localValue,
              setValue: this.setValue,
              setContent: this.setContent,
              setMultipleValue: this.setMultipleValue,
              setMultipleContent: this.setMultipleContent
            }
          };
        },
        provide: function provide() {
          var MdSelect = this.MdSelect;
          return {
            MdSelect: MdSelect
          };
        },
        computed: {
          attrs: function attrs() {
            return _extends({}, this.$attrs, {
              name: this.name,
              id: undefined
            });
          },
          inputListeners: function inputListeners() {
            return _extends({}, this.$listeners, {
              input: undefined
            });
          }
        },
        watch: {
          localValue: {
            immediate: true,
            handler: function handler(val) {
              this.setFieldContent();
              this.MdSelect.modelValue = this.localValue;

              if (this.didMount) {
                this.emitSelected(val);
              }
            }
          },
          multiple: {
            immediate: true,
            handler: function handler(isMultiple) {
              this.MdSelect.multiple = isMultiple;
              this.$nextTick(this.initialLocalValueByDefault);
            }
          }
        },
        methods: {
          elHasScroll: function elHasScroll(el) {
            return el.scrollHeight > el.offsetHeight;
          },
          scrollToSelectedOption: function scrollToSelectedOption(el, menu) {
            var top = el.offsetTop;
            var elHeight = el.offsetHeight;
            var menuHeight = menu.offsetHeight;
            menu.scrollTop = top - (menuHeight - elHeight) / 2;
          },
          setOffsets: function setOffsets(target) {
            if (!this.$isServer) {
              var menu = this.$refs.menu.$refs.container;

              if (menu) {
                var selected = target || menu.querySelector('.md-selected');

                if (selected) {
                  this.scrollToSelectedOption(selected, menu);
                  this.offset.y = defaultOffset.y - selected.offsetTop + menu.scrollTop + 8;
                  this.menuStyles = {
                    'transform-origin': '0 ' + Math.abs(this.offset.y) + 'px'
                  };
                } else {
                  this.offset.y = defaultOffset.y + 1;
                  this.menuStyles = {};
                }
              }
            }
          },
          onMenuEnter: function onMenuEnter() {
            if (!this.didMount) {
              return;
            }

            this.setOffsets();
            this.MdField.focused = true;
            this.$emit('md-opened');
          },
          applyHighlight: function applyHighlight() {
            this.MdField.focused = false;
            this.MdField.highlighted = true;
            this.$refs.input.$el.focus();
          },
          onClose: function onClose() {
            this.$emit('md-closed');

            if (this.didMount) {
              this.applyHighlight();
            }
          },
          onFocus: function onFocus() {
            if (this.didMount) {
              this.applyHighlight();
            }
          },
          removeHighlight: function removeHighlight() {
            this.MdField.highlighted = false;
          },
          openSelect: function openSelect() {
            if (!this.disabled) {
              this.showSelect = true;
            }
          },
          arrayAccessorRemove: function arrayAccessorRemove(arr, index) {
            var before = arr.slice(0, index);
            var after = arr.slice(index + 1, arr.length);
            return before.concat(after);
          },
          toggleArrayValue: function toggleArrayValue(value) {
            var index = this.localValue.indexOf(value);
            var includes = index > -1;

            if (!includes) {
              this.localValue = this.localValue.concat([value]);
            } else {
              this.localValue = this.arrayAccessorRemove(this.localValue, index);
            }
          },
          setValue: function setValue(newValue) {
            this.model = newValue;
            this.setFieldValue();
            this.showSelect = false;
          },
          setContent: function setContent(newLabel) {
            this.MdSelect.label = newLabel;
          },
          setContentByValue: function setContentByValue() {
            var textContent = this.MdSelect.items[this.localValue];

            if (textContent) {
              this.setContent(textContent);
            } else {
              this.setContent('');
            }
          },
          setMultipleValue: function setMultipleValue(value) {
            var newValue = value;
            this.toggleArrayValue(newValue);
            this.setFieldValue();
          },
          setMultipleContentByValue: function setMultipleContentByValue() {
            var _this = this;

            if (!this.localValue) {
              this.initialLocalValueByDefault();
            }

            var content = [];
            this.localValue.forEach(function (item) {
              var textContent = _this.MdSelect.items[item];

              if (textContent) {
                content.push(textContent);
              }
            });
            this.setContent(content.join(', '));
          },
          setFieldContent: function setFieldContent() {
            if (this.multiple) {
              this.setMultipleContentByValue();
            } else {
              this.setContentByValue();
            }
          },
          isLocalValueSet: function isLocalValueSet() {
            return this.localValue !== undefined && this.localValue !== null;
          },
          setLocalValueIfMultiple: function setLocalValueIfMultiple() {
            if (this.isLocalValueSet()) {
              this.localValue = [this.localValue];
            } else {
              this.localValue = [];
            }
          },
          setLocalValueIfNotMultiple: function setLocalValueIfNotMultiple() {
            if (this.localValue.length > 0) {
              this.localValue = this.localValue[0];
            } else {
              this.localValue = null;
            }
          },
          initialLocalValueByDefault: function initialLocalValueByDefault() {
            var isArray = Array.isArray(this.localValue);

            if (this.multiple && !isArray) {
              this.setLocalValueIfMultiple();
            } else if (!this.multiple && isArray) {
              this.setLocalValueIfNotMultiple();
            }
          },
          emitSelected: function emitSelected(value) {
            this.$emit('md-selected', value);
          }
        },
        mounted: function mounted() {
          var _this2 = this;

          this.showSelect = false;
          this.setFieldContent();
          this.$nextTick().then(function () {
            _this2.didMount = true;
          });
        },
        updated: function updated() {
          this.setFieldContent();
        }
      };
      /***/
    },
    /* 113 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdDropDownIcon',
        components: {
          MdIcon: _MdIcon2.default
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 114 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenu_vue__ = __webpack_require__(115);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenu_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenu_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenu_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenu_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_577c0662_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdMenu_vue__ = __webpack_require__(368);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(367);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenu_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_577c0662_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdMenu_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdMenu/MdMenu.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-577c0662", Component.options);
          } else {
            hotAPI.reload("data-v-577c0662", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 115 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //


      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdMenu',
        props: {
          mdActive: Boolean,
          mdAlignTrigger: Boolean,
          mdOffsetX: Number,
          mdOffsetY: Number,
          mdFullWidth: Boolean,
          mdDense: Boolean,
          mdDirection: _extends({
            type: String,
            default: 'bottom-start'
          }, (0, _MdPropValidator2.default)('md-direction', ['top-end', 'top-start', 'bottom-end', 'bottom-start'])),
          mdCloseOnSelect: {
            type: Boolean,
            default: true
          },
          mdCloseOnClick: {
            type: Boolean,
            default: false
          },
          mdSize: _extends({
            type: String,
            default: 'small'
          }, (0, _MdPropValidator2.default)('md-size', ['auto', 'small', 'medium', 'big', 'huge']))
        },
        data: function data() {
          return {
            triggerEl: null,
            MdMenu: {
              instance: this,
              active: this.mdActive,
              direction: this.mdDirection,
              size: this.mdSize,
              alignTrigger: this.mdAlignTrigger,
              offsetX: this.mdOffsetX,
              offsetY: this.mdOffsetY,
              fullWidth: this.mdFullWidth,
              dense: this.mdDense,
              closeOnSelect: this.mdCloseOnSelect,
              closeOnClick: this.mdCloseOnClick,
              bodyClickObserver: null,
              windowResizeObserver: null,
              $el: this.$el
            }
          };
        },
        provide: function provide() {
          return {
            MdMenu: this.MdMenu
          };
        },
        computed: {
          isActive: function isActive() {
            return this.MdMenu.active;
          }
        },
        watch: {
          mdActive: {
            immediate: true,
            handler: function handler(isActive) {
              this.MdMenu.active = isActive;
            }
          },
          mdDirection: function mdDirection(direction) {
            this.MdMenu.direction = direction;
          },
          mdSize: function mdSize(size) {
            this.MdMenu.size = size;
          },
          mdAlignTrigger: function mdAlignTrigger(aligned) {
            this.MdMenu.alignTrigger = aligned;
          },
          mdOffsetX: function mdOffsetX(offset) {
            this.MdMenu.offsetX = offset;
          },
          mdOffsetY: function mdOffsetY(offset) {
            this.MdMenu.offsetY = offset;
          },
          isActive: function isActive(_isActive) {
            this.$emit('update:mdActive', _isActive);

            if (!_isActive) {
              this.$emit('md-closed');
            } else {
              this.$emit('md-opened');
            }
          },
          mdCloseOnSelect: function mdCloseOnSelect() {
            this.MdMenu.closeOnSelect = this.mdCloseOnSelect;
          },
          mdCloseOnClick: function mdCloseOnClick() {
            this.MdMenu.closeOnClick = this.mdCloseOnClick;
          }
        },
        methods: {
          toggleContent: function toggleContent($event) {
            this.MdMenu.active = !this.MdMenu.active;
          }
        },
        mounted: function mounted() {
          var _this = this;

          this.MdMenu.$el = this.$el;
          this.$nextTick().then(function () {
            _this.triggerEl = _this.$el.querySelector('[md-menu-trigger]');

            if (_this.triggerEl) {
              _this.triggerEl.addEventListener('click', _this.toggleContent);
            }
          });
        },
        beforeDestroy: function beforeDestroy() {
          if (this.triggerEl) {
            this.triggerEl.removeEventListener('click', this.toggleContent);
          }
        }
      };
      /***/
    },
    /* 116 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenuContent_vue__ = __webpack_require__(117);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenuContent_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenuContent_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenuContent_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenuContent_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2c16774c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdMenuContent_vue__ = __webpack_require__(372);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(369);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenuContent_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2c16774c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdMenuContent_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdMenu/MdMenuContent.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-2c16774c", Component.options);
          } else {
            hotAPI.reload("data-v-2c16774c", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 117 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      var _MdObserveEvent = __webpack_require__(118);

      var _MdObserveEvent2 = _interopRequireDefault(_MdObserveEvent);

      var _MdResizeObserver = __webpack_require__(29);

      var _MdResizeObserver2 = _interopRequireDefault(_MdResizeObserver);

      var _MdPopover = __webpack_require__(28);

      var _MdPopover2 = _interopRequireDefault(_MdPopover);

      var _MdFocusTrap = __webpack_require__(97);

      var _MdFocusTrap2 = _interopRequireDefault(_MdFocusTrap);

      var _MdList = __webpack_require__(119);

      var _MdList2 = _interopRequireDefault(_MdList);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }

        return obj;
      } //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      exports.default = new _MdComponent2.default({
        name: 'MdMenuContent',
        components: {
          MdPopover: _MdPopover2.default,
          MdFocusTrap: _MdFocusTrap2.default,
          MdList: _MdList2.default
        },
        props: {
          mdListClass: [String, Boolean],
          mdContentClass: [String, Boolean]
        },
        inject: ['MdMenu'],
        data: function data() {
          return {
            highlightIndex: -1,
            didMount: false,
            highlightItems: [],
            popperSettings: null,
            menuStyles: ''
          };
        },
        computed: {
          filteredAttrs: function filteredAttrs() {
            var attrs = this.$attrs;
            delete attrs.id;
            return attrs;
          },
          highlightedItem: function highlightedItem() {
            return this.highlightItems[this.highlightIndex];
          },
          shouldRender: function shouldRender() {
            return this.MdMenu.active;
          },
          menuClasses: function menuClasses() {
            var _ref;

            var prefix = 'md-menu-content-';
            return _ref = {}, _defineProperty(_ref, prefix + this.MdMenu.direction, true), _defineProperty(_ref, prefix + this.MdMenu.size, true), _defineProperty(_ref, 'md-menu-content', this.didMount), _defineProperty(_ref, 'md-shallow', !this.didMount), _ref;
          },
          listClasses: function listClasses() {
            return _extends({
              'md-dense': this.MdMenu.dense
            }, this.mdListClass);
          }
        },
        watch: {
          shouldRender: function shouldRender(_shouldRender) {
            var _this = this;

            if (_shouldRender) {
              this.setPopperSettings();
              this.$nextTick().then(function () {
                _this.setInitialHighlightIndex();

                _this.createClickEventObserver();

                _this.createResizeObserver();

                _this.createKeydownListener();
              });
            }
          }
        },
        methods: {
          setPopperSettings: function setPopperSettings() {
            var _MdMenu = this.MdMenu,
                direction = _MdMenu.direction,
                alignTrigger = _MdMenu.alignTrigger;

            var _getOffsets = this.getOffsets(),
                offsetX = _getOffsets.offsetX,
                offsetY = _getOffsets.offsetY;

            if (!this.hasCustomOffsets()) {
              if (this.MdMenu.instance.$el && this.MdMenu.instance.$el.offsetHeight) {
                offsetY = -this.MdMenu.instance.$el.offsetHeight - 11;
              }

              if (direction.includes('start')) {
                offsetX = -8;
              } else if (direction.includes('end')) {
                offsetX = 8;
              }
            }

            this.popperSettings = {
              placement: direction,
              modifiers: {
                keepTogether: {
                  enabled: true
                },
                flip: {
                  enabled: false
                },
                offset: {
                  offset: offsetX + ', ' + offsetY
                }
              }
            };
          },
          setInitialHighlightIndex: function setInitialHighlightIndex() {
            var _this2 = this;

            this.setHighlightItems();
            this.highlightItems.forEach(function (item, index) {
              if (item.classList.contains('md-selected')) {
                _this2.highlightIndex = index - 1;
              }
            });
          },
          setHighlightItems: function setHighlightItems() {
            if (this.$el.querySelectorAll) {
              var items = this.$el.querySelectorAll('.md-list-item-container:not(.md-list-item-default):not([disabled])');
              this.highlightItems = Array.from(items);
            }
          },
          setHighlight: function setHighlight(direction) {
            this.setHighlightItems();

            if (this.highlightItems.length) {
              if (direction === 'down') {
                if (this.highlightIndex === this.highlightItems.length - 1) {
                  this.highlightIndex = 0;
                } else {
                  this.highlightIndex++;
                }
              } else {
                if (this.highlightIndex === 0) {
                  this.highlightIndex = this.highlightItems.length - 1;
                } else {
                  this.highlightIndex--;
                }
              }

              this.clearAllHighlights();
              this.setItemHighlight();
            }
          },
          clearAllHighlights: function clearAllHighlights() {
            this.highlightItems.forEach(function (item) {
              item.parentNode.__vue__.highlighted = false;
            });
          },
          setItemHighlight: function setItemHighlight() {
            if (this.highlightedItem) {
              this.highlightedItem.parentNode.__vue__.highlighted = true;

              if (this.$parent.$parent.setOffsets) {
                this.$parent.$parent.setOffsets(this.highlightedItem.parentNode);
              }
            }
          },
          setSelection: function setSelection() {
            if (this.highlightedItem) {
              this.highlightedItem.parentNode.click();
            }
          },
          onEsc: function onEsc() {
            this.MdMenu.active = false;
            this.destroyKeyDownListener();
          },
          getOffsets: function getOffsets() {
            var relativePosition = this.getBodyPosition();
            var offsetX = this.MdMenu.offsetX || 0;
            var offsetY = this.MdMenu.offsetY || 0;
            return {
              offsetX: offsetX - relativePosition.x,
              offsetY: offsetY - relativePosition.y
            };
          },
          hasCustomOffsets: function hasCustomOffsets() {
            var _MdMenu2 = this.MdMenu,
                offsetX = _MdMenu2.offsetX,
                offsetY = _MdMenu2.offsetY,
                alignTrigger = _MdMenu2.alignTrigger;
            return Boolean(alignTrigger || offsetY || offsetX);
          },
          isMenu: function isMenu(_ref2) {
            var target = _ref2.target;
            return this.MdMenu.$el ? this.MdMenu.$el.contains(target) : false;
          },
          isMenuContentEl: function isMenuContentEl(_ref3) {
            var target = _ref3.target;
            return this.$refs.menu ? this.$refs.menu.contains(target) : false;
          },
          isBackdropExpectMenu: function isBackdropExpectMenu($event) {
            return !this.$el.contains($event.target) && !this.isMenu($event);
          },
          createClickEventObserver: function createClickEventObserver() {
            var _this3 = this;

            if (document) {
              this.MdMenu.bodyClickObserver = new _MdObserveEvent2.default(document.body, 'click', function ($event) {
                $event.stopPropagation();

                if (!_this3.isMenu($event) && (_this3.MdMenu.closeOnClick || _this3.isBackdropExpectMenu($event))) {
                  _this3.MdMenu.active = false;

                  _this3.MdMenu.bodyClickObserver.destroy();

                  _this3.MdMenu.windowResizeObserver.destroy();

                  _this3.destroyKeyDownListener();
                }
              });
            }
          },
          createKeydownListener: function createKeydownListener() {
            window.addEventListener('keydown', this.keyNavigation);
          },
          destroyKeyDownListener: function destroyKeyDownListener() {
            window.removeEventListener('keydown', this.keyNavigation);
          },
          keyNavigation: function keyNavigation(event) {
            switch (event.key) {
              case 'ArrowUp':
                event.preventDefault();
                this.setHighlight('up');
                break;

              case 'ArrowDown':
                event.preventDefault();
                this.setHighlight('down');
                break;

              case 'Enter':
                this.setSelection();
                break;

              case 'Space':
                this.setSelection();
                break;

              case 'Escape':
                this.onEsc();
            }
          },
          createResizeObserver: function createResizeObserver() {
            this.MdMenu.windowResizeObserver = new _MdResizeObserver2.default(window, this.setStyles);
          },
          setupWatchers: function setupWatchers() {
            this.$watch('MdMenu.direction', this.setPopperSettings);
            this.$watch('MdMenu.alignTrigger', this.setPopperSettings);
            this.$watch('MdMenu.offsetX', this.setPopperSettings);
            this.$watch('MdMenu.offsetY', this.setPopperSettings);
          },
          setStyles: function setStyles() {
            if (this.MdMenu.fullWidth) {
              this.menuStyles = '\n          width: ' + this.MdMenu.instance.$el.offsetWidth + 'px;\n          max-width: ' + this.MdMenu.instance.$el.offsetWidth + 'px\n        ';
            }
          },
          getBodyPosition: function getBodyPosition() {
            var body = document.body;

            var _body$getBoundingClie = body.getBoundingClientRect(),
                top = _body$getBoundingClie.top,
                left = _body$getBoundingClie.left;

            var scrollLeft = window.pageXOffset !== undefined ? window.pageXOffset : body.scrollLeft;
            var scrollTop = window.pageYOffset !== undefined ? window.pageYOffset : body.scrollTop;
            return {
              x: left + scrollLeft,
              y: top + scrollTop
            };
          }
        },
        mounted: function mounted() {
          var _this4 = this;

          this.$nextTick().then(function () {
            _this4.setHighlightItems();

            _this4.setupWatchers();

            _this4.setStyles();

            _this4.didMount = true;
          });
        },
        beforeDestroy: function beforeDestroy() {
          if (this.MdMenu.bodyClickObserver) {
            this.MdMenu.bodyClickObserver.destroy();
          }

          if (this.MdMenu.windowResizeObserver) {
            this.MdMenu.windowResizeObserver.destroy();
          }

          this.destroyKeyDownListener();
        }
      });
      /***/
    },
    /* 118 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      exports.default = function (el, eventName, observerFn, options) {
        function killObserver() {
          el.removeEventListener(eventName, observerFn);
        } //fix click event for ios devices: https://stackoverflow.com/questions/3705937/document-click-not-working-correctly-on-iphone-jquery/17490775


        eventName && eventName.indexOf('click') >= 0 && /iP/i.test(navigator.userAgent) && (el.style.cursor = 'pointer'); //

        el.addEventListener(eventName, observerFn, options || false);
        return {
          destroy: killObserver
        };
      };
      /***/

    },
    /* 119 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdList_vue__ = __webpack_require__(120);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdList_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdList_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdList_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdList_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_16ed17ef_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdList_vue__ = __webpack_require__(371);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(370);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdList_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_16ed17ef_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdList_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdList/MdList.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-16ed17ef", Component.options);
          } else {
            hotAPI.reload("data-v-16ed17ef", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 120 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdList',
        data: function data() {
          return {
            MdList: {
              expandable: [],
              expandATab: this.expandATab,
              pushExpandable: this.pushExpandable,
              removeExpandable: this.removeExpandable
            }
          };
        },
        provide: function provide() {
          return {
            MdList: this.MdList
          };
        },
        props: {
          mdExpandSingle: {
            default: false
          }
        },
        methods: {
          expandATab: function expandATab(expandedListItem) {
            if (this.mdExpandSingle && expandedListItem) {
              var otherExpandableListItems = this.MdList.expandable.filter(function (target) {
                return target !== expandedListItem;
              });
              otherExpandableListItems.forEach(function (expandableListItem) {
                return expandableListItem.close();
              });
            }
          },
          pushExpandable: function pushExpandable(expandableListItem) {
            var expandableListItems = this.MdList.expandable;

            if (!expandableListItems.find(function (target) {
              return target === expandableListItem;
            })) {
              this.MdList.expandable = expandableListItems.concat([expandableListItem]);
            }
          },
          removeExpandable: function removeExpandable(expandableListItem) {
            var expandableListItems = this.MdList.expandable;

            if (expandableListItems.find(function (target) {
              return target === expandableListItem;
            })) {
              this.MdList.expandable = expandableListItems.filter(function (target) {
                return target !== expandableListItem;
              });
            }
          }
        }
      }); //
      //
      //
      //
      //
      //

      /***/
    },
    /* 121 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdUuid = __webpack_require__(7);

      var _MdUuid2 = _interopRequireDefault(_MdUuid);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdOption',
        props: {
          value: [String, Number, Boolean],
          disabled: Boolean
        },
        inject: {
          MdSelect: {},
          MdOptgroup: {
            default: {}
          }
        },
        data: function data() {
          return {
            uniqueId: 'md-option-' + (0, _MdUuid2.default)(),
            isSelected: false,
            isChecked: false
          };
        },
        computed: {
          selectValue: function selectValue() {
            return this.MdSelect.modelValue;
          },
          isMultiple: function isMultiple() {
            return this.MdSelect.multiple;
          },
          isDisabled: function isDisabled() {
            return this.MdOptgroup.disabled || this.disabled;
          },
          key: function key() {
            var isSet = this.value || this.value === 0;
            return isSet ? this.value : this.uniqueId;
          },
          inputLabel: function inputLabel() {
            return this.MdSelect.label;
          },
          optionClasses: function optionClasses() {
            return {
              'md-selected': this.isSelected || this.isChecked
            };
          }
        },
        watch: {
          selectValue: function selectValue() {
            this.setIsSelected();
          },
          isChecked: function isChecked(val) {
            if (val === this.isSelected) {
              return;
            }

            this.setSelection();
          },
          isSelected: function isSelected(val) {
            this.isChecked = val;
          }
        },
        methods: {
          getTextContent: function getTextContent() {
            if (this.$el) {
              return this.$el.textContent.trim();
            }

            var slot = this.$slots.default;
            return slot ? slot[0].text.trim() : '';
          },
          setIsSelected: function setIsSelected() {
            if (!this.isMultiple) {
              this.isSelected = this.selectValue === this.value;
              return;
            }

            if (this.selectValue === undefined) {
              this.isSelected = false;
              return;
            }

            this.isSelected = this.selectValue.includes(this.value);
          },
          setSingleSelection: function setSingleSelection() {
            this.MdSelect.setValue(this.value);
          },
          setMultipleSelection: function setMultipleSelection() {
            this.MdSelect.setMultipleValue(this.value);
          },
          setSelection: function setSelection() {
            if (!this.isDisabled) {
              if (this.isMultiple) {
                this.setMultipleSelection();
              } else {
                this.setSingleSelection();
              }
            }
          },
          setItem: function setItem() {
            this.$set(this.MdSelect.items, this.key, this.getTextContent());
          }
        },
        updated: function updated() {
          this.setItem();
        },
        created: function created() {
          this.setItem();
          this.setIsSelected();
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 122 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdOptgroup',
        props: {
          label: String,
          disabled: Boolean
        },
        provide: function provide() {
          return {
            MdOptgroup: {
              disabled: this.disabled
            }
          };
        }
      };
      /***/
    },
    /* 123 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdUuid = __webpack_require__(7);

      var _MdUuid2 = _interopRequireDefault(_MdUuid);

      var _MdFileIcon = __webpack_require__(382);

      var _MdFileIcon2 = _interopRequireDefault(_MdFileIcon);

      var _MdFieldMixin = __webpack_require__(18);

      var _MdFieldMixin2 = _interopRequireDefault(_MdFieldMixin);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      function _toConsumableArray(arr) {
        if (Array.isArray(arr)) {
          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
            arr2[i] = arr[i];
          }

          return arr2;
        } else {
          return Array.from(arr);
        }
      } //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      exports.default = {
        name: 'MdFile',
        components: {
          MdFileIcon: _MdFileIcon2.default
        },
        props: {
          id: {
            type: String,
            default: function _default() {
              return 'md-file-' + (0, _MdUuid2.default)();
            }
          },
          name: String
        },
        computed: {
          iconClass: function iconClass() {
            return {
              'md-disabled': this.disabled
            };
          }
        },
        mixins: [_MdFieldMixin2.default],
        inject: ['MdField'],
        methods: {
          getMultipleName: function getMultipleName(files) {
            var names = [];
            [].concat(_toConsumableArray(files)).forEach(function (_ref) {
              var name = _ref.name;
              return names.push(name);
            });
            return names.join(', ');
          },
          getFileName: function getFileName(files, target) {
            if (!files || files.length === 0) {
              return target.value.split('\\').pop();
            }

            if (files.length > 1) {
              return this.getMultipleName(files);
            }

            if (files.length === 1) {
              return files[0].name;
            }

            return null;
          },
          openPicker: function openPicker() {
            this.onFocus();
            this.$refs.inputFile.click();
          },
          onChange: function onChange($event) {
            this.onFileSelected($event);
          },
          onFileSelected: function onFileSelected(_ref2) {
            var target = _ref2.target,
                dataTransfer = _ref2.dataTransfer;
            var files = target.files || dataTransfer.files;
            this.model = this.getFileName(files, target);
            this.$emit('md-change', files || target.value);
          }
        },
        created: function created() {
          this.MdField.file = true;
        },
        beforeDestroy: function beforeDestroy() {
          this.MdField.file = false;
        }
      };
      /***/
    },
    /* 124 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdFileIcon',
        components: {
          MdIcon: _MdIcon2.default
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 125 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdUuid = __webpack_require__(7);

      var _MdUuid2 = _interopRequireDefault(_MdUuid);

      var _MdFieldMixin = __webpack_require__(18);

      var _MdFieldMixin2 = _interopRequireDefault(_MdFieldMixin);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      function calculateContentHeight(el, lineHeight) {
        var origHeight = el.style.height;
        var height = el.offsetHeight;
        var scrollHeight = el.scrollHeight;
        el.style.overflow = 'hidden';

        if (height >= scrollHeight) {
          el.style.height = height + lineHeight + 'px';

          if (scrollHeight < el.scrollHeight) {
            el.style.height = origHeight;
            return height;
          }
        }

        return scrollHeight;
      }

      exports.default = new _MdComponent2.default({
        name: 'MdTextarea',
        mixins: [_MdFieldMixin2.default],
        inject: ['MdField'],
        props: {
          id: {
            type: String,
            default: function _default() {
              return 'md-textarea-' + (0, _MdUuid2.default)();
            }
          },
          mdAutogrow: Boolean
        },
        computed: {
          listeners: function listeners() {
            return _extends({}, this.$listeners, {
              input: this.onInput
            });
          },
          textareaStyles: function textareaStyles() {
            return {
              height: this.textareaHeight
            };
          }
        },
        methods: {
          getTextAreaLineSize: function getTextAreaLineSize() {
            var style = window.getComputedStyle(this.$el);
            return parseInt(style.lineHeight, 10);
          },
          setTextAreaSize: function setTextAreaSize(height) {
            var newHeight = height;

            if (!height) {
              var size = this.getTextAreaLineSize();
              newHeight = calculateContentHeight(this.$el, size);
            }

            this.textareaHeight = newHeight + 'px';
          },
          applyStyles: function applyStyles() {
            var _this = this;

            if (this.mdAutogrow) {
              this.setTextAreaSize(32);
              this.$nextTick().then(function () {
                _this.setTextAreaSize();

                window.setTimeout(function () {
                  _this.$el.style.overflow = 'auto';
                }, 10);
              });
            }
          },
          setTextarea: function setTextarea() {
            this.MdField.textarea = true;
          },
          setAutogrow: function setAutogrow() {
            this.MdField.autogrow = this.mdAutogrow;
          },
          onInput: function onInput() {
            this.setFieldValue();
          }
        },
        watch: {
          localValue: function localValue() {
            this.applyStyles();
          }
        },
        created: function created() {
          this.setTextarea();
          this.setAutogrow();
        },
        mounted: function mounted() {
          this.$nextTick().then(this.applyStyles);
        },
        beforeDestroy: function beforeDestroy() {
          this.setTextarea(false);
        }
      });
      /***/
    },
    /* 126 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _vue = __webpack_require__(8);

      var _vue2 = _interopRequireDefault(_vue);

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      function getHTMLOutput(str) {
        var text = str;

        if (!text) {
          text = '$&';
        }

        return '<span class="md-highlight-text-match">' + text + '</span>';
      }

      function fuzzyHighlight(text, term) {
        if (term.length === 0) {
          return text;
        }

        var offset = text.toLowerCase().indexOf(term[0].toLowerCase());

        if (offset === -1) {
          return '';
        }

        var last = 0;

        for (var i = 1; i < term.length; i++) {
          if (text[offset + i] !== term[i]) {
            break;
          }

          last = i;
        }

        var before = text.slice(0, offset);
        var match = getHTMLOutput(text.slice(offset, offset + last + 1));
        var after = fuzzyHighlight(text.slice(offset + last + 1), term.slice(last + 1));
        return before + match + after;
      }

      function normalHighlight(text, term) {
        var matches = new RegExp(term + '(?!([^<]+)?<)', 'gi');
        return text.replace(matches, getHTMLOutput());
      }

      function generateHighlight(_ref, term, isFuzzy) {
        var text = _ref.text;

        if (text && term && term[0]) {
          if (isFuzzy) {
            return fuzzyHighlight(text, term) || text;
          }

          return normalHighlight(text, term);
        }

        return text;
      }

      exports.default = new _MdComponent2.default({
        name: 'MdHighlightText',
        abstract: true,
        props: {
          mdTerm: String,
          mdFuzzySearch: {
            type: Boolean,
            default: true
          }
        },
        render: function render(createElement) {
          try {
            var defaultSlot = this.$slots.default;

            if (!defaultSlot) {
              return null;
            }

            if (defaultSlot.length > 1 || defaultSlot[0].tag) {
              throw new Error();
            }

            var HTMLContent = generateHighlight(defaultSlot[0], this.mdTerm, this.mdFuzzySearch);
            return createElement('div', {
              staticClass: 'md-highlight-text',
              class: this.$mdActiveTheme,
              domProps: {
                innerHTML: HTMLContent
              }
            });
          } catch (e) {
            _vue2.default.util.warn('MdHighlightText can only render text nodes.', this);
          }

          return null;
        }
      });
      /***/
    },
    /* 127 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdImage',
        props: {
          mdSrc: String
        }
      }); //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 128 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItem_vue__ = __webpack_require__(129);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItem_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItem_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItem_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItem_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(397);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */


      var __vue_template__ = null;
      /* template functional */

      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItem_vue___default.a, __vue_template__, __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdList/MdListItem/MdListItem.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-cff46336", Component.options);
          } else {
            hotAPI.reload("data-v-cff46336", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 129 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _MdInteractionEvents = __webpack_require__(130);

      var _MdInteractionEvents2 = _interopRequireDefault(_MdInteractionEvents);

      var _MdRouterLinkProps = __webpack_require__(14);

      var _MdRouterLinkProps2 = _interopRequireDefault(_MdRouterLinkProps);

      var _MdListItemDefault = __webpack_require__(398);

      var _MdListItemDefault2 = _interopRequireDefault(_MdListItemDefault);

      var _MdListItemFakeButton = __webpack_require__(402);

      var _MdListItemFakeButton2 = _interopRequireDefault(_MdListItemFakeButton);

      var _MdListItemButton = __webpack_require__(404);

      var _MdListItemButton2 = _interopRequireDefault(_MdListItemButton);

      var _MdListItemLink = __webpack_require__(406);

      var _MdListItemLink2 = _interopRequireDefault(_MdListItemLink);

      var _MdListItemRouter = __webpack_require__(408);

      var _MdListItemRouter2 = _interopRequireDefault(_MdListItemRouter);

      var _MdListItemExpand = __webpack_require__(410);

      var _MdListItemExpand2 = _interopRequireDefault(_MdListItemExpand);

      var _MdButton = __webpack_require__(15);

      var _MdButton2 = _interopRequireDefault(_MdButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      function hasExpansion(props) {
        return props.hasOwnProperty('mdExpand') && props.mdExpand !== false;
      }

      function resolveScopedSlot(props, children) {
        if (hasExpansion(props)) {
          return {
            'md-expand': function mdExpand() {
              return children['md-expand'][0];
            }
          };
        }
      }

      function hasChildrenButtons(childrens) {
        return childrens.default.some(function (children) {
          return children.componentOptions && children.componentOptions.tag === 'md-button';
        });
      }

      function shouldRenderButtonWithListener(listeners) {
        var listenerNames = Object.keys(listeners);
        var shouldRender = false;
        listenerNames.forEach(function (listener) {
          if (_MdInteractionEvents2.default.includes(listener)) {
            shouldRender = true;
          }
        });
        return shouldRender;
      }

      function isRouterLink(parent, props) {
        return parent && parent.$router && props.to;
      }

      function createListComponent(props, parent, listeners, children) {
        if (hasExpansion(props)) {
          return _MdListItemExpand2.default;
        }

        if (props.disabled) {
          return _MdListItemButton2.default;
        }

        if (isRouterLink(parent, props)) {
          _MdListItemRouter2.default.props = (0, _MdRouterLinkProps2.default)(parent, {
            target: String
          });
          delete _MdListItemRouter2.default.props.href;
          return _MdListItemRouter2.default;
        }

        if (props.href) {
          return _MdListItemLink2.default;
        }

        if (shouldRenderButtonWithListener(listeners)) {
          return renderButtonWithListener(children);
        }

        return _MdListItemDefault2.default;
      }

      function renderButtonWithListener(children) {
        if (hasChildrenButtons(children)) {
          return _MdListItemFakeButton2.default;
        }

        return _MdListItemButton2.default;
      }

      exports.default = {
        name: 'MdListItem',
        functional: true,
        components: {
          MdButton: _MdButton2.default
        },
        render: function render(createElement, _ref) {
          var parent = _ref.parent,
              props = _ref.props,
              listeners = _ref.listeners,
              data = _ref.data,
              slots = _ref.slots;
          var children = slots();
          var listComponent = createListComponent(props, parent, listeners, children);
          var staticClass = 'md-list-item';

          if (data.staticClass) {
            staticClass += ' ' + data.staticClass;
          }

          return createElement('li', _extends({}, data, {
            staticClass: staticClass,
            on: listeners
          }), [createElement(listComponent, {
            props: props,
            scopedSlots: resolveScopedSlot(props, children),
            staticClass: 'md-list-item-container md-button-clean',
            on: listeners
          }, children.default)]);
        }
      };
      /***/
    },
    /* 130 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = ['click', 'dblclick', 'mousedown', 'mouseup'];
      /***/
    },
    /* 131 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdListItemMixin = __webpack_require__(11);

      var _MdListItemMixin2 = _interopRequireDefault(_MdListItemMixin);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdListItemDefault',
        mixins: [_MdListItemMixin2.default],
        methods: {
          toggleControl: function toggleControl() {
            var control = this.$el.querySelector('.md-checkbox-container, .md-switch-container, .md-radio-container');

            if (control) {
              control.click();
            }
          }
        }
      }; //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 132 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdRipple = __webpack_require__(10);

      var _MdRipple2 = _interopRequireDefault(_MdRipple);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdListItemContent',
        components: {
          MdRipple: _MdRipple2.default
        },
        props: {
          mdDisabled: Boolean
        }
      }; //
      //
      //
      //
      //
      //

      /***/
    },
    /* 133 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdListItemMixin = __webpack_require__(11);

      var _MdListItemMixin2 = _interopRequireDefault(_MdListItemMixin);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdListItemFakeButton',
        mixins: [_MdListItemMixin2.default]
      }; //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 134 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdListItemMixin = __webpack_require__(11);

      var _MdListItemMixin2 = _interopRequireDefault(_MdListItemMixin);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdListItemButton',
        mixins: [_MdListItemMixin2.default]
      }; //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 135 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdListItemMixin = __webpack_require__(11);

      var _MdListItemMixin2 = _interopRequireDefault(_MdListItemMixin);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdListItemLink',
        mixins: [_MdListItemMixin2.default],
        props: {
          download: String,
          href: String,
          hreflang: String,
          ping: String,
          rel: String,
          target: String,
          type: String
        }
      }; //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 136 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdListItemMixin = __webpack_require__(11);

      var _MdListItemMixin2 = _interopRequireDefault(_MdListItemMixin);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdListItemRouter',
        mixins: [_MdListItemMixin2.default],
        computed: {
          routerProps: function routerProps() {
            return this.$props;
          }
        }
      }; //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 137 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _raf = __webpack_require__(9);

      var _raf2 = _interopRequireDefault(_raf);

      var _MdArrowDownIcon = __webpack_require__(412);

      var _MdArrowDownIcon2 = _interopRequireDefault(_MdArrowDownIcon);

      var _MdListItemMixin = __webpack_require__(11);

      var _MdListItemMixin2 = _interopRequireDefault(_MdListItemMixin);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdListItemExpand',
        components: {
          MdArrowDownIcon: _MdArrowDownIcon2.default
        },
        mixins: [_MdListItemMixin2.default],
        inject: ['MdList'],
        data: function data() {
          return {
            expandStyles: {},
            showContent: false
          };
        },
        props: {
          mdExpanded: Boolean
        },
        computed: {
          expandClasses: function expandClasses() {
            return {
              'md-active': this.showContent
            };
          }
        },
        methods: {
          getChildrenSize: function getChildrenSize() {
            var expandEl = this.$refs.listExpand;
            var size = 0;
            Array.from(expandEl.children).forEach(function (child) {
              size += child.offsetHeight;
            });
            return size;
          },
          fetchStyle: function fetchStyle() {
            var _this = this;

            return new Promise(function (resolve) {
              (0, _raf2.default)(function () {
                var fullHeight = 0;

                if (!_this.showContent) {
                  fullHeight = 'auto'; // this.getChildrenSize() + 'px'
                }

                _this.expandStyles = {
                  height: fullHeight
                };
                resolve();
              });
            });
          },
          toggleExpand: function toggleExpand() {
            var _this2 = this;

            this.fetchStyle().then(function () {
              _this2.showContent = !_this2.showContent;
            });
          },
          open: function open() {
            var _this3 = this;

            if (this.showContent) {
              return false;
            }

            this.fetchStyle().then(function () {
              return [_this3.showContent = true];
            });
          },
          close: function close() {
            var _this4 = this;

            if (!this.showContent) {
              return false;
            }

            this.fetchStyle().then(function () {
              _this4.showContent = false;
            });
          }
        },
        watch: {
          mdExpanded: function mdExpanded() {
            if (this.mdExpanded) {
              this.open();
            } else {
              this.close();
            }
          },
          showContent: function showContent() {
            var _this5 = this;

            var expanded = this.showContent;
            this.$emit('update:mdExpanded', expanded);
            this.$nextTick(function () {
              return _this5.$emit(expanded ? 'md-expanded' : 'md-collapsed');
            });

            if (expanded) {
              this.MdList.expandATab(this);
            }
          }
        },
        created: function created() {
          this.MdList.pushExpandable(this);
        },
        mounted: function mounted() {
          if (this.mdExpanded) {
            this.open();
          }
        },
        beforeDestroy: function beforeDestroy() {
          this.MdList.removeExpandable(this);
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 138 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdArrowDownIcon',
        components: {
          MdIcon: _MdIcon2.default
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 139 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdInteractionEvents = __webpack_require__(130);

      var _MdInteractionEvents2 = _interopRequireDefault(_MdInteractionEvents);

      var _MdListItem = __webpack_require__(128);

      var _MdListItem2 = _interopRequireDefault(_MdListItem);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdMenuItem',
        props: {
          disabled: Boolean
        },
        inject: ['MdMenu'],
        data: function data() {
          return {
            highlighted: false
          };
        },
        computed: {
          itemClasses: function itemClasses() {
            return {
              'md-highlight': this.highlighted
            };
          },
          listeners: function listeners() {
            var _this = this;

            if (this.disabled) {
              return {};
            }

            if (!this.MdMenu.closeOnSelect) {
              return this.$listeners;
            }

            var listeners = {};
            var listenerNames = Object.keys(this.$listeners);
            listenerNames.forEach(function (listener) {
              if (_MdInteractionEvents2.default.includes(listener)) {
                listeners[listener] = function ($event) {
                  _this.$listeners[listener]($event);

                  _this.closeMenu();
                };
              } else {
                listeners[listener] = _this.$listeners[listener];
              }
            });
            return listeners;
          }
        },
        methods: {
          closeMenu: function closeMenu() {
            this.MdMenu.active = false;

            if (this.MdMenu.eventObserver) {
              this.MdMenu.eventObserver.destroy();
            }
          },
          triggerCloseMenu: function triggerCloseMenu() {
            if (!this.disabled) {
              this.closeMenu();
            }
          }
        },
        mounted: function mounted() {
          if (this.$el.children && this.$el.children[0]) {
            var listItem = this.$el.children[0];

            if (listItem.tagName.toUpperCase() === 'A') {
              this.$el.addEventListener('click', this.triggerCloseMenu);
            }
          }
        },
        beforeDestroy: function beforeDestroy() {
          this.$el.removeEventListener('click', this.triggerCloseMenu);
        }
      }); //
      //
      //
      //
      //
      //

      /***/
    },
    /* 140 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdProgressBar',
        props: {
          mdValue: {
            type: Number,
            default: 0
          },
          mdBuffer: {
            type: Number,
            default: 0
          },
          mdMode: _extends({
            type: String,
            default: 'determinate'
          }, (0, _MdPropValidator2.default)('md-mode', ['determinate', 'indeterminate', 'query', 'buffer']))
        },
        computed: {
          isDeterminate: function isDeterminate() {
            return this.mdMode === 'determinate';
          },
          isBuffer: function isBuffer() {
            return this.mdMode === 'buffer';
          },
          hasAmountFill: function hasAmountFill() {
            return this.isBuffer || this.isDeterminate;
          },
          progressClasses: function progressClasses() {
            return 'md-' + this.mdMode;
          },
          progressValueStyle: function progressValueStyle() {
            if (this.hasAmountFill) {
              return 'width: ' + this.mdValue + '%';
            }
          },
          progressTrackStyle: function progressTrackStyle() {
            if (this.hasAmountFill) {
              return 'width: ' + this.mdBuffer + '%';
            }
          },
          progressBufferStyle: function progressBufferStyle() {
            if (this.hasAmountFill) {
              return 'left: calc(' + this.mdBuffer + '% + 8px)';
            }
          }
        }
      });
      /***/
    },
    /* 141 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }

        return obj;
      }

      var MdProgressSpinner = {
        styleTag: null,
        diameters: new Set()
      };
      exports.default = new _MdComponent2.default({
        name: 'MdProgressSpinner',
        props: {
          mdValue: {
            type: Number,
            default: 0
          },
          mdDiameter: {
            type: Number,
            default: 60
          },
          mdStroke: {
            type: Number,
            default: 6
          },
          mdMode: _extends({
            type: String,
            default: 'determinate'
          }, (0, _MdPropValidator2.default)('md-mode', ['determinate', 'indeterminate']))
        },
        computed: {
          isDeterminate: function isDeterminate() {
            return this.mdMode === 'determinate';
          },
          isIndeterminate: function isIndeterminate() {
            return this.mdMode === 'indeterminate';
          },
          isIE: function isIE() {
            if (!this.$isServer) {
              return navigator.userAgent.toLowerCase().includes('trident');
            }

            return false;
          },
          progressClasses: function progressClasses() {
            var _ref;

            var animationClass = 'md-progress-spinner-indeterminate';

            if (this.isIE) {
              animationClass += '-fallback';
            }

            return _ref = {}, _defineProperty(_ref, animationClass, true), _defineProperty(_ref, 'md-' + this.mdMode, true), _ref;
          },
          circleRadius: function circleRadius() {
            return (this.mdDiameter - this.mdStroke) / 2;
          },
          circleStrokeWidth: function circleStrokeWidth() {
            return this.mdStroke + 'px';
          },
          circleCircumference: function circleCircumference() {
            return 2 * Math.PI * this.circleRadius;
          },
          circleStrokeDashArray: function circleStrokeDashArray() {
            return this.circleCircumference + 'px';
          },
          circleStrokeDashOffset: function circleStrokeDashOffset() {
            if (this.isDeterminate) {
              return this.circleCircumference * (100 - this.mdValue) / 100 + 'px';
            }

            if (this.isIndeterminate && this.isIE) {
              return this.circleCircumference * 0.2 + 'px';
            }

            return null;
          }
        },
        watch: {
          mdValue: function mdValue() {
            this.attachCircleStyle();
          },
          mdDiameter: function mdDiameter() {
            this.attachSvgStyle();
            this.attachCircleStyle();
          },
          mdStroke: function mdStroke() {
            this.attachCircleStyle();
          }
        },
        methods: {
          attachSvgStyle: function attachSvgStyle() {
            var svg = this.$refs['md-progress-spinner-draw'];
            var size = this.mdDiameter + 'px';
            svg.style.width = size;
            svg.style.height = size;
          },
          attachCircleStyle: function attachCircleStyle() {
            var circle = this.$refs['md-progress-spinner-circle'];
            circle.style.strokeDashoffset = this.circleStrokeDashOffset;
            circle.style.strokeDasharray = this.circleStrokeDashArray;
            circle.style.strokeWidth = this.circleStrokeWidth;
            circle.style.setProperty('--md-progress-spinner-start-value', 0.95 * this.circleCircumference);
            circle.style.setProperty('--md-progress-spinner-end-value', 0.2 * this.circleCircumference);
          }
        },
        mounted: function mounted() {
          this.attachSvgStyle();
          this.attachCircleStyle();
        }
      });
      /***/
    },
    /* 142 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdUuid = __webpack_require__(7);

      var _MdUuid2 = _interopRequireDefault(_MdUuid);

      var _MdRipple = __webpack_require__(10);

      var _MdRipple2 = _interopRequireDefault(_MdRipple);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdRadio',
        components: {
          MdRipple: _MdRipple2.default
        },
        props: {
          model: [String, Number, Boolean, Object],
          value: {
            type: [String, Number, Boolean, Object],
            default: 'on'
          },
          id: {
            type: String,
            default: function _default() {
              return 'md-radio-' + (0, _MdUuid2.default)();
            }
          },
          name: [String, Number],
          required: Boolean,
          disabled: Boolean
        },
        model: {
          prop: 'model',
          event: 'change'
        },
        data: function data() {
          return {
            rippleActive: false
          };
        },
        computed: {
          isSelected: function isSelected() {
            return this.model === this.value;
          },
          radioClasses: function radioClasses() {
            return {
              'md-checked': this.isSelected,
              'md-disabled': this.disabled,
              'md-required': this.required
            };
          }
        },
        methods: {
          toggleCheck: function toggleCheck() {
            if (!this.disabled) {
              this.rippleActive = true;
              this.$emit('change', this.value);
            }
          }
        }
      }); //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 143 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      var _MdPortal = __webpack_require__(21);

      var _MdPortal2 = _interopRequireDefault(_MdPortal);

      var _MdSnackbarContent = __webpack_require__(433);

      var _MdSnackbarContent2 = _interopRequireDefault(_MdSnackbarContent);

      var _MdSnackbarQueue = __webpack_require__(435);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }

        return obj;
      }

      exports.default = new _MdComponent2.default({
        name: 'MdSnackbar',
        components: {
          MdPortal: _MdPortal2.default,
          MdSnackbarContent: _MdSnackbarContent2.default
        },
        props: {
          mdActive: Boolean,
          mdPersistent: Boolean,
          mdDuration: {
            type: Number,
            default: 4000
          },
          mdPosition: _extends({
            type: String,
            default: 'center'
          }, (0, _MdPropValidator2.default)('md-position', ['center', 'left']))
        },
        computed: {
          snackbarClasses: function snackbarClasses() {
            return _defineProperty({}, 'md-position-' + this.mdPosition, true);
          }
        },
        watch: {
          mdActive: function mdActive(isActive) {
            var _this = this;

            if (isActive) {
              (0, _MdSnackbarQueue.createSnackbar)(this.mdDuration, this.mdPersistent, this).then(function () {
                _this.$emit('update:mdActive', false);

                _this.$emit('md-opened');
              });
            } else {
              (0, _MdSnackbarQueue.destroySnackbar)();
              this.$emit('md-closed');
            }
          }
        }
      });
      /***/
    },
    /* 144 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdSnackbarContent',
        props: {
          mdClasses: Array
        }
      };
      /***/
    },
    /* 145 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //


      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }

        return obj;
      }

      exports.default = new _MdComponent2.default({
        name: 'MdSpeedDial',
        props: {
          mdEvent: _extends({
            type: String,
            default: 'hover'
          }, (0, _MdPropValidator2.default)('md-event', ['click', 'hover'])),
          mdDirection: _extends({
            type: String,
            default: 'top'
          }, (0, _MdPropValidator2.default)('md-direction', ['top', 'bottom'])),
          mdEffect: _extends({
            type: String,
            default: 'fling'
          }, (0, _MdPropValidator2.default)('md-effect', ['fling', 'scale', 'opacity']))
        },
        data: function data() {
          return {
            MdSpeedDial: {
              active: false,
              event: this.mdEvent,
              direction: this.mdDirection
            }
          };
        },
        provide: function provide() {
          return {
            MdSpeedDial: this.MdSpeedDial
          };
        },
        computed: {
          speedDialClasses: function speedDialClasses() {
            var _ref;

            return _ref = {
              'md-active': this.MdSpeedDial.active,
              'md-with-hover': this.mdEvent === 'hover'
            }, _defineProperty(_ref, 'md-direction-' + this.mdDirection, true), _defineProperty(_ref, 'md-effect-' + this.mdEffect, true), _ref;
          }
        }
      });
      /***/
    },
    /* 146 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdButton = __webpack_require__(15);

      var _MdButton2 = _interopRequireDefault(_MdButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdSpeedDialTarget',
        components: {
          MdButton: _MdButton2.default
        },
        inject: ['MdSpeedDial'],
        methods: {
          handleClick: function handleClick() {
            if (this.MdSpeedDial.event === 'click') {
              this.MdSpeedDial.active = !this.MdSpeedDial.active;
            }
          }
        }
      }; //
      //
      //
      //
      //
      //

      /***/
    },
    /* 147 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //

      function getChildIndex(direction, index, count) {
        if (direction === 'top') {
          return count - index - 1;
        }

        return index;
      }

      exports.default = {
        name: 'MdSpeedDialContent',
        inject: ['MdSpeedDial'],
        methods: {
          setChildrenIndexes: function setChildrenIndexes() {
            var _this = this;

            this.$nextTick().then(function () {
              var countChild = _this.$children.length;

              _this.$children.forEach(function (child, index) {
                if (child._vnode.tag === 'button') {
                  var childIndex = getChildIndex(_this.MdSpeedDial.direction, index, countChild);
                  child.$el.setAttribute('md-button-index', childIndex);
                  child.$el.classList.add('md-raised');
                }
              });
            });
          }
        },
        mounted: function mounted() {
          this.setChildrenIndexes();
        },
        updated: function updated() {
          this.setChildrenIndexes();
        }
      };
      /***/
    },
    /* 148 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdObserveElement = __webpack_require__(16);

      var _MdObserveElement2 = _interopRequireDefault(_MdObserveElement);

      var _MdThrottling = __webpack_require__(149);

      var _MdThrottling2 = _interopRequireDefault(_MdThrottling);

      var _MdStepHeader = __webpack_require__(150);

      var _MdStepHeader2 = _interopRequireDefault(_MdStepHeader);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      } //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      exports.default = new _MdComponent2.default({
        name: 'MdSteppers',
        components: {
          MdStepHeader: _MdStepHeader2.default
        },
        props: {
          mdSyncRoute: Boolean,
          mdDynamicHeight: Boolean,
          mdVertical: Boolean,
          mdLinear: Boolean,
          mdAlternative: Boolean,
          mdActiveStep: [String, Number]
        },
        data: function data() {
          return {
            activeStepIndex: 0,
            noTransition: true,
            contentStyles: {},
            activeButtonEl: null,
            MdSteppers: {
              activeStep: 0,
              isLinear: false,
              isVertical: false,
              items: {},
              syncRoute: this.mdSyncRoute,
              getStepperNumber: this.getStepperNumber,
              setActiveStep: this.setActiveStep,
              isPreviousStepperDone: this.isPreviousStepperDone
            }
          };
        },
        provide: function provide() {
          return {
            MdSteppers: this.MdSteppers
          };
        },
        computed: {
          steppersClasses: function steppersClasses() {
            return {
              'md-no-transition': this.noTransition,
              'md-alternative': this.mdAlternative,
              'md-horizontal': !this.mdVertical,
              'md-vertical': this.mdVertical,
              'md-dynamic-height': this.mdDynamicHeight
            };
          },
          activeIndex: function activeIndex() {
            return this.MdSteppers.activeStep;
          },
          containerStyles: function containerStyles() {
            return {
              transform: !this.mdVertical && 'translate3D(' + -this.activeStepIndex * 100 + '%, 0, 0)'
            };
          }
        },
        watch: {
          mdActiveStep: function mdActiveStep(stepper) {
            this.MdSteppers.activeStep = stepper;
            this.$emit('md-changed', stepper);
          },
          mdLinear: function mdLinear(isLinear) {
            this.MdSteppers.isLinear = isLinear;
          },
          mdVertical: function mdVertical(isVertical) {
            this.MdSteppers.isVertical = isVertical;
          },
          activeIndex: function activeIndex() {
            this.$nextTick(this.setActiveButtonEl);
          },
          activeStepIndex: function activeStepIndex() {
            this.onActiveStepIndex();
            this.$nextTick(this.calculateStepperPos);
          },
          activeButtonEl: function activeButtonEl(activeButton) {
            this.activeStepIndex = activeButton ? [].indexOf.call(activeButton.parentNode.childNodes, activeButton) : 0;
          },
          '$route': function $route() {
            this.$nextTick(this.setActiveButtonEl);
          }
        },
        methods: {
          hasActiveStep: function hasActiveStep() {
            return this.MdSteppers.activeStep || this.mdActiveStep;
          },
          getItemsAndKeys: function getItemsAndKeys() {
            var items = this.MdSteppers.items;
            return {
              items: items,
              keys: Object.keys(items)
            };
          },
          getStepperNumber: function getStepperNumber(id) {
            var stepperNames = Object.keys(this.MdSteppers.items);
            return stepperNames.indexOf(id) + 1;
          },
          isStepperDone: function isStepperDone(id) {
            return this.MdSteppers.items[id].done;
          },
          isPreviousStepperDone: function isPreviousStepperDone(id) {
            var items = this.MdSteppers.items;
            var stepperNames = Object.keys(items);
            var activeIndex = this.getStepperNumber(id) - 2;
            var previousIndex = stepperNames[activeIndex];

            if (!previousIndex) {
              return true;
            }

            return items[previousIndex].done;
          },
          isStepperEditable: function isStepperEditable(id) {
            return this.MdSteppers.items[id].editable;
          },
          setStepperAsDone: function setStepperAsDone(id) {
            this.MdSteppers.items[id].done = true;
          },
          setPreviousStepperAsDone: function setPreviousStepperAsDone(newId) {
            var activeIndex = this.getStepperNumber(this.MdSteppers.activeStep);
            var newIndex = this.getStepperNumber(newId);

            if (newIndex > activeIndex) {
              this.setStepperAsDone(this.MdSteppers.activeStep);
            }
          },
          setActiveStep: function setActiveStep(id) {
            if (this.mdLinear && !this.isPreviousStepperDone(id)) {
              return false;
            }

            if (id !== this.MdSteppers.activeStep && (this.isStepperEditable(id) || !this.isStepperDone(id))) {
              this.setPreviousStepperAsDone(id);
              this.MdSteppers.activeStep = id;
              this.$emit('md-changed', id);
              this.$emit('update:mdActiveStep', id);
              this.MdSteppers.items[id].error = null;
            }
          },
          setActiveButtonEl: function setActiveButtonEl() {
            this.activeButtonEl = this.$el.querySelector('.md-stepper-header.md-button.md-active');
          },
          setActiveStepByIndex: function setActiveStepByIndex(index) {
            var _getItemsAndKeys = this.getItemsAndKeys(),
                keys = _getItemsAndKeys.keys;

            if (!this.hasActiveStep()) {
              this.MdSteppers.activeStep = keys[index];
            }
          },
          setupObservers: function setupObservers() {
            var steppersContent = this.$el.querySelector('.md-steppers-wrapper');

            if ('ResizeObserver' in window) {
              this.resizeObserver = new window.ResizeObserver(this.calculateStepperPos);
              this.resizeObserver.observe(this.$el);
            } else {
              window.addEventListener('resize', this.calculateStepperPos);
            }

            if (steppersContent) {
              this.resizeObserver = (0, _MdObserveElement2.default)(this.$el.querySelector('.md-steppers-wrapper'), {
                childList: true,
                characterData: true,
                subtree: true
              }, this.calculateStepperPos);
            }
          },
          calculateStepperPos: function calculateStepperPos() {
            if (!this.mdVertical) {
              var stepperElement = this.$el.querySelector('.md-stepper:nth-child(' + (this.activeStepIndex + 1) + ')');
              this.contentStyles = {
                height: stepperElement.offsetHeight + 'px'
              };
            }
          },
          onActiveStepIndex: function onActiveStepIndex() {
            var _getItemsAndKeys2 = this.getItemsAndKeys(),
                items = _getItemsAndKeys2.items,
                keys = _getItemsAndKeys2.keys;

            if (!this.hasActiveStep() && !this.activeStepIndex) {
              this.MdSteppers.activeStep = keys[0];
            } else {
              this.MdSteppers.activeStep = keys[this.activeStepIndex];

              for (var i = 0; i < this.activeStepIndex; i++) {
                this.setStepperAsDone(keys[i]);
              }
            }
          }
        },
        created: function created() {
          this.calculateStepperPos = (0, _MdThrottling2.default)(this.calculateStepperPos, 300);
          this.MdSteppers.activeStep = this.mdActiveStep;
          this.MdSteppers.isLinear = this.mdLinear;
          this.MdSteppers.isVertical = this.mdVertical;
        },
        mounted: function mounted() {
          var _this = this;

          this.$nextTick().then(function () {
            if (!_this.mdSyncRoute) {
              _this.setActiveStepByIndex(0);
            } else {
              _this.onActiveStepIndex();
            }

            return _this.$nextTick();
          }).then(function () {
            _this.setActiveButtonEl();

            _this.calculateStepperPos();

            window.setTimeout(function () {
              _this.noTransition = false;

              _this.setupObservers();
            }, 100);
          });
        },
        beforeDestroy: function beforeDestroy() {
          if (!('ResizeObserver' in window)) {
            window.removeEventListener('resize', this.calculateStepperPos);
          }
        }
      });
      /***/
    },
    /* 149 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var getOption = function getOption(options, key) {
        return options ? options[key] === false ? false : true : true;
      };

      exports.default = function (fn, time, option) {
        var leading = getOption(option, 'leading');
        var trailing = getOption(option, 'trailing');
        var timeout = null;
        var duplicated = false;
        return function () {
          var _this = this,
              _arguments = arguments;

          var functionCall = function functionCall() {
            return fn.apply(_this, _arguments);
          };

          if (timeout) {
            duplicated = true;
            return false;
          } else if (leading) {
            functionCall();
          }

          var setThrottling = function setThrottling() {
            timeout = setTimeout(function () {
              timeout = null;

              if (duplicated && trailing) {
                duplicated = false;
                functionCall();
                setThrottling();
              }
            }, time);
          };
        };
      };
      /***/

    },
    /* 150 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdStepHeader_vue__ = __webpack_require__(151);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdStepHeader_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdStepHeader_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdStepHeader_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdStepHeader_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_43e95866_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdStepHeader_vue__ = __webpack_require__(456);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdStepHeader_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_43e95866_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdStepHeader_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdSteppers/MdStepHeader.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-43e95866", Component.options);
          } else {
            hotAPI.reload("data-v-43e95866", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 151 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdWarningIcon = __webpack_require__(450);

      var _MdWarningIcon2 = _interopRequireDefault(_MdWarningIcon);

      var _MdCheckIcon = __webpack_require__(452);

      var _MdCheckIcon2 = _interopRequireDefault(_MdCheckIcon);

      var _MdEditIcon = __webpack_require__(454);

      var _MdEditIcon2 = _interopRequireDefault(_MdEditIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdStepperHeader',
        components: {
          MdWarningIcon: _MdWarningIcon2.default,
          MdCheckIcon: _MdCheckIcon2.default,
          MdEditIcon: _MdEditIcon2.default
        },
        props: {
          index: {
            type: String,
            required: true
          }
        },
        inject: ['MdSteppers'],
        computed: {
          data: function data() {
            return this.MdSteppers.items[this.index];
          },
          shouldDisable: function shouldDisable() {
            var data = this.data,
                index = this.index,
                MdSteppers = this.MdSteppers;

            if (data.done && !data.editable) {
              return true;
            }

            return MdSteppers.isLinear && !MdSteppers.isPreviousStepperDone(index);
          },
          classes: function classes() {
            return {
              'md-active': !this.MdSteppers.syncRoute && this.index === this.MdSteppers.activeStep,
              'md-error': this.data.error,
              'md-done': this.data.done
            };
          }
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 152 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdWarningIcon',
        components: {
          MdIcon: _MdIcon2.default
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 153 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdCheckIcon',
        components: {
          MdIcon: _MdIcon2.default
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 154 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdEditIcon',
        components: {
          MdIcon: _MdIcon2.default
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 155 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _MdUuid = __webpack_require__(7);

      var _MdUuid2 = _interopRequireDefault(_MdUuid);

      var _MdRouterLink = __webpack_require__(13);

      var _MdRouterLink2 = _interopRequireDefault(_MdRouterLink);

      var _MdStepHeader = __webpack_require__(150);

      var _MdStepHeader2 = _interopRequireDefault(_MdStepHeader);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdStep',
        components: {
          MdStepHeader: _MdStepHeader2.default
        },
        mixins: [_MdRouterLink2.default],
        props: {
          id: {
            type: String,
            default: function _default() {
              return 'md-stepper-' + (0, _MdUuid2.default)();
            }
          },
          href: [String, Number],
          mdLabel: String,
          mdDescription: String,
          mdError: String,
          mdDone: Boolean,
          mdEditable: {
            type: Boolean,
            default: true
          }
        },
        inject: ['MdSteppers'],
        watch: {
          $props: {
            deep: true,
            handler: function handler() {
              this.setStepperData();
            }
          }
        },
        methods: {
          getPropValues: function getPropValues() {
            var _this = this;

            var propNames = Object.keys(this.$options.props);
            var ignoredProps = ['id', 'mdLabel', 'mdDescription', 'mdError', 'mdEditable'];
            var values = {};
            propNames.forEach(function (prop) {
              if (!ignoredProps.includes(prop)) {
                if (_this[prop]) {
                  values[prop] = _this[prop];
                } else if (_this.$attrs.hasOwnProperty(prop)) {
                  if (prop) {
                    values[prop] = _this.$attrs[prop];
                  } else {
                    values[prop] = true;
                  }
                }
              }
            });
            return values;
          },
          setStepperData: function setStepperData() {
            this.$set(this.MdSteppers.items, this.id, {
              label: this.mdLabel,
              description: this.mdDescription,
              error: this.mdError,
              done: this.mdDone,
              editable: this.mdEditable,
              props: this.getPropValues(),
              events: this.$listeners
            });
          },
          setupWatchers: function setupWatchers() {
            var _this2 = this;

            var getProp = function getProp(prop) {
              if (_this2.MdSteppers.items[_this2.id]) {
                return _this2.MdSteppers.items[_this2.id][prop];
              }
            };

            this.$watch(function () {
              return getProp('error');
            }, function () {
              return _this2.$emit('update:mdError', getProp('error'));
            });
            this.$watch(function () {
              return getProp('done');
            }, function () {
              return _this2.$emit('update:mdDone', getProp('done'));
            });
          }
        },
        created: function created() {
          this.setStepperData();
          this.setupWatchers();
        },
        beforeDestroy: function beforeDestroy() {
          this.$delete(this.MdSteppers.items, this.id);
        },
        render: function render(createElement) {
          var stepperAttrs = {
            staticClass: 'md-stepper',
            attrs: _extends({}, this.$attrs, {
              id: this.id
            }),
            on: this.$listeners
          };

          if (this.href) {
            this.buttonProps = this.$options.props;
          } else if (this.$router && this.to) {
            this.$options.props = MdRouterLinkProps(this, this.$options.props);
            stepperAttrs.props = this.$props;
          }

          return createElement('div', stepperAttrs, this.$slots.default);
        }
      };
      /***/
    },
    /* 156 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdSubheader',
        computed: {
          insideList: function insideList() {
            return this.$parent.$options._componentTag === 'md-list';
          }
        }
      }); //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 157 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdCheckboxMixin = __webpack_require__(68);

      var _MdCheckboxMixin2 = _interopRequireDefault(_MdCheckboxMixin);

      var _MdUuid = __webpack_require__(7);

      var _MdUuid2 = _interopRequireDefault(_MdUuid);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdSwitch',
        mixins: [_MdCheckboxMixin2.default],
        props: {
          id: {
            type: String,
            default: function _default() {
              return 'md-switch-' + (0, _MdUuid2.default)();
            }
          }
        }
      }); //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 158 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _raf = __webpack_require__(9);

      var _raf2 = _interopRequireDefault(_raf);

      var _MdTagSwitcher = __webpack_require__(473);

      var _MdTagSwitcher2 = _interopRequireDefault(_MdTagSwitcher);

      var _MdUuid = __webpack_require__(7);

      var _MdUuid2 = _interopRequireDefault(_MdUuid);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      var _MdTableThead = __webpack_require__(474);

      var _MdTableThead2 = _interopRequireDefault(_MdTableThead);

      var _MdTableAlternateHeader = __webpack_require__(482);

      var _MdTableAlternateHeader2 = _interopRequireDefault(_MdTableAlternateHeader);

      var _MdTableRow = __webpack_require__(165);

      var _MdTableRow2 = _interopRequireDefault(_MdTableRow);

      var _MdTableRowGhost = __webpack_require__(489);

      var _MdTableRowGhost2 = _interopRequireDefault(_MdTableRowGhost);

      var _MdTableCellSelection = __webpack_require__(167);

      var _MdTableCellSelection2 = _interopRequireDefault(_MdTableCellSelection);

      var _MdResizeObserver = __webpack_require__(29);

      var _MdResizeObserver2 = _interopRequireDefault(_MdResizeObserver);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      var getObjectAttribute = function getObjectAttribute(object, key) {
        var value = object;
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = key.split('.')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var attribute = _step.value;
            value = value[attribute];
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }

        return value;
      };

      exports.default = {
        name: 'MdTable',
        components: {
          MdTagSwitcher: _MdTagSwitcher2.default,
          MdTableAlternateHeader: _MdTableAlternateHeader2.default,
          MdTableThead: _MdTableThead2.default,
          MdTableRow: _MdTableRow2.default,
          MdTableRowGhost: _MdTableRowGhost2.default,
          MdTableCellSelection: _MdTableCellSelection2.default
        },
        props: {
          value: [Array, Object],
          mdModelId: {
            type: String,
            default: 'id'
          },
          mdCard: Boolean,
          mdFixedHeader: Boolean,
          mdHeight: {
            type: [Number, String],
            default: 400
          },
          mdSort: String,
          mdSortOrder: _extends({
            type: String,
            default: 'asc'
          }, (0, _MdPropValidator2.default)('md-sort-order', ['asc', 'desc'])),
          mdSortFn: {
            type: Function,
            default: function _default(value) {
              var _this = this;

              return value.sort(function (a, b) {
                var sortBy = _this.MdTable.sort;
                var aAttr = getObjectAttribute(a, sortBy);
                var bAttr = getObjectAttribute(b, sortBy);
                var isAsc = _this.MdTable.sortOrder === 'asc';
                var isNumber = typeof aAttr === 'number';

                if (!aAttr) {
                  return 1;
                }

                if (!bAttr) {
                  return -1;
                }

                if (isNumber) {
                  return isAsc ? aAttr - bAttr : bAttr - aAttr;
                }

                return isAsc ? aAttr.localeCompare(bAttr) : bAttr.localeCompare(aAttr);
              });
            }
          },
          mdSelectedValue: {
            type: [Array, Object]
          }
        },
        data: function data() {
          return {
            windowResizeObserver: null,
            fixedHeaderTableWidth: 0,
            fixedHeaderPadding: 0,
            hasContentScroll: false,
            MdTable: {
              items: {},
              sort: null,
              sortOrder: null,
              singleSelection: null,
              selectedItems: [],
              selectable: [],
              fixedHeader: null,
              contentPadding: null,
              contentEl: null,
              // computed
              hasValue: this.hasValue,
              // methods
              emitEvent: this.emitEvent,
              sortTable: this.sortTable,
              manageItemSelection: this.manageItemSelection,
              getModel: this.getModel,
              getModelItem: this.getModelItem,
              selectingMode: null
            },
            itemsUuidMap: new WeakMap()
          };
        },
        computed: {
          contentTag: function contentTag() {
            if (this.mdCard) {
              return 'md-card';
            }

            return 'md-content';
          },
          headerCount: function headerCount() {
            return Object.keys(this.MdTable.items).length;
          },
          selectedCount: function selectedCount() {
            return this.MdTable.selectedItems.length;
          },
          headerStyles: function headerStyles() {
            if (this.mdFixedHeader) {
              return 'padding-right: ' + this.fixedHeaderPadding + 'px';
            }
          },
          hasValue: function hasValue() {
            return this.value && this.value.length !== 0;
          },
          headerClasses: function headerClasses() {
            if (this.mdFixedHeader && this.hasContentScroll || !this.hasValue) {
              return 'md-table-fixed-header-active';
            }
          },
          contentStyles: function contentStyles() {
            if (this.mdFixedHeader) {
              var height = typeof this.mdHeight === 'number' ? this.mdHeight + 'px' : this.mdHeight;
              return 'height: ' + height + ';max-height: ' + height;
            }
          },
          contentClasses: function contentClasses() {
            if (this.mdFixedHeader && this.value.length === 0) {
              return 'md-table-empty';
            }
          },
          fixedHeaderTableStyles: function fixedHeaderTableStyles() {
            return {
              width: this.fixedHeaderTableWidth + 'px'
            };
          }
        },
        provide: function provide() {
          var MdTable = this.MdTable;
          return {
            MdTable: MdTable
          };
        },
        watch: {
          mdSort: {
            immediate: true,
            handler: function handler() {
              this.MdTable.sort = this.mdSort;
            }
          },
          mdSortOrder: {
            immediate: true,
            handler: function handler() {
              this.MdTable.sortOrder = this.mdSortOrder;
            }
          },
          mdFixedHeader: {
            immediate: true,
            handler: function handler() {
              this.MdTable.fixedHeader = this.mdFixedHeader;
            }
          },
          hasValue: {
            immediate: true,
            handler: function handler() {
              this.MdTable.hasValue = this.hasValue;
            }
          },
          'MdTable.selectedItems': function MdTableSelectedItems(val, old) {
            var _this2 = this;

            var changed = function () {
              var isValEmpty = _this2.isEmpty(val);

              var isOldEmpty = _this2.isEmpty(old);

              var hasValues = isValEmpty && isOldEmpty;

              if (hasValues) {
                return false;
              } else if (!hasValues) {
                return val.length !== old.length ? true : !val.every(function (item, index) {
                  return item == old[index];
                });
              }

              return true;
            }();

            if (changed) {
              this.select(val);
            }
          },
          'MdTable.singleSelection': function MdTableSingleSelection(val, old) {
            if (val != old) {
              this.select(val);
            }
          },
          mdSelectedValue: function mdSelectedValue() {
            this.syncSelectedValue();
          },
          value: function value() {
            this.syncSelectedValue();
            this.setWidth();
          }
        },
        methods: {
          isEmpty: function isEmpty(value) {
            return !value || value.length === 0;
          },
          emitEvent: function emitEvent(eventName, value) {
            this.$emit(eventName, value);
          },
          getRowId: function getRowId(item, propertyName) {
            var id = item[propertyName];

            if (id) {
              return id;
            }

            id = this.itemsUuidMap.get(item);

            if (!id) {
              id = 'md-row-' + (0, _MdUuid2.default)();
              this.itemsUuidMap.set(item, id);
            }

            return id;
          },
          setScroll: function setScroll($event) {
            var _this3 = this;

            (0, _raf2.default)(function () {
              if (_this3.mdFixedHeader) {
                _this3.$refs.fixedHeaderContainer.scrollLeft = $event.target.scrollLeft;
              }

              _this3.hasContentScroll = $event.target.scrollTop > 0;
            });
          },
          setHeaderScroll: function setHeaderScroll($event) {
            var _this4 = this;

            (0, _raf2.default)(function () {
              _this4.MdTable.contentEl.scrollLeft = $event.target.scrollLeft;
            });
          },
          getContentEl: function getContentEl() {
            return this.$el.querySelector('.md-table-content');
          },
          setContentEl: function setContentEl() {
            this.MdTable.contentEl = this.getContentEl();
          },
          setHeaderPadding: function setHeaderPadding() {
            this.setContentEl();
            var contentEl = this.MdTable.contentEl;
            var tableEl = contentEl.childNodes[0];
            this.fixedHeaderPadding = contentEl.offsetWidth - tableEl.offsetWidth;
          },
          getModel: function getModel() {
            return this.value;
          },
          getModelItem: function getModelItem(index) {
            return this.value[index];
          },
          manageItemSelection: function manageItemSelection(item) {
            if (this.MdTable.selectedItems.includes(item)) {
              this.MdTable.selectedItems = this.MdTable.selectedItems.filter(function (target) {
                return target !== item;
              });
            } else {
              this.MdTable.selectedItems = this.MdTable.selectedItems.concat([item]);
            }
          },
          sortTable: function sortTable() {
            if (Array.isArray(this.value)) {
              this.$emit('input', this.mdSortFn(this.value));
            }
          },
          select: function select(val) {
            this.$emit('update:mdSelectedValue', val);
            this.$emit('md-selected', val);
          },
          syncSelectedValue: function syncSelectedValue() {
            var _this5 = this;

            this.$nextTick().then(function () {
              // render the table first
              if (_this5.MdTable.selectingMode === 'single') {
                _this5.MdTable.singleSelection = _this5.mdSelectedValue;
              } else if (_this5.MdTable.selectingMode === 'multiple') {
                _this5.MdTable.selectedItems = _this5.mdSelectedValue || [];
              }
            });
          },
          setWidth: function setWidth() {
            if (this.mdFixedHeader) {
              this.fixedHeaderTableWidth = this.$refs.contentTable.offsetWidth;
            }
          }
        },
        created: function created() {
          if (this.mdSort) {
            this.sortTable();
          }

          this.syncSelectedValue();
        },
        mounted: function mounted() {
          this.setContentEl();
          this.$nextTick().then(this.setWidth);

          if (this.mdFixedHeader) {
            this.setHeaderPadding();
            this.windowResizeObserver = new _MdResizeObserver2.default(window, this.setWidth);
          }
        },
        beforeDestroy: function beforeDestroy() {
          if (this.windowResizeObserver) {
            this.windowResizeObserver.destroy();
          }
        }
      };
      /***/
    },
    /* 159 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      exports.default = {
        functional: true,
        props: {
          mdTag: {
            type: String,
            default: 'div'
          }
        },
        render: function render(createElement, _ref) {
          var props = _ref.props,
              children = _ref.children,
              data = _ref.data,
              listeners = _ref.listeners;
          return createElement(props.mdTag, _extends({}, data, {
            on: listeners
          }), children);
        }
      };
      /***/
    },
    /* 160 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdTableHead = __webpack_require__(30);

      var _MdTableHead2 = _interopRequireDefault(_MdTableHead);

      var _MdTableHeadSelection = __webpack_require__(479);

      var _MdTableHeadSelection2 = _interopRequireDefault(_MdTableHeadSelection);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      } //
      //
      //
      //
      //
      //
      //
      //
      //


      exports.default = {
        name: 'MdTableThead',
        inject: ['MdTable'],
        components: {
          MdTableHead: _MdTableHead2.default,
          MdTableHeadSelection: _MdTableHeadSelection2.default
        }
      };
      /***/
    },
    /* 161 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdUpwardIcon = __webpack_require__(476);

      var _MdUpwardIcon2 = _interopRequireDefault(_MdUpwardIcon);

      var _MdResizeObserver = __webpack_require__(29);

      var _MdResizeObserver2 = _interopRequireDefault(_MdResizeObserver);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      } //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      exports.default = {
        name: 'MdTableHead',
        components: {
          MdUpwardIcon: _MdUpwardIcon2.default
        },
        props: {
          mdNumeric: Boolean,
          numeric: Boolean,
          id: [String, Number],
          label: String,
          tooltip: String,
          sortBy: String
        },
        inject: ['MdTable'],
        data: function data() {
          return {
            width: null,
            windowResizeObserver: null
          };
        },
        computed: {
          hasSort: function hasSort() {
            return this.MdTable.sort && this.sortBy;
          },
          isSorted: function isSorted() {
            if (this.MdTable.sort) {
              return this.MdTable.sort === this.sortBy;
            }
          },
          isDescSorted: function isDescSorted() {
            return this.isSorted && this.MdTable.sortOrder === 'desc';
          },
          isAscSorted: function isAscSorted() {
            return this.isSorted && this.MdTable.sortOrder === 'asc';
          },
          headStyles: function headStyles() {
            return {
              width: this.width + 'px'
            };
          },
          headClasses: function headClasses() {
            return {
              'md-numeric': this.numeric || this.mdNumeric,
              'md-sortable': this.hasSort,
              'md-sorted': this.isSorted,
              'md-sorted-desc': this.isDescSorted
            };
          }
        },
        methods: {
          changeSort: function changeSort() {
            if (this.hasSort) {
              if (this.isAscSorted) {
                this.MdTable.sortOrder = 'desc';
              } else {
                this.MdTable.sortOrder = 'asc';
              }

              this.MdTable.sort = this.sortBy;
              this.MdTable.emitEvent('md-sorted', this.MdTable.sort);
              this.MdTable.emitEvent('update:mdSort', this.MdTable.sort);
              this.MdTable.emitEvent('update:mdSortOrder', this.MdTable.sortOrder);
              this.MdTable.sortTable();
            }
          },
          getChildNodesBySelector: function getChildNodesBySelector(el, selector) {
            return Array.from(el.childNodes).filter(function (_ref) {
              var classList = _ref.classList;
              return classList && classList.contains(selector);
            });
          },
          getNodeIndex: function getNodeIndex(nodes, el) {
            return [].indexOf.call(nodes, el);
          },
          setWidth: function setWidth() {
            if (this.MdTable.fixedHeader) {
              var cellSelector = 'md-table-cell';
              var thEls = this.getChildNodesBySelector(this.$el.parentNode, 'md-table-head');
              var tdEls = this.MdTable.contentEl.querySelectorAll('tr:first-child .' + cellSelector);
              var nodeIndex = this.getNodeIndex(thEls, this.$el);
              this.width = tdEls[nodeIndex].offsetWidth;
            }
          }
        },
        updated: function updated() {
          this.$nextTick().then(this.setWidth);
        },
        mounted: function mounted() {
          this.$nextTick().then(this.setWidth);

          if (this.MdTable.fixedHeader) {
            this.windowResizeObserver = new _MdResizeObserver2.default(window, this.setWidth);
          }
        },
        beforeDestroy: function beforeDestroy() {
          if (this.windowResizeObserver) {
            this.windowResizeObserver.destroy();
          }
        }
      };
      /***/
    },
    /* 162 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdIcon = __webpack_require__(6);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdUpwardIcon',
        components: {
          MdIcon: _MdIcon2.default
        }
      }; //
      //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 163 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdTableHead = __webpack_require__(30);

      var _MdTableHead2 = _interopRequireDefault(_MdTableHead);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdTableHeadSelection',
        components: {
          MdTableHead: _MdTableHead2.default
        },
        inject: ['MdTable'],
        computed: {
          selectableCount: function selectableCount() {
            return Object.keys(this.selectable).length;
          },
          isDisabled: function isDisabled() {
            return !this.selectableCount;
          },
          selectable: function selectable() {
            return this.MdTable.selectable;
          },
          selectedItems: function selectedItems() {
            return this.MdTable.selectedItems;
          },
          allSelected: function allSelected() {
            var _this = this;

            if (this.selectableCount === 0) {
              return false;
            }

            return this.selectable.every(function (item) {
              return _this.selectedItems.includes(item);
            });
          }
        },
        methods: {
          onChange: function onChange(val) {
            var _this2 = this;

            if (val) {
              this.MdTable.selectedItems = this.selectedItems.concat(this.selectable.filter(function (item) {
                return !_this2.selectedItems.includes(item);
              }));
            } else {
              this.MdTable.selectedItems = this.selectedItems.filter(function (item) {
                return !_this2.selectable.includes(item);
              });
            }
          }
        }
      }; //
      //
      //
      //
      //
      //
      //
      //

      /***/
    },
    /* 164 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdTableAlternateHeader'
      };
      /***/
    },
    /* 165 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableRow_vue__ = __webpack_require__(166);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableRow_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableRow_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableRow_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableRow_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_00a4496a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableRow_vue__ = __webpack_require__(488);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(485);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableRow_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_00a4496a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableRow_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTable/MdTableRow.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-00a4496a", Component.options);
          } else {
            hotAPI.reload("data-v-00a4496a", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 166 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      var _MdTableCellSelection = __webpack_require__(167);

      var _MdTableCellSelection2 = _interopRequireDefault(_MdTableCellSelection);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdTableRow',
        components: {
          MdTableCellSelection: _MdTableCellSelection2.default
        },
        props: {
          mdIndex: [Number, String],
          mdId: [Number, String],
          mdSelectable: _extends({
            type: [String]
          }, (0, _MdPropValidator2.default)('md-selectable', ['multiple', 'single'])),
          mdDisabled: Boolean,
          mdAutoSelect: Boolean,
          mdItem: [Array, Object]
        },
        inject: ['MdTable'],
        data: function data() {
          return {
            index: null
          };
        },
        computed: {
          selectableCount: function selectableCount() {
            return this.MdTable.selectable.length;
          },
          isMultipleSelected: function isMultipleSelected() {
            return this.MdTable.selectedItems.includes(this.mdItem);
          },
          isSingleSelected: function isSingleSelected() {
            return this.MdTable.singleSelection === this.mdItem;
          },
          hasMultipleSelection: function hasMultipleSelection() {
            return this.MdTable.hasValue && this.mdSelectable === 'multiple';
          },
          hasSingleSelection: function hasSingleSelection() {
            return this.MdTable.hasValue && this.mdSelectable === 'single';
          },
          rowClasses: function rowClasses() {
            if (this.MdTable.hasValue) {
              return {
                'md-has-selection': !this.mdDisabled && (this.mdAutoSelect || this.hasSingleSelection),
                'md-selected': this.isMultipleSelected,
                'md-selected-single': this.isSingleSelected
              };
            }
          },
          isInSelectedItems: function isInSelectedItems() {
            return this.MdTable.selectedItems.includes(this.mdItem);
          }
        },
        watch: {
          mdDisabled: function mdDisabled() {
            if (this.mdDisabled) {
              this.removeSelectableItem();
            } else {
              this.addSelectableItem();
            }
          },
          mdSelectable: function mdSelectable() {
            this.MdTable.selectingMode = this.mdSelectable;
          },
          mdItem: function mdItem(after, before) {
            this.removeSelectableItem(before);
            this.$nextTick(this.addSelectableItem);
          }
        },
        methods: {
          onClick: function onClick() {
            if (this.MdTable.hasValue && !this.mdDisabled) {
              if (this.hasMultipleSelection) {
                this.selectRowIfMultiple();
              } else if (this.hasSingleSelection) {
                this.selectRowIfSingle();
              }
            }
          },
          toggleSelection: function toggleSelection() {
            this.MdTable.manageItemSelection(this.mdItem);
          },
          addSelection: function addSelection() {
            if (!this.isMultipleSelected) {
              this.MdTable.selectedItems = this.MdTable.selectedItems.concat([this.mdItem]);
            }
          },
          removeSelection: function removeSelection() {
            var _this = this;

            if (this.isMultipleSelected) {
              this.MdTable.selectedItems = this.MdTable.selectedItems.filter(function (target) {
                return target !== _this.mdItem;
              });
            }
          },
          selectRowIfSingle: function selectRowIfSingle() {
            if (this.MdTable.singleSelection === this.mdItem) {
              this.MdTable.singleSelection = null;
            } else {
              this.MdTable.singleSelection = this.mdItem;
            }
          },
          selectRowIfMultiple: function selectRowIfMultiple() {
            if (this.mdAutoSelect) {
              this.toggleSelection();
            }
          },
          addSelectableItem: function addSelectableItem() {
            if (!this.hasMultipleSelection || this.mdDisabled) {
              return false;
            }

            if (this.MdTable.selectable.includes(this.mdItem)) {
              return false;
            }

            this.MdTable.selectable = this.MdTable.selectable.concat([this.mdItem]);
          },
          removeSelectableItem: function removeSelectableItem() {
            var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.mdItem;

            if (this.mdSelectable === 'multiple') {
              this.MdTable.selectable = this.MdTable.selectable.filter(function (item) {
                return item !== target;
              });
            }
          }
        },
        created: function created() {
          var _this2 = this;

          this.$nextTick(function () {
            _this2.addSelectableItem();

            _this2.MdTable.selectingMode = _this2.mdSelectable;
          });
        },
        beforeDestroy: function beforeDestroy() {
          this.removeSelectableItem();
        }
      };
      /***/
    },
    /* 167 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableCellSelection_vue__ = __webpack_require__(168);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableCellSelection_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableCellSelection_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableCellSelection_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableCellSelection_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_50a4b70a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableCellSelection_vue__ = __webpack_require__(487);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(486);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableCellSelection_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_50a4b70a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableCellSelection_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTable/MdTableCellSelection.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-50a4b70a", Component.options);
          } else {
            hotAPI.reload("data-v-50a4b70a", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 168 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdTableCellSelection',
        props: {
          value: Boolean,
          mdRowId: [Number, String],
          mdSelectable: Boolean,
          mdDisabled: Boolean
        },
        inject: ['MdTable'],
        data: function data() {
          return {
            isSelected: false
          };
        },
        watch: {
          value: {
            immediate: true,
            handler: function handler(value) {
              this.isSelected = value;
            }
          }
        },
        methods: {
          onChange: function onChange() {
            this.$emit('input', this.isSelected);
          }
        }
      };
      /***/
    },
    /* 169 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = {
        name: 'MdTableRowGhost',
        props: {
          mdIndex: [String, Number],
          mdId: [String, Number],
          mdItem: [Array, Object]
        },
        render: function render() {
          this.$slots.default[0].componentOptions.propsData.mdIndex = this.mdIndex;
          this.$slots.default[0].componentOptions.propsData.mdId = this.mdId;
          this.$slots.default[0].componentOptions.propsData.mdItem = this.mdItem;
          return this.$slots.default[0];
        }
      };
      /***/
    },
    /* 170 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdToolbar = __webpack_require__(171);

      var _MdToolbar2 = _interopRequireDefault(_MdToolbar);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdTableToolbar',
        components: {
          MdToolbar: _MdToolbar2.default
        },
        inject: ['MdTable']
      }; //
      //
      //
      //
      //
      //

      /***/
    },
    /* 171 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdToolbar_vue__ = __webpack_require__(172);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdToolbar_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdToolbar_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdToolbar_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdToolbar_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_38a0b4d9_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdToolbar_vue__ = __webpack_require__(494);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(493);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdToolbar_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_38a0b4d9_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdToolbar_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdToolbar/MdToolbar.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-38a0b4d9", Component.options);
          } else {
            hotAPI.reload("data-v-38a0b4d9", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 172 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdToolbar',
        props: {
          mdElevation: {
            type: [String, Number],
            default: 4
          }
        }
      }); //
      //
      //
      //
      //
      //

      /***/
    },
    /* 173 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _MdEmptyState = __webpack_require__(108);

      var _MdEmptyState2 = _interopRequireDefault(_MdEmptyState);

      var _MdEmptyStateProps = __webpack_require__(110);

      var _MdEmptyStateProps2 = _interopRequireDefault(_MdEmptyStateProps);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      } //
      //
      //
      //
      //
      //


      exports.default = {
        name: 'MdTableEmptyState',
        props: _MdEmptyStateProps2.default,
        inject: ['MdTable']
      };
      /***/
    },
    /* 174 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdTableCell',
        props: {
          mdId: [String, Number],
          mdLabel: String,
          mdNumeric: Boolean,
          mdTooltip: String,
          mdSortBy: String
        },
        inject: ['MdTable'],
        data: function data() {
          return {
            index: null,
            parentNode: null
          };
        },
        computed: {
          cellClasses: function cellClasses() {
            return {
              'md-numeric': this.mdNumeric
            };
          }
        },
        watch: {
          mdSortBy: function mdSortBy() {
            this.setCellData();
          },
          mdNumeric: function mdNumeric() {
            this.setCellData();
          },
          mdLabel: function mdLabel() {
            this.setCellData();
          },
          mdTooltip: function mdTooltip() {
            this.setCellData();
          }
        },
        methods: {
          setCellData: function setCellData() {
            var $vm = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;
            this.$set(this.MdTable.items, $vm.index, {
              id: $vm.mdId,
              label: $vm.mdLabel,
              numeric: $vm.mdNumeric,
              tooltip: $vm.mdTooltip,
              sortBy: $vm.mdSortBy
            });
          },
          updateAllCellData: function updateAllCellData() {
            var _this = this;

            this.MdTable.items = {};
            var cells = Array.from(this.parentNode.childNodes).filter(function (_ref) {
              var tagName = _ref.tagName,
                  classList = _ref.classList;
              var isSelection = classList && classList.contains('md-table-cell-selection');
              var isTd = tagName && tagName.toLowerCase() === 'td';
              return isTd && !isSelection;
            });
            cells.forEach(function (cell, index) {
              var $vm = cell.__vue__;
              $vm.index = index;

              _this.setCellData($vm);
            });
          }
        },
        mounted: function mounted() {
          this.parentNode = this.$el.parentNode;
          this.updateAllCellData();
        },
        destroyed: function destroyed() {
          var rowRemoved = this.$el.parentNode !== null;

          if (rowRemoved) {
            return false;
          }

          this.updateAllCellData();
        }
      };
      /***/
    },
    /* 175 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      }); //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //

      exports.default = {
        name: 'MdTablePagination',
        inject: ['MdTable'],
        props: {
          mdPageSize: {
            type: [String, Number],
            default: 10
          },
          mdPageOptions: {
            type: Array,
            default: function _default() {
              return [10, 25, 50, 100];
            }
          },
          mdPage: {
            type: Number,
            default: 1
          },
          mdTotal: {
            type: [String, Number],
            default: 'Many'
          },
          mdLabel: {
            type: String,
            default: 'Rows per page:'
          },
          mdSeparator: {
            type: String,
            default: 'of'
          }
        },
        data: function data() {
          return {
            currentPageSize: 0
          };
        },
        computed: {
          currentItemCount: function currentItemCount() {
            return (this.mdPage - 1) * this.mdPageSize + 1;
          },
          currentPageCount: function currentPageCount() {
            return this.mdPage * this.mdPageSize;
          }
        },
        watch: {
          mdPageSize: {
            immediate: true,
            handler: function handler(pageSize) {
              this.currentPageSize = this.pageSize;
            }
          }
        },
        methods: {
          setPageSize: function setPageSize() {
            this.$emit('update:mdPageSize', this.currentPageSize);
          },
          goToPrevious: function goToPrevious() {},
          goToNext: function goToNext() {}
        },
        created: function created() {
          this.currentPageSize = this.mdPageSize;
        }
      };
      /***/
    },
    /* 176 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _raf = __webpack_require__(9);

      var _raf2 = _interopRequireDefault(_raf);

      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdAssetIcon = __webpack_require__(22);

      var _MdAssetIcon2 = _interopRequireDefault(_MdAssetIcon);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      var _MdObserveElement = __webpack_require__(16);

      var _MdObserveElement2 = _interopRequireDefault(_MdObserveElement);

      var _MdThrottling = __webpack_require__(149);

      var _MdThrottling2 = _interopRequireDefault(_MdThrottling);

      var _MdContent = __webpack_require__(79);

      var _MdContent2 = _interopRequireDefault(_MdContent);

      var _MdSwipeable = __webpack_require__(107);

      var _MdSwipeable2 = _interopRequireDefault(_MdSwipeable);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }

        return obj;
      }

      exports.default = new _MdComponent2.default({
        name: 'MdTabs',
        mixins: [_MdAssetIcon2.default, _MdSwipeable2.default],
        components: {
          MdContent: _MdContent2.default
        },
        props: {
          mdAlignment: _extends({
            type: String,
            default: 'left'
          }, (0, _MdPropValidator2.default)('md-alignment', ['left', 'right', 'centered', 'fixed'])),
          mdElevation: {
            type: [Number, String],
            default: 0
          },
          mdSyncRoute: Boolean,
          mdDynamicHeight: Boolean,
          mdActiveTab: [String, Number]
        },
        data: function data() {
          return {
            resizeObserver: null,
            activeTab: 0,
            activeTabIndex: 0,
            indicatorStyles: {},
            indicatorClass: null,
            noTransition: true,
            containerStyles: {},
            contentStyles: {
              height: '0px'
            },
            hasContent: false,
            MdTabs: {
              items: {}
            },
            activeButtonEl: null
          };
        },
        provide: function provide() {
          return {
            MdTabs: this.MdTabs
          };
        },
        computed: {
          tabsClasses: function tabsClasses() {
            var _ref;

            return _ref = {}, _defineProperty(_ref, 'md-alignment-' + this.mdAlignment, true), _defineProperty(_ref, 'md-no-transition', this.noTransition), _defineProperty(_ref, 'md-dynamic-height', this.mdDynamicHeight), _ref;
          },
          navigationClasses: function navigationClasses() {
            return 'md-elevation-' + this.mdElevation;
          },
          mdSwipeElement: function mdSwipeElement() {
            return this.$refs.tabsContent.$el;
          }
        },
        watch: {
          MdTabs: {
            deep: true,
            handler: function handler() {
              this.setHasContent();
            }
          },
          activeTab: function activeTab(index) {
            var _this = this;

            this.$emit('md-changed', index);
            this.$nextTick().then(function () {
              _this.setIndicatorStyles();

              _this.setActiveButtonEl();
            });
          },
          mdActiveTab: function mdActiveTab(tab) {
            this.activeTab = tab;
            this.$emit('md-changed', tab);
          },
          activeButtonEl: function activeButtonEl(_activeButtonEl) {
            this.activeTabIndex = _activeButtonEl ? [].indexOf.call(_activeButtonEl.parentNode.childNodes, _activeButtonEl) : -1;
          },
          activeTabIndex: function activeTabIndex(index) {
            this.setIndicatorStyles();
            this.calculateTabPos();
          },
          '$route': function $route() {
            this.$nextTick(this.setActiveButtonEl);
          },
          swiped: function swiped(value) {
            var _getItemsAndKeys = this.getItemsAndKeys(),
                keys = _getItemsAndKeys.keys;

            var max = keys.length || 0;

            if (this.activeTabIndex < max && value === 'right') {
              this.setSwipeActiveTabByIndex(this.activeTabIndex + 1);
            } else if (this.activeTabIndex > 0 && value === 'left') {
              this.setSwipeActiveTabByIndex(this.activeTabIndex - 1);
            }
          }
        },
        methods: {
          hasActiveTab: function hasActiveTab() {
            return this.activeTab || this.mdActiveTab;
          },
          getItemsAndKeys: function getItemsAndKeys() {
            var items = this.MdTabs.items;
            return {
              items: items,
              keys: Object.keys(items)
            };
          },
          setActiveTab: function setActiveTab(index) {
            if (!this.mdSyncRoute) {
              this.activeTab = index;
            }
          },
          setActiveButtonEl: function setActiveButtonEl() {
            this.activeButtonEl = this.$refs.navigation.querySelector('.md-tab-nav-button.md-active');
          },
          setSwipeActiveTabByIndex: function setSwipeActiveTabByIndex(index) {
            var _getItemsAndKeys2 = this.getItemsAndKeys(),
                keys = _getItemsAndKeys2.keys;

            if (keys) {
              this.activeTab = keys[index];
            }
          },
          setActiveTabByIndex: function setActiveTabByIndex(index) {
            var _getItemsAndKeys3 = this.getItemsAndKeys(),
                keys = _getItemsAndKeys3.keys;

            if (!this.hasActiveTab()) {
              this.activeTab = keys[index];
            }
          },
          setHasContent: function setHasContent() {
            var _getItemsAndKeys4 = this.getItemsAndKeys(),
                items = _getItemsAndKeys4.items,
                keys = _getItemsAndKeys4.keys;

            this.hasContent = keys.some(function (key) {
              return items[key].hasContent;
            });
          },
          setIndicatorStyles: function setIndicatorStyles() {
            var _this2 = this;

            (0, _raf2.default)(function () {
              _this2.$nextTick().then(function () {
                // this.setActiveButtonEl()
                if (_this2.activeButtonEl && _this2.$refs.indicator) {
                  var buttonWidth = _this2.activeButtonEl.offsetWidth;
                  var buttonLeft = _this2.activeButtonEl.offsetLeft;
                  var indicatorLeft = _this2.$refs.indicator.offsetLeft;

                  if (indicatorLeft < buttonLeft) {
                    _this2.indicatorClass = 'md-tabs-indicator-right';
                  } else {
                    _this2.indicatorClass = 'md-tabs-indicator-left';
                  }

                  _this2.indicatorStyles = {
                    left: buttonLeft + 'px',
                    right: 'calc(100% - ' + (buttonWidth + buttonLeft) + 'px)'
                  };
                } else {
                  _this2.indicatorStyles = {
                    left: '100%',
                    right: '100%'
                  };
                }
              });
            });
          },
          calculateTabPos: function calculateTabPos() {
            if (this.hasContent) {
              var tabElement = this.$el.querySelector('.md-tab:nth-child(' + (this.activeTabIndex + 1) + ')');
              this.contentStyles = {
                height: tabElement ? tabElement.offsetHeight + 'px' : 0
              };
              this.containerStyles = {
                transform: 'translate3D(' + -this.activeTabIndex * 100 + '%, 0, 0)'
              };
            }
          },
          callResizeFunctions: function callResizeFunctions() {
            this.setIndicatorStyles();
            this.calculateTabPos();
          },
          setupObservers: function setupObservers() {
            var _this3 = this;

            this.resizeObserver = (0, _MdObserveElement2.default)(this.$el.querySelector('.md-tabs-content'), {
              childList: true,
              characterData: true,
              subtree: true
            }, function () {
              _this3.callResizeFunctions();
            });
            window.addEventListener('resize', this.callResizeFunctions);
          }
        },
        created: function created() {
          this.setIndicatorStyles = (0, _MdThrottling2.default)(this.setIndicatorStyles, 300);
          this.setHasContent();
          this.activeTab = this.mdActiveTab;
        },
        mounted: function mounted() {
          var _this4 = this;

          this.setupObservers();
          this.$nextTick().then(function () {
            if (!_this4.mdSyncRoute) {
              _this4.setActiveTabByIndex(0);
            }

            return _this4.$nextTick();
          }).then(function () {
            _this4.setActiveButtonEl();

            _this4.calculateTabPos();

            window.setTimeout(function () {
              _this4.noTransition = false;

              _this4.setupObservers();
            }, 100);
          });
          this.$refs.navigation.addEventListener('transitionend', this.setIndicatorStyles);
        },
        beforeDestroy: function beforeDestroy() {
          if (this.resizeObserver) {
            this.resizeObserver.disconnect();
          }

          window.removeEventListener('resize', this.callResizeFunctions);
          this.$refs.navigation.removeEventListener('transitionend', this.setIndicatorStyles);
        }
      });
      /***/
    },
    /* 177 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _MdUuid = __webpack_require__(7);

      var _MdUuid2 = _interopRequireDefault(_MdUuid);

      var _MdRouterLink = __webpack_require__(13);

      var _MdRouterLink2 = _interopRequireDefault(_MdRouterLink);

      var _MdObserveElement = __webpack_require__(16);

      var _MdObserveElement2 = _interopRequireDefault(_MdObserveElement);

      var _MdRouterLinkProps = __webpack_require__(14);

      var _MdRouterLinkProps2 = _interopRequireDefault(_MdRouterLinkProps);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = {
        name: 'MdTab',
        mixins: [_MdRouterLink2.default],
        props: {
          id: {
            type: String,
            default: function _default() {
              return 'md-tab-' + (0, _MdUuid2.default)();
            }
          },
          href: [String, Number],
          mdDisabled: Boolean,
          mdLabel: [String, Number],
          mdIcon: String,
          mdTemplateData: {
            type: Object,
            default: function _default() {
              return {};
            }
          }
        },
        inject: ['MdTabs'],
        data: function data() {
          return {
            observer: null
          };
        },
        watch: {
          $props: {
            deep: true,
            handler: function handler() {
              this.setTabData();
            }
          },
          $attrs: {
            deep: true,
            handler: function handler() {
              this.setTabData();
            }
          }
        },
        methods: {
          setTabContent: function setTabContent() {
            this.$set(this.MdTabs.items[this.id], 'hasContent', !!this.$slots.default);
          },
          setupObserver: function setupObserver() {
            this.observer = (0, _MdObserveElement2.default)(this.$el, {
              childList: true
            }, this.setTabContent);
          },
          setTabData: function setTabData() {
            this.$set(this.MdTabs.items, this.id, {
              hasContent: !!this.$slots.default,
              label: this.mdLabel,
              icon: this.mdIcon,
              disabled: this.mdDisabled,
              data: this.mdTemplateData,
              props: this.getPropValues(),
              events: this.$listeners
            });
          },
          getPropValues: function getPropValues() {
            var _this = this;

            var propNames = Object.keys(this.$options.props);
            var ignoredProps = ['id', 'mdLabel', 'mdDisabled', 'mdTemplateData'];
            var values = {};
            propNames.forEach(function (prop) {
              if (!ignoredProps.includes(prop)) {
                if (_this[prop]) {
                  values[prop] = _this[prop];
                } else if (_this.$attrs.hasOwnProperty(prop)) {
                  if (prop) {
                    values[prop] = _this.$attrs[prop];
                  } else {
                    values[prop] = true;
                  }
                }
              }
            });
            return values;
          }
        },
        mounted: function mounted() {
          this.setupObserver();
          this.setTabData();
        },
        beforeDestroy: function beforeDestroy() {
          if (this.observer) {
            this.observer.disconnect();
          }

          this.$delete(this.MdTabs.items, this.id);
        },
        render: function render(createElement) {
          var tabAttrs = {
            staticClass: 'md-tab',
            attrs: _extends({}, this.$attrs, {
              id: this.id
            }),
            on: this.$listeners
          };

          if (this.href) {
            this.buttonProps = this.$options.props;
          } else if (this.$router && this.to) {
            this.$options.props = (0, _MdRouterLinkProps2.default)(this, this.$options.props);
            tabAttrs.props = this.$props;
          }

          return createElement('div', tabAttrs, this.$slots.default);
        }
      };
      /***/
    },
    /* 178 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }; //
      //
      //
      //
      //
      //
      //
      //
      //
      //


      var _MdComponent = __webpack_require__(1);

      var _MdComponent2 = _interopRequireDefault(_MdComponent);

      var _MdPropValidator = __webpack_require__(4);

      var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

      var _MdPopover = __webpack_require__(28);

      var _MdPopover2 = _interopRequireDefault(_MdPopover);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = new _MdComponent2.default({
        name: 'MdTooltip',
        components: {
          MdPopover: _MdPopover2.default
        },
        props: {
          mdActive: Boolean,
          mdDelay: {
            type: [String, Number],
            default: 0
          },
          mdDirection: _extends({
            type: String,
            default: 'bottom'
          }, (0, _MdPropValidator2.default)('md-direction', ['top', 'right', 'bottom', 'left']))
        },
        data: function data() {
          return {
            shouldRender: false,
            targetEl: null
          };
        },
        computed: {
          tooltipClasses: function tooltipClasses() {
            return 'md-tooltip-' + this.mdDirection;
          },
          tooltipStyles: function tooltipStyles() {
            return 'transition-delay: ' + this.mdDelay + 'ms';
          },
          popperSettings: function popperSettings() {
            return {
              placement: this.mdDirection,
              modifiers: {
                offset: {
                  offset: '0, 16'
                }
              }
            };
          }
        },
        watch: {
          mdActive: function mdActive() {
            this.shouldRender = this.mdActive;
          },
          shouldRender: function shouldRender(_shouldRender) {
            this.$emit('update:mdActive', _shouldRender);
          }
        },
        methods: {
          show: function show() {
            this.shouldRender = true;
          },
          hide: function hide() {
            this.shouldRender = false;
          }
        },
        mounted: function mounted() {
          var _this = this;

          this.$nextTick().then(function () {
            _this.shouldRender = _this.mdActive;
            _this.targetEl = _this._vnode.componentInstance.originalParentEl;

            if (_this.targetEl) {
              _this.targetEl.addEventListener('mouseenter', _this.show, false);

              _this.targetEl.addEventListener('mouseleave', _this.hide, false);
            }
          });
        },
        beforeDestroy: function beforeDestroy() {
          if (this.targetEl) {
            this.targetEl.removeEventListener('mouseenter', this.show);
            this.targetEl.removeEventListener('mouseleave', this.hide);
          }
        }
      });
      /***/
    },
    /* 179 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _components = __webpack_require__(181);

      var MdComponents = _interopRequireWildcard(_components);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};

          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }

          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      var VueMaterial = function VueMaterial(Vue) {
        (0, _material2.default)(Vue);
        Object.values(MdComponents).forEach(function (MdComponent) {
          Vue.use(MdComponent);
        });
      };

      VueMaterial.version = '__VERSION__';
      exports.default = VueMaterial;
      /***/
    },
    /* 180 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 181 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.MdTooltip = exports.MdToolbar = exports.MdTabs = exports.MdTable = exports.MdSwitch = exports.MdSubheader = exports.MdSteppers = exports.MdSpeedDial = exports.MdSnackbar = exports.MdRipple = exports.MdRadio = exports.MdProgress = exports.MdMenu = exports.MdList = exports.MdLayout = exports.MdImage = exports.MdIcon = exports.MdHighlightText = exports.MdField = exports.MdEmptyState = exports.MdElevation = exports.MdDrawer = exports.MdDivider = exports.MdDialogPrompt = exports.MdDialogConfirm = exports.MdDialogAlert = exports.MdDialog = exports.MdDatepicker = exports.MdContent = exports.MdChips = exports.MdCheckbox = exports.MdCard = exports.MdButton = exports.MdBottomBar = exports.MdAvatar = exports.MdAutocomplete = exports.MdApp = exports.MdBadge = undefined;

      var _MdApp = __webpack_require__(182);

      var _MdApp2 = _interopRequireDefault(_MdApp);

      var _MdBadge = __webpack_require__(203);

      var _MdBadge2 = _interopRequireDefault(_MdBadge);

      var _MdAutocomplete = __webpack_require__(210);

      var _MdAutocomplete2 = _interopRequireDefault(_MdAutocomplete);

      var _MdAvatar = __webpack_require__(216);

      var _MdAvatar2 = _interopRequireDefault(_MdAvatar);

      var _MdBottomBar = __webpack_require__(220);

      var _MdBottomBar2 = _interopRequireDefault(_MdBottomBar);

      var _MdButton = __webpack_require__(230);

      var _MdButton2 = _interopRequireDefault(_MdButton);

      var _MdCard = __webpack_require__(235);

      var _MdCard2 = _interopRequireDefault(_MdCard);

      var _MdCheckbox = __webpack_require__(270);

      var _MdCheckbox2 = _interopRequireDefault(_MdCheckbox);

      var _MdChips = __webpack_require__(274);

      var _MdChips2 = _interopRequireDefault(_MdChips);

      var _MdContent = __webpack_require__(294);

      var _MdContent2 = _interopRequireDefault(_MdContent);

      var _MdDatepicker = __webpack_require__(295);

      var _MdDatepicker2 = _interopRequireDefault(_MdDatepicker);

      var _MdDialog = __webpack_require__(329);

      var _MdDialog2 = _interopRequireDefault(_MdDialog);

      var _MdDialogAlert = __webpack_require__(339);

      var _MdDialogAlert2 = _interopRequireDefault(_MdDialogAlert);

      var _MdDialogConfirm = __webpack_require__(342);

      var _MdDialogConfirm2 = _interopRequireDefault(_MdDialogConfirm);

      var _MdDialogPrompt = __webpack_require__(345);

      var _MdDialogPrompt2 = _interopRequireDefault(_MdDialogPrompt);

      var _MdDivider = __webpack_require__(348);

      var _MdDivider2 = _interopRequireDefault(_MdDivider);

      var _MdDrawer = __webpack_require__(352);

      var _MdDrawer2 = _interopRequireDefault(_MdDrawer);

      var _MdElevation = __webpack_require__(356);

      var _MdElevation2 = _interopRequireDefault(_MdElevation);

      var _MdEmptyState = __webpack_require__(358);

      var _MdEmptyState2 = _interopRequireDefault(_MdEmptyState);

      var _MdField = __webpack_require__(361);

      var _MdField2 = _interopRequireDefault(_MdField);

      var _MdHighlightText = __webpack_require__(387);

      var _MdHighlightText2 = _interopRequireDefault(_MdHighlightText);

      var _MdIcon = __webpack_require__(111);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      var _MdImage = __webpack_require__(390);

      var _MdImage2 = _interopRequireDefault(_MdImage);

      var _MdLayout = __webpack_require__(394);

      var _MdLayout2 = _interopRequireDefault(_MdLayout);

      var _MdList = __webpack_require__(396);

      var _MdList2 = _interopRequireDefault(_MdList);

      var _MdMenu = __webpack_require__(415);

      var _MdMenu2 = _interopRequireDefault(_MdMenu);

      var _MdProgress = __webpack_require__(418);

      var _MdProgress2 = _interopRequireDefault(_MdProgress);

      var _MdRadio = __webpack_require__(425);

      var _MdRadio2 = _interopRequireDefault(_MdRadio);

      var _MdRipple = __webpack_require__(429);

      var _MdRipple2 = _interopRequireDefault(_MdRipple);

      var _MdSnackbar = __webpack_require__(430);

      var _MdSnackbar2 = _interopRequireDefault(_MdSnackbar);

      var _MdSpeedDial = __webpack_require__(437);

      var _MdSpeedDial2 = _interopRequireDefault(_MdSpeedDial);

      var _MdSteppers = __webpack_require__(447);

      var _MdSteppers2 = _interopRequireDefault(_MdSteppers);

      var _MdSubheader = __webpack_require__(461);

      var _MdSubheader2 = _interopRequireDefault(_MdSubheader);

      var _MdSwitch = __webpack_require__(465);

      var _MdSwitch2 = _interopRequireDefault(_MdSwitch);

      var _MdTable = __webpack_require__(469);

      var _MdTable2 = _interopRequireDefault(_MdTable);

      var _MdTabs = __webpack_require__(505);

      var _MdTabs2 = _interopRequireDefault(_MdTabs);

      var _MdToolbar = __webpack_require__(510);

      var _MdToolbar2 = _interopRequireDefault(_MdToolbar);

      var _MdTooltip = __webpack_require__(511);

      var _MdTooltip2 = _interopRequireDefault(_MdTooltip);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.MdBadge = _MdBadge2.default;
      exports.MdApp = _MdApp2.default;
      exports.MdAutocomplete = _MdAutocomplete2.default;
      exports.MdAvatar = _MdAvatar2.default;
      exports.MdBottomBar = _MdBottomBar2.default;
      exports.MdButton = _MdButton2.default;
      exports.MdCard = _MdCard2.default;
      exports.MdCheckbox = _MdCheckbox2.default;
      exports.MdChips = _MdChips2.default;
      exports.MdContent = _MdContent2.default;
      exports.MdDatepicker = _MdDatepicker2.default;
      exports.MdDialog = _MdDialog2.default;
      exports.MdDialogAlert = _MdDialogAlert2.default;
      exports.MdDialogConfirm = _MdDialogConfirm2.default;
      exports.MdDialogPrompt = _MdDialogPrompt2.default;
      exports.MdDivider = _MdDivider2.default;
      exports.MdDrawer = _MdDrawer2.default;
      exports.MdElevation = _MdElevation2.default;
      exports.MdEmptyState = _MdEmptyState2.default;
      exports.MdField = _MdField2.default;
      exports.MdHighlightText = _MdHighlightText2.default;
      exports.MdIcon = _MdIcon2.default;
      exports.MdImage = _MdImage2.default;
      exports.MdLayout = _MdLayout2.default;
      exports.MdList = _MdList2.default;
      exports.MdMenu = _MdMenu2.default;
      exports.MdProgress = _MdProgress2.default;
      exports.MdRadio = _MdRadio2.default;
      exports.MdRipple = _MdRipple2.default;
      exports.MdSnackbar = _MdSnackbar2.default;
      exports.MdSpeedDial = _MdSpeedDial2.default;
      exports.MdSteppers = _MdSteppers2.default;
      exports.MdSubheader = _MdSubheader2.default;
      exports.MdSwitch = _MdSwitch2.default;
      exports.MdTable = _MdTable2.default;
      exports.MdTabs = _MdTabs2.default;
      exports.MdToolbar = _MdToolbar2.default;
      exports.MdTooltip = _MdTooltip2.default;
      /***/
    },
    /* 182 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdApp = __webpack_require__(183);

      var _MdApp2 = _interopRequireDefault(_MdApp);

      var _MdAppToolbar = __webpack_require__(195);

      var _MdAppToolbar2 = _interopRequireDefault(_MdAppToolbar);

      var _MdAppContent = __webpack_require__(198);

      var _MdAppContent2 = _interopRequireDefault(_MdAppContent);

      var _MdAppDrawer = __webpack_require__(201);

      var _MdAppDrawer2 = _interopRequireDefault(_MdAppDrawer);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdApp2.default.name, _MdApp2.default);
        Vue.component(_MdAppToolbar2.default.name, _MdAppToolbar2.default);
        Vue.component(_MdAppContent2.default.name, _MdAppContent2.default);
        Vue.component(_MdAppDrawer2.default.name, _MdAppDrawer2.default);
      };
      /***/

    },
    /* 183 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdApp_vue__ = __webpack_require__(33);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdApp_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdApp_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdApp_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdApp_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(184);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */


      var __vue_template__ = null;
      /* template functional */

      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdApp_vue___default.a, __vue_template__, __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdApp/MdApp.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-8b7389b6", Component.options);
          } else {
            hotAPI.reload("data-v-8b7389b6", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 184 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 185 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppSideDrawer_vue__ = __webpack_require__(34);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppSideDrawer_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppSideDrawer_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppSideDrawer_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppSideDrawer_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2aaa67a6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAppSideDrawer_vue__ = __webpack_require__(189);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(186);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppSideDrawer_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2aaa67a6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAppSideDrawer_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdApp/MdAppSideDrawer.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-2aaa67a6", Component.options);
          } else {
            hotAPI.reload("data-v-2aaa67a6", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 186 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 187 */

    /***/
    function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */
      (function (process) {
        // Generated by CoffeeScript 1.12.2
        (function () {
          var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

          if (typeof performance !== "undefined" && performance !== null && performance.now) {
            module.exports = function () {
              return performance.now();
            };
          } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
            module.exports = function () {
              return (getNanoSeconds() - nodeLoadTime) / 1e6;
            };

            hrtime = process.hrtime;

            getNanoSeconds = function () {
              var hr;
              hr = hrtime();
              return hr[0] * 1e9 + hr[1];
            };

            moduleLoadTime = getNanoSeconds();
            upTime = process.uptime() * 1e9;
            nodeLoadTime = moduleLoadTime - upTime;
          } else if (Date.now) {
            module.exports = function () {
              return Date.now() - loadTime;
            };

            loadTime = Date.now();
          } else {
            module.exports = function () {
              return new Date().getTime() - loadTime;
            };

            loadTime = new Date().getTime();
          }
        }).call(this);
        /* WEBPACK VAR INJECTION */
      }).call(exports, __webpack_require__(188));
      /***/
    },
    /* 188 */

    /***/
    function (module, exports) {
      // shim for using process in browser
      var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
      // don't break things.  But we need to wrap it in a try catch in case it is
      // wrapped in strict mode code which doesn't define any globals.  It's inside a
      // function because try/catches deoptimize in certain engines.

      var cachedSetTimeout;
      var cachedClearTimeout;

      function defaultSetTimout() {
        throw new Error('setTimeout has not been defined');
      }

      function defaultClearTimeout() {
        throw new Error('clearTimeout has not been defined');
      }

      (function () {
        try {
          if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
          } else {
            cachedSetTimeout = defaultSetTimout;
          }
        } catch (e) {
          cachedSetTimeout = defaultSetTimout;
        }

        try {
          if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
          } else {
            cachedClearTimeout = defaultClearTimeout;
          }
        } catch (e) {
          cachedClearTimeout = defaultClearTimeout;
        }
      })();

      function runTimeout(fun) {
        if (cachedSetTimeout === setTimeout) {
          //normal enviroments in sane situations
          return setTimeout(fun, 0);
        } // if setTimeout wasn't available but was latter defined


        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
          cachedSetTimeout = setTimeout;
          return setTimeout(fun, 0);
        }

        try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedSetTimeout(fun, 0);
        } catch (e) {
          try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
          } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
          }
        }
      }

      function runClearTimeout(marker) {
        if (cachedClearTimeout === clearTimeout) {
          //normal enviroments in sane situations
          return clearTimeout(marker);
        } // if clearTimeout wasn't available but was latter defined


        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
          cachedClearTimeout = clearTimeout;
          return clearTimeout(marker);
        }

        try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedClearTimeout(marker);
        } catch (e) {
          try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
          } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
          }
        }
      }

      var queue = [];
      var draining = false;
      var currentQueue;
      var queueIndex = -1;

      function cleanUpNextTick() {
        if (!draining || !currentQueue) {
          return;
        }

        draining = false;

        if (currentQueue.length) {
          queue = currentQueue.concat(queue);
        } else {
          queueIndex = -1;
        }

        if (queue.length) {
          drainQueue();
        }
      }

      function drainQueue() {
        if (draining) {
          return;
        }

        var timeout = runTimeout(cleanUpNextTick);
        draining = true;
        var len = queue.length;

        while (len) {
          currentQueue = queue;
          queue = [];

          while (++queueIndex < len) {
            if (currentQueue) {
              currentQueue[queueIndex].run();
            }
          }

          queueIndex = -1;
          len = queue.length;
        }

        currentQueue = null;
        draining = false;
        runClearTimeout(timeout);
      }

      process.nextTick = function (fun) {
        var args = new Array(arguments.length - 1);

        if (arguments.length > 1) {
          for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
          }
        }

        queue.push(new Item(fun, args));

        if (queue.length === 1 && !draining) {
          runTimeout(drainQueue);
        }
      }; // v8 likes predictible objects


      function Item(fun, array) {
        this.fun = fun;
        this.array = array;
      }

      Item.prototype.run = function () {
        this.fun.apply(null, this.array);
      };

      process.title = 'browser';
      process.env = {};
      process.argv = [];
      process.version = ''; // empty string to avoid regexp issues

      process.versions = {};

      function noop() {}

      process.on = noop;
      process.addListener = noop;
      process.once = noop;
      process.off = noop;
      process.removeListener = noop;
      process.removeAllListeners = noop;
      process.emit = noop;
      process.prependListener = noop;
      process.prependOnceListener = noop;

      process.listeners = function (name) {
        return [];
      };

      process.binding = function (name) {
        throw new Error('process.binding is not supported');
      };

      process.cwd = function () {
        return '/';
      };

      process.chdir = function (dir) {
        throw new Error('process.chdir is not supported');
      };

      process.umask = function () {
        return 0;
      };
      /***/

    },
    /* 189 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-app md-app-side-drawer md-layout-row",
          class: [_vm.appClasses, _vm.$mdActiveTheme]
        }, [_vm._t("md-app-drawer-left"), _vm._v(" "), _vm._t("md-app-drawer-right-previous"), _vm._v(" "), _c("main", {
          staticClass: "md-app-container md-flex md-layout-column",
          class: [_vm.$mdActiveTheme, _vm.scrollerClasses],
          style: _vm.contentStyles,
          on: {
            "&scroll": function ($event) {
              return _vm.handleScroll($event);
            }
          }
        }, [_vm._t("md-app-toolbar"), _vm._v(" "), _c("div", {
          staticClass: "md-app-scroller md-layout-column md-flex",
          class: [_vm.$mdActiveTheme, _vm.scrollerClasses],
          style: _vm.containerStyles,
          on: {
            "&scroll": function ($event) {
              return _vm.handleScroll($event);
            }
          }
        }, [_vm._t("md-app-content")], 2)], 2), _vm._v(" "), _vm._t("md-app-drawer-right")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-2aaa67a6", esExports);
        }
      }
      /***/

    },
    /* 190 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppInternalDrawer_vue__ = __webpack_require__(38);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppInternalDrawer_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppInternalDrawer_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppInternalDrawer_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppInternalDrawer_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f33ea0da_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAppInternalDrawer_vue__ = __webpack_require__(192);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(191);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppInternalDrawer_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f33ea0da_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAppInternalDrawer_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdApp/MdAppInternalDrawer.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-f33ea0da", Component.options);
          } else {
            hotAPI.reload("data-v-f33ea0da", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 191 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 192 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-app md-app-internal-drawer md-layout-column",
          class: [_vm.appClasses, _vm.$mdActiveTheme]
        }, [_vm._t("md-app-toolbar"), _vm._v(" "), _c("main", {
          staticClass: "md-app-container md-flex md-layout-row",
          class: [_vm.$mdActiveTheme, _vm.scrollerClasses],
          style: [_vm.containerStyles, _vm.contentStyles]
        }, [_vm._t("md-app-drawer-left"), _vm._v(" "), _vm._t("md-app-drawer-right-previous"), _vm._v(" "), _c("div", {
          staticClass: "md-app-scroller md-layout-column md-flex",
          class: [_vm.$mdActiveTheme, _vm.scrollerClasses]
        }, [_vm._t("md-app-content")], 2), _vm._v(" "), _vm._t("md-app-drawer-right")], 2)], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-f33ea0da", esExports);
        }
      }
      /***/

    },
    /* 193 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDrawerRightPrevious_vue__ = __webpack_require__(39);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDrawerRightPrevious_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDrawerRightPrevious_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDrawerRightPrevious_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDrawerRightPrevious_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_59050158_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDrawerRightPrevious_vue__ = __webpack_require__(194);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDrawerRightPrevious_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_59050158_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDrawerRightPrevious_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdDrawer/MdDrawerRightPrevious.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-59050158", Component.options);
          } else {
            hotAPI.reload("data-v-59050158", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 194 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          directives: [{
            name: "show",
            rawName: "v-show",
            value: false,
            expression: "false"
          }],
          staticClass: "md-drawer md-right-previous",
          class: _vm.drawerClasses
        });
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-59050158", esExports);
        }
      }
      /***/

    },
    /* 195 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppToolbar_vue__ = __webpack_require__(40);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppToolbar_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppToolbar_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppToolbar_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppToolbar_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2d3e4174_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAppToolbar_vue__ = __webpack_require__(197);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(196);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppToolbar_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2d3e4174_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAppToolbar_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdApp/MdAppToolbar.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-2d3e4174", Component.options);
          } else {
            hotAPI.reload("data-v-2d3e4174", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 196 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 197 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-toolbar", _vm._g(_vm._b({
          staticClass: "md-app-toolbar",
          class: _vm.toolbarClasses,
          style: _vm.toolbarStyles
        }, "md-toolbar", _vm.$attrs, false), _vm.$listeners), [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-2d3e4174", esExports);
        }
      }
      /***/

    },
    /* 198 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppContent_vue__ = __webpack_require__(41);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppContent_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppContent_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppContent_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppContent_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_65f3d944_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAppContent_vue__ = __webpack_require__(200);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(199);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppContent_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_65f3d944_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAppContent_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdApp/MdAppContent.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-65f3d944", Component.options);
          } else {
            hotAPI.reload("data-v-65f3d944", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 199 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 200 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm.showCard ? _c("md-card", _vm._g(_vm._b({
          staticClass: "md-app-content md-flex"
        }, "md-card", _vm.$attrs, false), _vm.$listeners), [_vm._t("default")], 2) : _c("md-content", _vm._g(_vm._b({
          staticClass: "md-app-content md-flex"
        }, "md-content", _vm.$attrs, false), _vm.$listeners), [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-65f3d944", esExports);
        }
      }
      /***/

    },
    /* 201 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppDrawer_vue__ = __webpack_require__(42);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppDrawer_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppDrawer_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppDrawer_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppDrawer_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1d41d1f6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAppDrawer_vue__ = __webpack_require__(202);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAppDrawer_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1d41d1f6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAppDrawer_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdApp/MdAppDrawer.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-1d41d1f6", Component.options);
          } else {
            hotAPI.reload("data-v-1d41d1f6", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 202 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-drawer", _vm._g(_vm._b({
          ref: "drawer",
          staticClass: "md-app-drawer",
          attrs: {
            "md-active": _vm.mdActive && _vm.initialized,
            "md-right": _vm.mdRight
          }
        }, "md-drawer", _vm.$attrs, false), _vm.$listeners), [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-1d41d1f6", esExports);
        }
      }
      /***/

    },
    /* 203 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdBadge = __webpack_require__(204);

      var _MdBadge2 = _interopRequireDefault(_MdBadge);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdBadge2.default.name, _MdBadge2.default);
      };
      /***/

    },
    /* 204 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBadge_vue__ = __webpack_require__(43);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBadge_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBadge_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBadge_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBadge_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3d6e3ee9_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdBadge_vue__ = __webpack_require__(209);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(205);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBadge_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3d6e3ee9_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdBadge_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdBadge/MdBadge.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-3d6e3ee9", Component.options);
          } else {
            hotAPI.reload("data-v-3d6e3ee9", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 205 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 206 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBadgeStandalone_vue__ = __webpack_require__(44);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBadgeStandalone_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBadgeStandalone_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBadgeStandalone_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBadgeStandalone_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3c5ccf8e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdBadgeStandalone_vue__ = __webpack_require__(208);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(207);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBadgeStandalone_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3c5ccf8e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdBadgeStandalone_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdBadge/MdBadgeStandalone.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-3c5ccf8e", Component.options);
          } else {
            hotAPI.reload("data-v-3c5ccf8e", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 207 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 208 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-badge",
          class: [_vm.$mdActiveTheme]
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-3c5ccf8e", esExports);
        }
      }
      /***/

    },
    /* 209 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm.hasDefaultSlot ? _c("div", {
          staticClass: "md-badge-content"
        }, [_vm._t("default"), _vm._v(" "), _c("md-badge-standalone", {
          class: _vm.badgeClasses,
          style: _vm.styles
        }, [_c("div", [_vm._v("\n      " + _vm._s(_vm.mdContent) + "\n    ")])])], 2) : _c("md-badge-standalone", {
          class: _vm.badgeClasses,
          style: _vm.styles
        }, [_vm._v("\n  " + _vm._s(_vm.mdContent) + "\n")]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-3d6e3ee9", esExports);
        }
      }
      /***/

    },
    /* 210 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdAutocomplete = __webpack_require__(211);

      var _MdAutocomplete2 = _interopRequireDefault(_MdAutocomplete);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdAutocomplete2.default.name, _MdAutocomplete2.default);
      };
      /***/

    },
    /* 211 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAutocomplete_vue__ = __webpack_require__(45);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAutocomplete_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAutocomplete_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAutocomplete_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAutocomplete_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_130e5ea2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAutocomplete_vue__ = __webpack_require__(215);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(212);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAutocomplete_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_130e5ea2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAutocomplete_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdAutocomplete/MdAutocomplete.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-130e5ea2", Component.options);
          } else {
            hotAPI.reload("data-v-130e5ea2", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 212 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 213 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      function fuzzysearch(needle, haystack) {
        var tlen = haystack.length;
        var qlen = needle.length;

        if (qlen > tlen) {
          return false;
        }

        if (qlen === tlen) {
          return needle === haystack;
        }

        outer: for (var i = 0, j = 0; i < qlen; i++) {
          var nch = needle.charCodeAt(i);

          while (j < tlen) {
            if (haystack.charCodeAt(j++) === nch) {
              continue outer;
            }
          }

          return false;
        }

        return true;
      }

      module.exports = fuzzysearch;
      /***/
    },
    /* 214 */

    /***/
    function (module, exports) {
      module.exports = isPromise;

      function isPromise(obj) {
        return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
      }
      /***/

    },
    /* 215 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-field", {
          staticClass: "md-autocomplete",
          class: _vm.fieldClasses,
          attrs: {
            "md-clearable": "",
            "md-inline": _vm.isBoxLayout
          }
        }, [_c("md-menu", {
          attrs: {
            "md-direction": "bottom-start",
            "md-dense": _vm.mdDense,
            "md-align-trigger": "",
            "md-full-width": "",
            "md-active": _vm.showMenu
          },
          on: {
            "update:mdActive": function ($event) {
              _vm.showMenu = $event;
            },
            "update:md-active": function ($event) {
              _vm.showMenu = $event;
            }
          }
        }, [_c("md-input", _vm._b({
          attrs: {
            id: _vm.mdInputId,
            name: _vm.mdInputName,
            maxlength: _vm.mdInputMaxlength,
            placeholder: _vm.mdInputPlaceholder
          },
          on: {
            focus: function ($event) {
              $event.stopPropagation();
              return _vm.openOnFocus($event);
            },
            blur: _vm.hideOptions,
            input: _vm.onInput,
            click: function ($event) {
              $event.stopPropagation();
              $event.preventDefault();
              return _vm.openOnFocus($event);
            }
          },
          model: {
            value: _vm.searchTerm,
            callback: function ($$v) {
              _vm.searchTerm = $$v;
            },
            expression: "searchTerm"
          }
        }, "md-input", _vm.$attrs, false)), _vm._v(" "), _c("md-menu-content", {
          directives: [{
            name: "show",
            rawName: "v-show",
            value: _vm.hasScopedEmptySlot || _vm.hasFilteredItems,
            expression: "hasScopedEmptySlot || hasFilteredItems"
          }],
          class: _vm.contentClasses
        }, [_vm.isPromisePending ? _c("div", {
          staticClass: "md-autocomplete-loading"
        }, [_c("md-progress-spinner", {
          attrs: {
            "md-diameter": 40,
            "md-stroke": 4,
            "md-mode": "indeterminate"
          }
        })], 1) : _vm._e(), _vm._v(" "), _vm.hasFilteredItems ? _c("div", {
          staticClass: "md-autocomplete-items"
        }, _vm._l(_vm.getOptions(), function (item, index) {
          return _c("md-menu-item", {
            key: index,
            on: {
              click: function ($event) {
                return _vm.selectItem(item, $event);
              }
            }
          }, [_vm.$scopedSlots["md-autocomplete-item"] ? _vm._t("md-autocomplete-item", null, {
            item: item,
            term: _vm.searchTerm
          }) : [_vm._v(_vm._s(item))]], 2);
        }), 1) : _vm.hasScopedEmptySlot ? _c("md-menu-item", [_c("div", {
          staticClass: "md-autocomplete-empty"
        }, [_vm._t("md-autocomplete-empty", null, {
          term: _vm.searchTerm
        })], 2)]) : _vm._e()], 1)], 1), _vm._v(" "), _vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-130e5ea2", esExports);
        }
      }
      /***/

    },
    /* 216 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdAvatar = __webpack_require__(217);

      var _MdAvatar2 = _interopRequireDefault(_MdAvatar);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdAvatar2.default.name, _MdAvatar2.default);
      };
      /***/

    },
    /* 217 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAvatar_vue__ = __webpack_require__(46);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAvatar_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAvatar_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAvatar_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAvatar_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2bc61fcf_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAvatar_vue__ = __webpack_require__(219);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(218);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdAvatar_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2bc61fcf_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdAvatar_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdAvatar/MdAvatar.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-2bc61fcf", Component.options);
          } else {
            hotAPI.reload("data-v-2bc61fcf", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 218 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 219 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-avatar",
          class: [_vm.$mdActiveTheme]
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-2bc61fcf", esExports);
        }
      }
      /***/

    },
    /* 220 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdBottomBar = __webpack_require__(221);

      var _MdBottomBar2 = _interopRequireDefault(_MdBottomBar);

      var _MdBottomBarItem = __webpack_require__(228);

      var _MdBottomBarItem2 = _interopRequireDefault(_MdBottomBarItem);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdBottomBar2.default.name, _MdBottomBar2.default);
        Vue.component(_MdBottomBarItem2.default.name, _MdBottomBarItem2.default);
      };
      /***/

    },
    /* 221 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBottomBar_vue__ = __webpack_require__(47);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBottomBar_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBottomBar_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBottomBar_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBottomBar_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0fac6773_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdBottomBar_vue__ = __webpack_require__(227);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(222);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBottomBar_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0fac6773_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdBottomBar_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdBottomBar/MdBottomBar.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-0fac6773", Component.options);
          } else {
            hotAPI.reload("data-v-0fac6773", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 222 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 223 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 224 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 225 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("transition", {
          attrs: {
            name: "md-ripple",
            appear: ""
          },
          on: {
            "after-enter": _vm.end
          }
        }, [_vm.animating ? _c("span") : _vm._e()]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-58890fb8", esExports);
        }
      }
      /***/

    },
    /* 226 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          class: ["md-ripple", _vm.rippleClasses],
          on: {
            "&touchstart": function ($event) {
              return function (event) {
                return _vm.mdEventTrigger && _vm.touchStartCheck(event);
              }($event);
            },
            "&touchmove": function ($event) {
              return function (event) {
                return _vm.mdEventTrigger && _vm.touchMoveCheck(event);
              }($event);
            },
            "&mousedown": function ($event) {
              return function (event) {
                return _vm.mdEventTrigger && _vm.startRipple(event);
              }($event);
            }
          }
        }, [_vm._t("default"), _vm._v(" "), _vm._l(_vm.ripples, function (ripple) {
          return !_vm.isDisabled ? _c("md-wave", {
            key: ripple.uuid,
            class: ["md-ripple-wave", _vm.waveClasses],
            style: ripple.waveStyles,
            on: {
              "md-end": function ($event) {
                return _vm.clearWave(ripple.uuid);
              }
            }
          }) : _vm._e();
        })], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-7692b1af", esExports);
        }
      }
      /***/

    },
    /* 227 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-bottom-bar",
          class: [_vm.$mdActiveTheme, _vm.barClasses]
        }, [_c("md-ripple", {
          attrs: {
            "md-disabled": _vm.mdType === "fixed",
            "md-active": _vm.MdBottomBar.mouseEvent
          }
        }, [_vm._t("default")], 2)], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-0fac6773", esExports);
        }
      }
      /***/

    },
    /* 228 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBottomBarItem_vue__ = __webpack_require__(51);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBottomBarItem_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBottomBarItem_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBottomBarItem_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBottomBarItem_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7ba29fa6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdBottomBarItem_vue__ = __webpack_require__(229);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdBottomBarItem_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7ba29fa6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdBottomBarItem_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdBottomBar/MdBottomBarItem.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-7ba29fa6", Component.options);
          } else {
            hotAPI.reload("data-v-7ba29fa6", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 229 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-button", _vm._g(_vm._b({
          staticClass: "md-bottom-bar-item",
          class: _vm.itemClasses,
          attrs: {
            id: _vm.id,
            disabled: _vm.mdDisabled,
            "md-ripple": _vm.MdBottomBar.type === "fixed"
          },
          on: {
            click: _vm.setActiveItem
          }
        }, "md-button", _vm.attrs, false), _vm.$listeners), [_vm.$slots.default ? _vm._t("default") : [_vm.isAssetIcon(_vm.mdIcon) ? _c("md-icon", {
          staticClass: "md-bottom-bar-icon",
          attrs: {
            "md-src": _vm.mdIcon
          }
        }) : _c("md-icon", {
          staticClass: "md-bottom-bar-icon"
        }, [_vm._v(_vm._s(_vm.mdIcon))]), _vm._v(" "), _c("span", {
          staticClass: "md-bottom-bar-label"
        }, [_vm._v(_vm._s(_vm.mdLabel))])]], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-7ba29fa6", esExports);
        }
      }
      /***/

    },
    /* 230 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdButton = __webpack_require__(15);

      var _MdButton2 = _interopRequireDefault(_MdButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdButton2.default.name, _MdButton2.default);
      };
      /***/

    },
    /* 231 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 232 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdButtonContent_vue__ = __webpack_require__(54);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdButtonContent_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdButtonContent_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdButtonContent_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdButtonContent_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_008ae93a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdButtonContent_vue__ = __webpack_require__(234);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(233);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdButtonContent_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_008ae93a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdButtonContent_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdButton/MdButtonContent.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-008ae93a", Component.options);
          } else {
            hotAPI.reload("data-v-008ae93a", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 233 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 234 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-ripple", {
          attrs: {
            "md-disabled": !_vm.mdRipple || _vm.disabled,
            "md-event-trigger": false,
            "md-active": _vm.mdRippleActive
          },
          on: {
            "update:mdActive": function (active) {
              return _vm.$emit("update:mdRippleActive", active);
            }
          }
        }, [_c("div", {
          staticClass: "md-button-content"
        }, [_vm._t("default")], 2)]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-008ae93a", esExports);
        }
      }
      /***/

    },
    /* 235 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdCard = __webpack_require__(236);

      var _MdCard2 = _interopRequireDefault(_MdCard);

      var _MdCardArea = __webpack_require__(239);

      var _MdCardArea2 = _interopRequireDefault(_MdCardArea);

      var _MdCardHeader = __webpack_require__(242);

      var _MdCardHeader2 = _interopRequireDefault(_MdCardHeader);

      var _MdCardHeaderText = __webpack_require__(245);

      var _MdCardHeaderText2 = _interopRequireDefault(_MdCardHeaderText);

      var _MdCardMedia = __webpack_require__(247);

      var _MdCardMedia2 = _interopRequireDefault(_MdCardMedia);

      var _MdCardMediaActions = __webpack_require__(250);

      var _MdCardMediaActions2 = _interopRequireDefault(_MdCardMediaActions);

      var _MdCardMediaCover = __webpack_require__(253);

      var _MdCardMediaCover2 = _interopRequireDefault(_MdCardMediaCover);

      var _MdCardContent = __webpack_require__(256);

      var _MdCardContent2 = _interopRequireDefault(_MdCardContent);

      var _MdCardExpand = __webpack_require__(259);

      var _MdCardExpand2 = _interopRequireDefault(_MdCardExpand);

      var _MdCardExpandTrigger = __webpack_require__(262);

      var _MdCardExpandTrigger2 = _interopRequireDefault(_MdCardExpandTrigger);

      var _MdCardExpandContent = __webpack_require__(264);

      var _MdCardExpandContent2 = _interopRequireDefault(_MdCardExpandContent);

      var _MdCardActions = __webpack_require__(267);

      var _MdCardActions2 = _interopRequireDefault(_MdCardActions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdCard2.default.name, _MdCard2.default);
        Vue.component(_MdCardArea2.default.name, _MdCardArea2.default);
        Vue.component(_MdCardHeader2.default.name, _MdCardHeader2.default);
        Vue.component(_MdCardHeaderText2.default.name, _MdCardHeaderText2.default);
        Vue.component(_MdCardMedia2.default.name, _MdCardMedia2.default);
        Vue.component(_MdCardMediaActions2.default.name, _MdCardMediaActions2.default);
        Vue.component(_MdCardMediaCover2.default.name, _MdCardMediaCover2.default);
        Vue.component(_MdCardContent2.default.name, _MdCardContent2.default);
        Vue.component(_MdCardExpand2.default.name, _MdCardExpand2.default);
        Vue.component(_MdCardExpandTrigger2.default.name, _MdCardExpandTrigger2.default);
        Vue.component(_MdCardExpandContent2.default.name, _MdCardExpandContent2.default);
        Vue.component(_MdCardActions2.default.name, _MdCardActions2.default);
      };
      /***/

    },
    /* 236 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCard_vue__ = __webpack_require__(55);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCard_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCard_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCard_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCard_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_24f7f3af_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCard_vue__ = __webpack_require__(238);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(237);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCard_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_24f7f3af_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCard_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdCard/MdCard.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-24f7f3af", Component.options);
          } else {
            hotAPI.reload("data-v-24f7f3af", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 237 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 238 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-card",
          class: [_vm.$mdActiveTheme, _vm.cardClasses]
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-24f7f3af", esExports);
        }
      }
      /***/

    },
    /* 239 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardArea_vue__ = __webpack_require__(56);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardArea_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardArea_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardArea_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardArea_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_132f02d7_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardArea_vue__ = __webpack_require__(241);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(240);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardArea_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_132f02d7_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardArea_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdCard/MdCardArea/MdCardArea.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-132f02d7", Component.options);
          } else {
            hotAPI.reload("data-v-132f02d7", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 240 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 241 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-card-area",
          class: _vm.areaClasses
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-132f02d7", esExports);
        }
      }
      /***/

    },
    /* 242 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardHeader_vue__ = __webpack_require__(57);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardHeader_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardHeader_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardHeader_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardHeader_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4d103817_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardHeader_vue__ = __webpack_require__(244);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(243);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardHeader_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4d103817_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardHeader_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdCard/MdCardHeader/MdCardHeader.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-4d103817", Component.options);
          } else {
            hotAPI.reload("data-v-4d103817", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 243 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 244 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-card-header"
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-4d103817", esExports);
        }
      }
      /***/

    },
    /* 245 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardHeaderText_vue__ = __webpack_require__(58);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardHeaderText_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardHeaderText_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardHeaderText_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardHeaderText_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_49a3ab64_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardHeaderText_vue__ = __webpack_require__(246);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardHeaderText_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_49a3ab64_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardHeaderText_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdCard/MdCardHeader/MdCardHeaderText.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-49a3ab64", Component.options);
          } else {
            hotAPI.reload("data-v-49a3ab64", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 246 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-card-header-text"
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-49a3ab64", esExports);
        }
      }
      /***/

    },
    /* 247 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMedia_vue__ = __webpack_require__(59);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMedia_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMedia_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMedia_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMedia_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_33e1f253_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardMedia_vue__ = __webpack_require__(249);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(248);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMedia_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_33e1f253_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardMedia_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdCard/MdCardMedia/MdCardMedia.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-33e1f253", Component.options);
          } else {
            hotAPI.reload("data-v-33e1f253", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 248 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 249 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-card-media",
          class: _vm.mediaClasses
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-33e1f253", esExports);
        }
      }
      /***/

    },
    /* 250 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMediaActions_vue__ = __webpack_require__(60);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMediaActions_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMediaActions_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMediaActions_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMediaActions_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_102584da_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardMediaActions_vue__ = __webpack_require__(252);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(251);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMediaActions_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_102584da_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardMediaActions_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdCard/MdCardMedia/MdCardMediaActions.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-102584da", Component.options);
          } else {
            hotAPI.reload("data-v-102584da", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 251 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 252 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-card-media-actions"
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-102584da", esExports);
        }
      }
      /***/

    },
    /* 253 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMediaCover_vue__ = __webpack_require__(61);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMediaCover_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMediaCover_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMediaCover_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMediaCover_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_20dfcfd4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardMediaCover_vue__ = __webpack_require__(255);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(254);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardMediaCover_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_20dfcfd4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardMediaCover_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdCard/MdCardMedia/MdCardMediaCover.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-20dfcfd4", Component.options);
          } else {
            hotAPI.reload("data-v-20dfcfd4", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 254 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 255 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-card-media-cover",
          class: _vm.coverClasses
        }, [_vm._t("default"), _vm._v(" "), _vm.mdTextScrim ? _c("div", {
          ref: "backdrop",
          staticClass: "md-card-backdrop",
          style: _vm.coverStyles
        }) : _vm._e()], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-20dfcfd4", esExports);
        }
      }
      /***/

    },
    /* 256 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardContent_vue__ = __webpack_require__(62);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardContent_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardContent_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardContent_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardContent_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_36a98486_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardContent_vue__ = __webpack_require__(258);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(257);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardContent_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_36a98486_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardContent_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdCard/MdCardContent/MdCardContent.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-36a98486", Component.options);
          } else {
            hotAPI.reload("data-v-36a98486", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 257 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 258 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-card-content"
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-36a98486", esExports);
        }
      }
      /***/

    },
    /* 259 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpand_vue__ = __webpack_require__(63);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpand_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpand_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpand_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpand_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d46d3592_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardExpand_vue__ = __webpack_require__(261);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(260);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpand_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d46d3592_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardExpand_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdCard/MdCardExpand/MdCardExpand.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-d46d3592", Component.options);
          } else {
            hotAPI.reload("data-v-d46d3592", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 260 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 261 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-card-expand"
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-d46d3592", esExports);
        }
      }
      /***/

    },
    /* 262 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpandTrigger_vue__ = __webpack_require__(64);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpandTrigger_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpandTrigger_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpandTrigger_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpandTrigger_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(263);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */


      var __vue_template__ = null;
      /* template functional */

      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpandTrigger_vue___default.a, __vue_template__, __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdCard/MdCardExpand/MdCardExpandTrigger.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-4ede00b1", Component.options);
          } else {
            hotAPI.reload("data-v-4ede00b1", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 263 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 264 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpandContent_vue__ = __webpack_require__(65);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpandContent_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpandContent_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpandContent_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpandContent_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_604296f2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardExpandContent_vue__ = __webpack_require__(266);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(265);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardExpandContent_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_604296f2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardExpandContent_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdCard/MdCardExpand/MdCardExpandContent.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-604296f2", Component.options);
          } else {
            hotAPI.reload("data-v-604296f2", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 265 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 266 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-card-expand-content",
          style: _vm.contentStyles
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-604296f2", esExports);
        }
      }
      /***/

    },
    /* 267 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardActions_vue__ = __webpack_require__(66);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardActions_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardActions_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardActions_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardActions_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2894ebc5_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardActions_vue__ = __webpack_require__(269);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(268);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCardActions_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2894ebc5_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCardActions_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdCard/MdCardActions/MdCardActions.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-2894ebc5", Component.options);
          } else {
            hotAPI.reload("data-v-2894ebc5", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 268 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 269 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-card-actions",
          class: "md-alignment-" + _vm.mdAlignment
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-2894ebc5", esExports);
        }
      }
      /***/

    },
    /* 270 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdCheckbox = __webpack_require__(271);

      var _MdCheckbox2 = _interopRequireDefault(_MdCheckbox);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdCheckbox2.default.name, _MdCheckbox2.default);
      };
      /***/

    },
    /* 271 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCheckbox_vue__ = __webpack_require__(67);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCheckbox_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCheckbox_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCheckbox_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCheckbox_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7c2899cf_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCheckbox_vue__ = __webpack_require__(273);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(272);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCheckbox_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7c2899cf_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCheckbox_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdCheckbox/MdCheckbox.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-7c2899cf", Component.options);
          } else {
            hotAPI.reload("data-v-7c2899cf", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 272 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 273 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-checkbox",
          class: [_vm.$mdActiveTheme, _vm.checkClasses]
        }, [_c("div", {
          staticClass: "md-checkbox-container",
          on: {
            click: function ($event) {
              $event.stopPropagation();
              return _vm.toggleCheck($event);
            }
          }
        }, [_c("md-ripple", {
          attrs: {
            "md-centered": "",
            "md-active": _vm.rippleActive,
            "md-disabled": _vm.disabled
          },
          on: {
            "update:mdActive": function ($event) {
              _vm.rippleActive = $event;
            },
            "update:md-active": function ($event) {
              _vm.rippleActive = $event;
            }
          }
        }, [_c("input", _vm._b({
          attrs: {
            id: _vm.id,
            type: "checkbox"
          },
          domProps: {
            indeterminate: _vm.indeterminate
          }
        }, "input", _vm.attrs, false))])], 1), _vm._v(" "), _vm.$slots.default ? _c("label", {
          staticClass: "md-checkbox-label",
          attrs: {
            for: _vm.id
          },
          on: {
            click: function ($event) {
              $event.preventDefault();
              return _vm.toggleCheck($event);
            }
          }
        }, [_vm._t("default")], 2) : _vm._e()]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-7c2899cf", esExports);
        }
      }
      /***/

    },
    /* 274 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdChips = __webpack_require__(275);

      var _MdChips2 = _interopRequireDefault(_MdChips);

      var _MdChip = __webpack_require__(291);

      var _MdChip2 = _interopRequireDefault(_MdChip);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdChips2.default.name, _MdChips2.default);
        Vue.component(_MdChip2.default.name, _MdChip2.default);
      };
      /***/

    },
    /* 275 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdChips_vue__ = __webpack_require__(69);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdChips_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdChips_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdChips_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdChips_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0b3d2a1e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdChips_vue__ = __webpack_require__(290);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(276);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdChips_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0b3d2a1e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdChips_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdChips/MdChips.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-0b3d2a1e", Component.options);
          } else {
            hotAPI.reload("data-v-0b3d2a1e", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 276 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 277 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 278 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 279 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSvgLoader_vue__ = __webpack_require__(74);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSvgLoader_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSvgLoader_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSvgLoader_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSvgLoader_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0db3655e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSvgLoader_vue__ = __webpack_require__(281);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(280);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSvgLoader_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0db3655e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSvgLoader_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdSvgLoader/MdSvgLoader.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-0db3655e", Component.options);
          } else {
            hotAPI.reload("data-v-0db3655e", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 280 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 281 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("i", {
          staticClass: "md-svg-loader",
          domProps: {
            innerHTML: _vm._s(_vm.html)
          }
        });
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-0db3655e", esExports);
        }
      }
      /***/

    },
    /* 282 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm.mdSrc ? _c("md-svg-loader", {
          staticClass: "md-icon md-icon-image",
          class: [_vm.$mdActiveTheme],
          attrs: {
            "md-src": _vm.mdSrc
          },
          on: {
            "md-loaded": function ($event) {
              return _vm.$emit("md-loaded");
            }
          }
        }) : _c("i", {
          staticClass: "md-icon md-icon-font",
          class: [_vm.$mdActiveTheme]
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-59c14b8f", esExports);
        }
      }
      /***/

    },
    /* 283 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm._m(1);
      };

      var staticRenderFns = [function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("svg", {
          attrs: {
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }
        }, [_c("path", {
          attrs: {
            d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
          }
        }), _vm._v(" "), _c("path", {
          attrs: {
            d: "M0 0h24v24H0z",
            fill: "none"
          }
        })]);
      }, function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-icon", {
          staticClass: "md-icon-image"
        }, [_vm._m(0)]);
      }];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-f53126ba", esExports);
        }
      }
      /***/

    },
    /* 284 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPasswordOffIcon_vue__ = __webpack_require__(75);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPasswordOffIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPasswordOffIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPasswordOffIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPasswordOffIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4113206a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdPasswordOffIcon_vue__ = __webpack_require__(285);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPasswordOffIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4113206a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdPasswordOffIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/core/icons/MdPasswordOffIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-4113206a", Component.options);
          } else {
            hotAPI.reload("data-v-4113206a", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 285 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm._m(0);
      };

      var staticRenderFns = [function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-icon", {
          staticClass: "md-icon-image"
        }, [_c("svg", {
          attrs: {
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }
        }, [_c("path", {
          attrs: {
            d: "M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z",
            fill: "none"
          }
        }), _vm._v(" "), _c("path", {
          attrs: {
            d: "M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"
          }
        })])]);
      }];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-4113206a", esExports);
        }
      }
      /***/

    },
    /* 286 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPasswordOnIcon_vue__ = __webpack_require__(76);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPasswordOnIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPasswordOnIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPasswordOnIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPasswordOnIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_71ec8df4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdPasswordOnIcon_vue__ = __webpack_require__(287);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdPasswordOnIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_71ec8df4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdPasswordOnIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/core/icons/MdPasswordOnIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-71ec8df4", Component.options);
          } else {
            hotAPI.reload("data-v-71ec8df4", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 287 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm._m(0);
      };

      var staticRenderFns = [function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-icon", {
          staticClass: "md-icon-image"
        }, [_c("svg", {
          attrs: {
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }
        }, [_c("path", {
          attrs: {
            d: "M0 0h24v24H0z",
            fill: "none"
          }
        }), _vm._v(" "), _c("path", {
          attrs: {
            d: "M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
          }
        })])]);
      }];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-71ec8df4", esExports);
        }
      }
      /***/

    },
    /* 288 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-field",
          class: [_vm.$mdActiveTheme, _vm.fieldClasses],
          on: {
            blur: _vm.onBlur
          }
        }, [_vm._t("default"), _vm._v(" "), _vm.hasCounter ? _c("span", {
          staticClass: "md-count"
        }, [_vm._v(_vm._s(_vm.valueLength) + " / " + _vm._s(_vm.MdField.maxlength || _vm.MdField.counter))]) : _vm._e(), _vm._v(" "), _c("transition", {
          attrs: {
            name: "md-input-action",
            appear: ""
          }
        }, [_vm.hasValue && _vm.mdClearable ? _c("md-button", {
          staticClass: "md-icon-button md-dense md-input-action md-clear",
          attrs: {
            tabindex: "-1",
            disabled: _vm.MdField.disabled
          },
          on: {
            click: _vm.clearInput
          }
        }, [_c("md-clear-icon")], 1) : _vm._e()], 1), _vm._v(" "), _c("transition", {
          attrs: {
            name: "md-input-action",
            appear: ""
          }
        }, [_vm.hasPasswordToggle ? _c("md-button", {
          staticClass: "md-icon-button md-dense md-input-action md-toggle-password",
          attrs: {
            tabindex: "-1"
          },
          on: {
            click: _vm.togglePassword
          }
        }, [_vm.MdField.togglePassword ? _c("md-password-on-icon") : _c("md-password-off-icon")], 1) : _vm._e()], 1)], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-2ecd7b97", esExports);
        }
      }
      /***/

    },
    /* 289 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm.attributes.type === "checkbox" ? _c("input", _vm._g(_vm._b({
          directives: [{
            name: "model",
            rawName: "v-model",
            value: _vm.model,
            expression: "model"
          }],
          staticClass: "md-input",
          attrs: {
            type: "checkbox"
          },
          domProps: {
            checked: Array.isArray(_vm.model) ? _vm._i(_vm.model, null) > -1 : _vm.model
          },
          on: {
            focus: _vm.onFocus,
            blur: _vm.onBlur,
            change: function ($event) {
              var $$a = _vm.model,
                  $$el = $event.target,
                  $$c = $$el.checked ? true : false;

              if (Array.isArray($$a)) {
                var $$v = null,
                    $$i = _vm._i($$a, $$v);

                if ($$el.checked) {
                  $$i < 0 && (_vm.model = $$a.concat([$$v]));
                } else {
                  $$i > -1 && (_vm.model = $$a.slice(0, $$i).concat($$a.slice($$i + 1)));
                }
              } else {
                _vm.model = $$c;
              }
            }
          }
        }, "input", _vm.attributes, false), _vm.listeners)) : _vm.attributes.type === "radio" ? _c("input", _vm._g(_vm._b({
          directives: [{
            name: "model",
            rawName: "v-model",
            value: _vm.model,
            expression: "model"
          }],
          staticClass: "md-input",
          attrs: {
            type: "radio"
          },
          domProps: {
            checked: _vm._q(_vm.model, null)
          },
          on: {
            focus: _vm.onFocus,
            blur: _vm.onBlur,
            change: function ($event) {
              _vm.model = null;
            }
          }
        }, "input", _vm.attributes, false), _vm.listeners)) : _c("input", _vm._g(_vm._b({
          directives: [{
            name: "model",
            rawName: "v-model",
            value: _vm.model,
            expression: "model"
          }],
          staticClass: "md-input",
          attrs: {
            type: _vm.attributes.type
          },
          domProps: {
            value: _vm.model
          },
          on: {
            focus: _vm.onFocus,
            blur: _vm.onBlur,
            input: function ($event) {
              if ($event.target.composing) {
                return;
              }

              _vm.model = $event.target.value;
            }
          }
        }, "input", _vm.attributes, false), _vm.listeners));
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-69de42aa", esExports);
        }
      }
      /***/

    },
    /* 290 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-field", {
          staticClass: "md-chips",
          class: [_vm.$mdActiveTheme, _vm.chipsClasses]
        }, [_vm._t("default"), _vm._v(" "), _vm._l(_vm.value, function (chip, key) {
          return _c("md-chip", {
            key: chip,
            attrs: {
              "md-deletable": !_vm.mdStatic,
              "md-clickable": !_vm.mdStatic,
              "md-duplicated": _vm.duplicatedChip === chip
            },
            on: {
              keydown: function ($event) {
                if (!$event.type.indexOf("key") && _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")) {
                  return null;
                }

                return _vm.$emit("md-click", chip, key);
              },
              "md-delete": function ($event) {
                $event.stopPropagation();
                return _vm.removeChip(chip);
              }
            },
            nativeOn: {
              click: function ($event) {
                return _vm.$emit("md-click", chip, key);
              }
            }
          }, [_vm.$scopedSlots["md-chip"] ? _vm._t("md-chip", [_vm._v(_vm._s(chip))], {
            chip: chip
          }) : [_vm._v(_vm._s(chip))]], 2);
        }), _vm._v(" "), !_vm.mdStatic && _vm.modelRespectLimit ? _c("md-input", {
          ref: "input",
          attrs: {
            type: _vm.mdInputType,
            id: _vm.id,
            placeholder: _vm.mdPlaceholder
          },
          on: {
            input: _vm.handleInput,
            keydown: [function ($event) {
              if (!$event.type.indexOf("key") && _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")) {
                return null;
              }

              return _vm.insertChip($event);
            }, function ($event) {
              if (!$event.type.indexOf("key") && $event.keyCode !== 8) {
                return null;
              }

              return _vm.handleBackRemove($event);
            }]
          },
          model: {
            value: _vm.inputValue,
            callback: function ($$v) {
              _vm.inputValue = typeof $$v === "string" ? $$v.trim() : $$v;
            },
            expression: "inputValue"
          }
        }) : _vm._e()], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-0b3d2a1e", esExports);
        }
      }
      /***/

    },
    /* 291 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdChip_vue__ = __webpack_require__(78);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdChip_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdChip_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdChip_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdChip_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_84ba771c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdChip_vue__ = __webpack_require__(293);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(292);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdChip_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_84ba771c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdChip_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdChips/MdChip.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-84ba771c", Component.options);
          } else {
            hotAPI.reload("data-v-84ba771c", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 292 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 293 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("transition", {
          attrs: {
            name: "md-chip",
            appear: ""
          }
        }, [_c("div", _vm._g({
          staticClass: "md-chip",
          class: [_vm.$mdActiveTheme, _vm.chipClasses],
          attrs: {
            tabindex: "0"
          }
        }, _vm.$listeners), [_vm.mdClickable || !_vm.mdRipple ? _c("md-ripple", {
          attrs: {
            "md-disabled": _vm.mdDisabled
          }
        }, [_vm._t("default")], 2) : _vm._t("default"), _vm._v(" "), _c("transition", {
          attrs: {
            name: "md-input-action",
            appear: ""
          }
        }, [_vm.mdDeletable ? _c("md-button", {
          staticClass: "md-icon-button md-dense md-input-action md-clear",
          attrs: {
            tabindex: "-1"
          },
          on: {
            click: function ($event) {
              return _vm.$emit("md-delete", $event);
            }
          }
        }, [_c("md-clear-icon")], 1) : _vm._e()], 1)], 2)]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-84ba771c", esExports);
        }
      }
      /***/

    },
    /* 294 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdContent = __webpack_require__(79);

      var _MdContent2 = _interopRequireDefault(_MdContent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdContent2.default.name, _MdContent2.default);
      };
      /***/

    },
    /* 295 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdDatepicker = __webpack_require__(296);

      var _MdDatepicker2 = _interopRequireDefault(_MdDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdDatepicker2.default.name, _MdDatepicker2.default);
      };
      /***/

    },
    /* 296 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDatepicker_vue__ = __webpack_require__(81);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDatepicker_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDatepicker_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDatepicker_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDatepicker_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_37fe792f_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDatepicker_vue__ = __webpack_require__(328);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(297);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDatepicker_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_37fe792f_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDatepicker_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdDatepicker/MdDatepicker.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-37fe792f", Component.options);
          } else {
            hotAPI.reload("data-v-37fe792f", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 297 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 298 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      module.exports = typeof navigator !== 'undefined' && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);
      /***/
    },
    /* 299 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      }); // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/toInteger/index.js

      var toInteger = __webpack_require__(5); // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js


      var getTimezoneOffsetInMilliseconds = __webpack_require__(82); // EXTERNAL MODULE: ./node_modules/date-fns/esm/toDate/index.js


      var toDate = __webpack_require__(3); // EXTERNAL MODULE: ./node_modules/date-fns/esm/isValid/index.js


      var isValid = __webpack_require__(83); // EXTERNAL MODULE: ./node_modules/date-fns/esm/locale/en-US/index.js + 9 modules


      var en_US = __webpack_require__(84); // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js


      function addLeadingZeros(number, targetLength) {
        var sign = number < 0 ? '-' : '';
        var output = Math.abs(number).toString();

        while (output.length < targetLength) {
          output = '0' + output;
        }

        return sign + output;
      } // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js

      /*
       * |     | Unit                           |     | Unit                           |
       * |-----|--------------------------------|-----|--------------------------------|
       * |  a  | AM, PM                         |  A* | Milliseconds in day            |
       * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
       * |  d  | Day of month                   |  D  | Day of year                    |
       * |  e  | Local day of week              |  E  | Day of week                    |
       * |  f  |                                |  F* | Day of week in month           |
       * |  g* | Modified Julian day            |  G  | Era                            |
       * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
       * |  i! | ISO day of week                |  I! | ISO week of year               |
       * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
       * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
       * |  l* | (deprecated)                   |  L  | Stand-alone month              |
       * |  m  | Minute                         |  M  | Month                          |
       * |  n  |                                |  N  |                                |
       * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
       * |  p! | Long localized time            |  P! | Long localized date            |
       * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
       * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
       * |  s  | Second                         |  S  | Fraction of second             |
       * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
       * |  u  | Extended year                  |  U* | Cyclic year                    |
       * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
       * |  w  | Local week of year             |  W* | Week of month                  |
       * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
       * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
       * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
       *
       * Letters marked by * are not implemented but reserved by Unicode standard.
       *
       * Letters marked by ! are non-standard, but implemented by date-fns:
       * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
       * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
       *   i.e. 7 for Sunday, 1 for Monday, etc.
       * - `I` is ISO week of year, as opposed to `w` which is local week of year.
       * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
       *   `R` is supposed to be used in conjunction with `I` and `i`
       *   for universal ISO week-numbering date, whereas
       *   `Y` is supposed to be used in conjunction with `w` and `e`
       *   for week-numbering date specific to the locale.
       * - `P` is long localized date format
       * - `p` is long localized time format
       */


      var formatters = {
        // Year
        y: function (date, token) {
          // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
          // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
          // |----------|-------|----|-------|-------|-------|
          // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
          // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
          // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
          // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
          // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
          var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

          var year = signedYear > 0 ? signedYear : 1 - signedYear;
          return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);
        },
        // Month
        M: function (date, token) {
          var month = date.getUTCMonth();
          return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);
        },
        // Day of the month
        d: function (date, token) {
          return addLeadingZeros(date.getUTCDate(), token.length);
        },
        // AM or PM
        a: function (date, token) {
          var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';

          switch (token) {
            case 'a':
            case 'aa':
            case 'aaa':
              return dayPeriodEnumValue.toUpperCase();

            case 'aaaaa':
              return dayPeriodEnumValue[0];

            case 'aaaa':
            default:
              return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';
          }
        },
        // Hour [1-12]
        h: function (date, token) {
          return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
        },
        // Hour [0-23]
        H: function (date, token) {
          return addLeadingZeros(date.getUTCHours(), token.length);
        },
        // Minute
        m: function (date, token) {
          return addLeadingZeros(date.getUTCMinutes(), token.length);
        },
        // Second
        s: function (date, token) {
          return addLeadingZeros(date.getUTCSeconds(), token.length);
        }
        /* harmony default export */

      };
      var lightFormatters = formatters; // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js

      var MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376

      function getUTCDayOfYear(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var date = Object(toDate["a"
        /* default */
        ])(dirtyDate);
        var timestamp = date.getTime();
        date.setUTCMonth(0, 1);
        date.setUTCHours(0, 0, 0, 0);
        var startOfYearTimestamp = date.getTime();
        var difference = timestamp - startOfYearTimestamp;
        return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
      } // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js + 1 modules


      var getUTCISOWeek = __webpack_require__(85); // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js


      var getUTCISOWeekYear = __webpack_require__(86); // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getUTCWeek/index.js + 1 modules


      var getUTCWeek = __webpack_require__(87); // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js


      var getUTCWeekYear = __webpack_require__(25); // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/format/formatters/index.js


      var dayPeriodEnum = {
        am: 'am',
        pm: 'pm',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'morning',
        afternoon: 'afternoon',
        evening: 'evening',
        night: 'night'
        /*
         * |     | Unit                           |     | Unit                           |
         * |-----|--------------------------------|-----|--------------------------------|
         * |  a  | AM, PM                         |  A* | Milliseconds in day            |
         * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
         * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
         * |  d  | Day of month                   |  D  | Day of year                    |
         * |  e  | Local day of week              |  E  | Day of week                    |
         * |  f  |                                |  F* | Day of week in month           |
         * |  g* | Modified Julian day            |  G  | Era                            |
         * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
         * |  i! | ISO day of week                |  I! | ISO week of year               |
         * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
         * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
         * |  l* | (deprecated)                   |  L  | Stand-alone month              |
         * |  m  | Minute                         |  M  | Month                          |
         * |  n  |                                |  N  |                                |
         * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
         * |  p! | Long localized time            |  P! | Long localized date            |
         * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
         * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
         * |  s  | Second                         |  S  | Fraction of second             |
         * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
         * |  u  | Extended year                  |  U* | Cyclic year                    |
         * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
         * |  w  | Local week of year             |  W* | Week of month                  |
         * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
         * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
         * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
         *
         * Letters marked by * are not implemented but reserved by Unicode standard.
         *
         * Letters marked by ! are non-standard, but implemented by date-fns:
         * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
         * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
         *   i.e. 7 for Sunday, 1 for Monday, etc.
         * - `I` is ISO week of year, as opposed to `w` which is local week of year.
         * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
         *   `R` is supposed to be used in conjunction with `I` and `i`
         *   for universal ISO week-numbering date, whereas
         *   `Y` is supposed to be used in conjunction with `w` and `e`
         *   for week-numbering date specific to the locale.
         * - `P` is long localized date format
         * - `p` is long localized time format
         */

      };
      var formatters_formatters = {
        // Era
        G: function (date, token, localize) {
          var era = date.getUTCFullYear() > 0 ? 1 : 0;

          switch (token) {
            // AD, BC
            case 'G':
            case 'GG':
            case 'GGG':
              return localize.era(era, {
                width: 'abbreviated'
              });
            // A, B

            case 'GGGGG':
              return localize.era(era, {
                width: 'narrow'
              });
            // Anno Domini, Before Christ

            case 'GGGG':
            default:
              return localize.era(era, {
                width: 'wide'
              });
          }
        },
        // Year
        y: function (date, token, localize) {
          // Ordinal number
          if (token === 'yo') {
            var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

            var year = signedYear > 0 ? signedYear : 1 - signedYear;
            return localize.ordinalNumber(year, {
              unit: 'year'
            });
          }

          return lightFormatters.y(date, token);
        },
        // Local week-numbering year
        Y: function (date, token, localize, options) {
          var signedWeekYear = Object(getUTCWeekYear["a"
          /* default */
          ])(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)

          var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year

          if (token === 'YY') {
            var twoDigitYear = weekYear % 100;
            return addLeadingZeros(twoDigitYear, 2);
          } // Ordinal number


          if (token === 'Yo') {
            return localize.ordinalNumber(weekYear, {
              unit: 'year'
            });
          } // Padding


          return addLeadingZeros(weekYear, token.length);
        },
        // ISO week-numbering year
        R: function (date, token) {
          var isoWeekYear = Object(getUTCISOWeekYear["a"
          /* default */
          ])(date); // Padding

          return addLeadingZeros(isoWeekYear, token.length);
        },
        // Extended year. This is a single number designating the year of this calendar system.
        // The main difference between `y` and `u` localizers are B.C. years:
        // | Year | `y` | `u` |
        // |------|-----|-----|
        // | AC 1 |   1 |   1 |
        // | BC 1 |   1 |   0 |
        // | BC 2 |   2 |  -1 |
        // Also `yy` always returns the last two digits of a year,
        // while `uu` pads single digit years to 2 characters and returns other years unchanged.
        u: function (date, token) {
          var year = date.getUTCFullYear();
          return addLeadingZeros(year, token.length);
        },
        // Quarter
        Q: function (date, token, localize) {
          var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

          switch (token) {
            // 1, 2, 3, 4
            case 'Q':
              return String(quarter);
            // 01, 02, 03, 04

            case 'QQ':
              return addLeadingZeros(quarter, 2);
            // 1st, 2nd, 3rd, 4th

            case 'Qo':
              return localize.ordinalNumber(quarter, {
                unit: 'quarter'
              });
            // Q1, Q2, Q3, Q4

            case 'QQQ':
              return localize.quarter(quarter, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // 1, 2, 3, 4 (narrow quarter; could be not numerical)

            case 'QQQQQ':
              return localize.quarter(quarter, {
                width: 'narrow',
                context: 'formatting'
              });
            // 1st quarter, 2nd quarter, ...

            case 'QQQQ':
            default:
              return localize.quarter(quarter, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // Stand-alone quarter
        q: function (date, token, localize) {
          var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

          switch (token) {
            // 1, 2, 3, 4
            case 'q':
              return String(quarter);
            // 01, 02, 03, 04

            case 'qq':
              return addLeadingZeros(quarter, 2);
            // 1st, 2nd, 3rd, 4th

            case 'qo':
              return localize.ordinalNumber(quarter, {
                unit: 'quarter'
              });
            // Q1, Q2, Q3, Q4

            case 'qqq':
              return localize.quarter(quarter, {
                width: 'abbreviated',
                context: 'standalone'
              });
            // 1, 2, 3, 4 (narrow quarter; could be not numerical)

            case 'qqqqq':
              return localize.quarter(quarter, {
                width: 'narrow',
                context: 'standalone'
              });
            // 1st quarter, 2nd quarter, ...

            case 'qqqq':
            default:
              return localize.quarter(quarter, {
                width: 'wide',
                context: 'standalone'
              });
          }
        },
        // Month
        M: function (date, token, localize) {
          var month = date.getUTCMonth();

          switch (token) {
            case 'M':
            case 'MM':
              return lightFormatters.M(date, token);
            // 1st, 2nd, ..., 12th

            case 'Mo':
              return localize.ordinalNumber(month + 1, {
                unit: 'month'
              });
            // Jan, Feb, ..., Dec

            case 'MMM':
              return localize.month(month, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // J, F, ..., D

            case 'MMMMM':
              return localize.month(month, {
                width: 'narrow',
                context: 'formatting'
              });
            // January, February, ..., December

            case 'MMMM':
            default:
              return localize.month(month, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // Stand-alone month
        L: function (date, token, localize) {
          var month = date.getUTCMonth();

          switch (token) {
            // 1, 2, ..., 12
            case 'L':
              return String(month + 1);
            // 01, 02, ..., 12

            case 'LL':
              return addLeadingZeros(month + 1, 2);
            // 1st, 2nd, ..., 12th

            case 'Lo':
              return localize.ordinalNumber(month + 1, {
                unit: 'month'
              });
            // Jan, Feb, ..., Dec

            case 'LLL':
              return localize.month(month, {
                width: 'abbreviated',
                context: 'standalone'
              });
            // J, F, ..., D

            case 'LLLLL':
              return localize.month(month, {
                width: 'narrow',
                context: 'standalone'
              });
            // January, February, ..., December

            case 'LLLL':
            default:
              return localize.month(month, {
                width: 'wide',
                context: 'standalone'
              });
          }
        },
        // Local week of year
        w: function (date, token, localize, options) {
          var week = Object(getUTCWeek["a"
          /* default */
          ])(date, options);

          if (token === 'wo') {
            return localize.ordinalNumber(week, {
              unit: 'week'
            });
          }

          return addLeadingZeros(week, token.length);
        },
        // ISO week of year
        I: function (date, token, localize) {
          var isoWeek = Object(getUTCISOWeek["a"
          /* default */
          ])(date);

          if (token === 'Io') {
            return localize.ordinalNumber(isoWeek, {
              unit: 'week'
            });
          }

          return addLeadingZeros(isoWeek, token.length);
        },
        // Day of the month
        d: function (date, token, localize) {
          if (token === 'do') {
            return localize.ordinalNumber(date.getUTCDate(), {
              unit: 'date'
            });
          }

          return lightFormatters.d(date, token);
        },
        // Day of year
        D: function (date, token, localize) {
          var dayOfYear = getUTCDayOfYear(date);

          if (token === 'Do') {
            return localize.ordinalNumber(dayOfYear, {
              unit: 'dayOfYear'
            });
          }

          return addLeadingZeros(dayOfYear, token.length);
        },
        // Day of week
        E: function (date, token, localize) {
          var dayOfWeek = date.getUTCDay();

          switch (token) {
            // Tue
            case 'E':
            case 'EE':
            case 'EEE':
              return localize.day(dayOfWeek, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // T

            case 'EEEEE':
              return localize.day(dayOfWeek, {
                width: 'narrow',
                context: 'formatting'
              });
            // Tu

            case 'EEEEEE':
              return localize.day(dayOfWeek, {
                width: 'short',
                context: 'formatting'
              });
            // Tuesday

            case 'EEEE':
            default:
              return localize.day(dayOfWeek, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // Local day of week
        e: function (date, token, localize, options) {
          var dayOfWeek = date.getUTCDay();
          var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

          switch (token) {
            // Numerical value (Nth day of week with current locale or weekStartsOn)
            case 'e':
              return String(localDayOfWeek);
            // Padded numerical value

            case 'ee':
              return addLeadingZeros(localDayOfWeek, 2);
            // 1st, 2nd, ..., 7th

            case 'eo':
              return localize.ordinalNumber(localDayOfWeek, {
                unit: 'day'
              });

            case 'eee':
              return localize.day(dayOfWeek, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // T

            case 'eeeee':
              return localize.day(dayOfWeek, {
                width: 'narrow',
                context: 'formatting'
              });
            // Tu

            case 'eeeeee':
              return localize.day(dayOfWeek, {
                width: 'short',
                context: 'formatting'
              });
            // Tuesday

            case 'eeee':
            default:
              return localize.day(dayOfWeek, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // Stand-alone local day of week
        c: function (date, token, localize, options) {
          var dayOfWeek = date.getUTCDay();
          var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

          switch (token) {
            // Numerical value (same as in `e`)
            case 'c':
              return String(localDayOfWeek);
            // Padded numerical value

            case 'cc':
              return addLeadingZeros(localDayOfWeek, token.length);
            // 1st, 2nd, ..., 7th

            case 'co':
              return localize.ordinalNumber(localDayOfWeek, {
                unit: 'day'
              });

            case 'ccc':
              return localize.day(dayOfWeek, {
                width: 'abbreviated',
                context: 'standalone'
              });
            // T

            case 'ccccc':
              return localize.day(dayOfWeek, {
                width: 'narrow',
                context: 'standalone'
              });
            // Tu

            case 'cccccc':
              return localize.day(dayOfWeek, {
                width: 'short',
                context: 'standalone'
              });
            // Tuesday

            case 'cccc':
            default:
              return localize.day(dayOfWeek, {
                width: 'wide',
                context: 'standalone'
              });
          }
        },
        // ISO day of week
        i: function (date, token, localize) {
          var dayOfWeek = date.getUTCDay();
          var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;

          switch (token) {
            // 2
            case 'i':
              return String(isoDayOfWeek);
            // 02

            case 'ii':
              return addLeadingZeros(isoDayOfWeek, token.length);
            // 2nd

            case 'io':
              return localize.ordinalNumber(isoDayOfWeek, {
                unit: 'day'
              });
            // Tue

            case 'iii':
              return localize.day(dayOfWeek, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // T

            case 'iiiii':
              return localize.day(dayOfWeek, {
                width: 'narrow',
                context: 'formatting'
              });
            // Tu

            case 'iiiiii':
              return localize.day(dayOfWeek, {
                width: 'short',
                context: 'formatting'
              });
            // Tuesday

            case 'iiii':
            default:
              return localize.day(dayOfWeek, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // AM or PM
        a: function (date, token, localize) {
          var hours = date.getUTCHours();
          var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';

          switch (token) {
            case 'a':
            case 'aa':
            case 'aaa':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'abbreviated',
                context: 'formatting'
              });

            case 'aaaaa':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'narrow',
                context: 'formatting'
              });

            case 'aaaa':
            default:
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // AM, PM, midnight, noon
        b: function (date, token, localize) {
          var hours = date.getUTCHours();
          var dayPeriodEnumValue;

          if (hours === 12) {
            dayPeriodEnumValue = dayPeriodEnum.noon;
          } else if (hours === 0) {
            dayPeriodEnumValue = dayPeriodEnum.midnight;
          } else {
            dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
          }

          switch (token) {
            case 'b':
            case 'bb':
            case 'bbb':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'abbreviated',
                context: 'formatting'
              });

            case 'bbbbb':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'narrow',
                context: 'formatting'
              });

            case 'bbbb':
            default:
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // in the morning, in the afternoon, in the evening, at night
        B: function (date, token, localize) {
          var hours = date.getUTCHours();
          var dayPeriodEnumValue;

          if (hours >= 17) {
            dayPeriodEnumValue = dayPeriodEnum.evening;
          } else if (hours >= 12) {
            dayPeriodEnumValue = dayPeriodEnum.afternoon;
          } else if (hours >= 4) {
            dayPeriodEnumValue = dayPeriodEnum.morning;
          } else {
            dayPeriodEnumValue = dayPeriodEnum.night;
          }

          switch (token) {
            case 'B':
            case 'BB':
            case 'BBB':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'abbreviated',
                context: 'formatting'
              });

            case 'BBBBB':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'narrow',
                context: 'formatting'
              });

            case 'BBBB':
            default:
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // Hour [1-12]
        h: function (date, token, localize) {
          if (token === 'ho') {
            var hours = date.getUTCHours() % 12;
            if (hours === 0) hours = 12;
            return localize.ordinalNumber(hours, {
              unit: 'hour'
            });
          }

          return lightFormatters.h(date, token);
        },
        // Hour [0-23]
        H: function (date, token, localize) {
          if (token === 'Ho') {
            return localize.ordinalNumber(date.getUTCHours(), {
              unit: 'hour'
            });
          }

          return lightFormatters.H(date, token);
        },
        // Hour [0-11]
        K: function (date, token, localize) {
          var hours = date.getUTCHours() % 12;

          if (token === 'Ko') {
            return localize.ordinalNumber(hours, {
              unit: 'hour'
            });
          }

          return addLeadingZeros(hours, token.length);
        },
        // Hour [1-24]
        k: function (date, token, localize) {
          var hours = date.getUTCHours();
          if (hours === 0) hours = 24;

          if (token === 'ko') {
            return localize.ordinalNumber(hours, {
              unit: 'hour'
            });
          }

          return addLeadingZeros(hours, token.length);
        },
        // Minute
        m: function (date, token, localize) {
          if (token === 'mo') {
            return localize.ordinalNumber(date.getUTCMinutes(), {
              unit: 'minute'
            });
          }

          return lightFormatters.m(date, token);
        },
        // Second
        s: function (date, token, localize) {
          if (token === 'so') {
            return localize.ordinalNumber(date.getUTCSeconds(), {
              unit: 'second'
            });
          }

          return lightFormatters.s(date, token);
        },
        // Fraction of second
        S: function (date, token) {
          var numberOfDigits = token.length;
          var milliseconds = date.getUTCMilliseconds();
          var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
          return addLeadingZeros(fractionalSeconds, numberOfDigits);
        },
        // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
        X: function (date, token, _localize, options) {
          var originalDate = options._originalDate || date;
          var timezoneOffset = originalDate.getTimezoneOffset();

          if (timezoneOffset === 0) {
            return 'Z';
          }

          switch (token) {
            // Hours and optional minutes
            case 'X':
              return formatTimezoneWithOptionalMinutes(timezoneOffset);
            // Hours, minutes and optional seconds without `:` delimiter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `XX`

            case 'XXXX':
            case 'XX':
              // Hours and minutes without `:` delimiter
              return formatTimezone(timezoneOffset);
            // Hours, minutes and optional seconds with `:` delimiter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `XXX`

            case 'XXXXX':
            case 'XXX': // Hours and minutes with `:` delimiter

            default:
              return formatTimezone(timezoneOffset, ':');
          }
        },
        // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
        x: function (date, token, _localize, options) {
          var originalDate = options._originalDate || date;
          var timezoneOffset = originalDate.getTimezoneOffset();

          switch (token) {
            // Hours and optional minutes
            case 'x':
              return formatTimezoneWithOptionalMinutes(timezoneOffset);
            // Hours, minutes and optional seconds without `:` delimiter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `xx`

            case 'xxxx':
            case 'xx':
              // Hours and minutes without `:` delimiter
              return formatTimezone(timezoneOffset);
            // Hours, minutes and optional seconds with `:` delimiter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `xxx`

            case 'xxxxx':
            case 'xxx': // Hours and minutes with `:` delimiter

            default:
              return formatTimezone(timezoneOffset, ':');
          }
        },
        // Timezone (GMT)
        O: function (date, token, _localize, options) {
          var originalDate = options._originalDate || date;
          var timezoneOffset = originalDate.getTimezoneOffset();

          switch (token) {
            // Short
            case 'O':
            case 'OO':
            case 'OOO':
              return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
            // Long

            case 'OOOO':
            default:
              return 'GMT' + formatTimezone(timezoneOffset, ':');
          }
        },
        // Timezone (specific non-location)
        z: function (date, token, _localize, options) {
          var originalDate = options._originalDate || date;
          var timezoneOffset = originalDate.getTimezoneOffset();

          switch (token) {
            // Short
            case 'z':
            case 'zz':
            case 'zzz':
              return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
            // Long

            case 'zzzz':
            default:
              return 'GMT' + formatTimezone(timezoneOffset, ':');
          }
        },
        // Seconds timestamp
        t: function (date, token, _localize, options) {
          var originalDate = options._originalDate || date;
          var timestamp = Math.floor(originalDate.getTime() / 1000);
          return addLeadingZeros(timestamp, token.length);
        },
        // Milliseconds timestamp
        T: function (date, token, _localize, options) {
          var originalDate = options._originalDate || date;
          var timestamp = originalDate.getTime();
          return addLeadingZeros(timestamp, token.length);
        }
      };

      function formatTimezoneShort(offset, dirtyDelimiter) {
        var sign = offset > 0 ? '-' : '+';
        var absOffset = Math.abs(offset);
        var hours = Math.floor(absOffset / 60);
        var minutes = absOffset % 60;

        if (minutes === 0) {
          return sign + String(hours);
        }

        var delimiter = dirtyDelimiter || '';
        return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
      }

      function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
        if (offset % 60 === 0) {
          var sign = offset > 0 ? '-' : '+';
          return sign + addLeadingZeros(Math.abs(offset) / 60, 2);
        }

        return formatTimezone(offset, dirtyDelimiter);
      }

      function formatTimezone(offset, dirtyDelimiter) {
        var delimiter = dirtyDelimiter || '';
        var sign = offset > 0 ? '-' : '+';
        var absOffset = Math.abs(offset);
        var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
        var minutes = addLeadingZeros(absOffset % 60, 2);
        return sign + hours + delimiter + minutes;
      }
      /* harmony default export */


      var format_formatters = formatters_formatters; // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/format/longFormatters/index.js

      function dateLongFormatter(pattern, formatLong) {
        switch (pattern) {
          case 'P':
            return formatLong.date({
              width: 'short'
            });

          case 'PP':
            return formatLong.date({
              width: 'medium'
            });

          case 'PPP':
            return formatLong.date({
              width: 'long'
            });

          case 'PPPP':
          default:
            return formatLong.date({
              width: 'full'
            });
        }
      }

      function timeLongFormatter(pattern, formatLong) {
        switch (pattern) {
          case 'p':
            return formatLong.time({
              width: 'short'
            });

          case 'pp':
            return formatLong.time({
              width: 'medium'
            });

          case 'ppp':
            return formatLong.time({
              width: 'long'
            });

          case 'pppp':
          default:
            return formatLong.time({
              width: 'full'
            });
        }
      }

      function dateTimeLongFormatter(pattern, formatLong) {
        var matchResult = pattern.match(/(P+)(p+)?/);
        var datePattern = matchResult[1];
        var timePattern = matchResult[2];

        if (!timePattern) {
          return dateLongFormatter(pattern, formatLong);
        }

        var dateTimeFormat;

        switch (datePattern) {
          case 'P':
            dateTimeFormat = formatLong.dateTime({
              width: 'short'
            });
            break;

          case 'PP':
            dateTimeFormat = formatLong.dateTime({
              width: 'medium'
            });
            break;

          case 'PPP':
            dateTimeFormat = formatLong.dateTime({
              width: 'long'
            });
            break;

          case 'PPPP':
          default:
            dateTimeFormat = formatLong.dateTime({
              width: 'full'
            });
            break;
        }

        return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));
      }

      var longFormatters = {
        p: timeLongFormatter,
        P: dateTimeLongFormatter
        /* harmony default export */

      };
      var format_longFormatters = longFormatters; // EXTERNAL MODULE: ./node_modules/date-fns/esm/subMilliseconds/index.js + 1 modules

      var subMilliseconds = __webpack_require__(88); // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/protectedTokens/index.js


      var protectedTokens = __webpack_require__(89); // CONCATENATED MODULE: ./node_modules/date-fns/esm/format/index.js

      /* harmony export (immutable) */


      __webpack_exports__["default"] = format; // This RegExp consists of three parts separated by `|`:
      // - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
      //   (one of the certain letters followed by `o`)
      // - (\w)\1* matches any sequences of the same letter
      // - '' matches two quote characters in a row
      // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
      //   except a single quote symbol, which ends the sequence.
      //   Two quote characters do not end the sequence.
      //   If there is no matching single quote
      //   then the sequence will continue until the end of the string.
      // - . matches any single character unmatched by previous parts of the RegExps

      var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
      // sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

      var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
      var escapedStringRegExp = /^'(.*?)'?$/;
      var doubleQuoteRegExp = /''/g;
      /**
       * @name format
       * @category Common Helpers
       * @summary Format the date.
       *
       * @description
       * Return the formatted date string in the given format. The result may vary by locale.
       *
       * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
       * > See: https://git.io/fxCyr
       *
       * The characters wrapped between two single quotes characters (') are escaped.
       * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
       * (see the last example)
       *
       * Format of the string is based on Unicode Technical Standard #35:
       * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
       * with a few additions (see note 7 below the table).
       *
       * Accepted patterns:
       * | Unit                            | Pattern | Result examples                   | Notes |
       * |---------------------------------|---------|-----------------------------------|-------|
       * | Era                             | G..GGG  | AD, BC                            |       |
       * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
       * |                                 | GGGGG   | A, B                              |       |
       * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
       * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
       * |                                 | yy      | 44, 01, 00, 17                    | 5     |
       * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
       * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
       * |                                 | yyyyy   | ...                               | 3,5   |
       * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
       * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
       * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
       * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
       * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
       * |                                 | YYYYY   | ...                               | 3,5   |
       * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
       * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
       * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
       * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
       * |                                 | RRRRR   | ...                               | 3,5,7 |
       * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
       * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
       * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
       * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
       * |                                 | uuuuu   | ...                               | 3,5   |
       * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
       * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
       * |                                 | QQ      | 01, 02, 03, 04                    |       |
       * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
       * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
       * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
       * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
       * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
       * |                                 | qq      | 01, 02, 03, 04                    |       |
       * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
       * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
       * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
       * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
       * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
       * |                                 | MM      | 01, 02, ..., 12                   |       |
       * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
       * |                                 | MMMM    | January, February, ..., December  | 2     |
       * |                                 | MMMMM   | J, F, ..., D                      |       |
       * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
       * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
       * |                                 | LL      | 01, 02, ..., 12                   |       |
       * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
       * |                                 | LLLL    | January, February, ..., December  | 2     |
       * |                                 | LLLLL   | J, F, ..., D                      |       |
       * | Local week of year              | w       | 1, 2, ..., 53                     |       |
       * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
       * |                                 | ww      | 01, 02, ..., 53                   |       |
       * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
       * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
       * |                                 | II      | 01, 02, ..., 53                   | 7     |
       * | Day of month                    | d       | 1, 2, ..., 31                     |       |
       * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
       * |                                 | dd      | 01, 02, ..., 31                   |       |
       * | Day of year                     | D       | 1, 2, ..., 365, 366               | 8     |
       * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
       * |                                 | DD      | 01, 02, ..., 365, 366             | 8     |
       * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
       * |                                 | DDDD    | ...                               | 3     |
       * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
       * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
       * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
       * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
       * |                                 | ii      | 01, 02, ..., 07                   | 7     |
       * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |
       * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
       * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
       * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |
       * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
       * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
       * |                                 | ee      | 02, 03, ..., 01                   |       |
       * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |
       * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
       * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
       * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
       * |                                 | cc      | 02, 03, ..., 01                   |       |
       * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |
       * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
       * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | AM, PM                          | a..aaa  | AM, PM                            |       |
       * |                                 | aaaa    | a.m., p.m.                        | 2     |
       * |                                 | aaaaa   | a, p                              |       |
       * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |
       * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
       * |                                 | bbbbb   | a, p, n, mi                       |       |
       * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
       * |                                 | BBBB    | at night, in the morning, ...     | 2     |
       * |                                 | BBBBB   | at night, in the morning, ...     |       |
       * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
       * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
       * |                                 | hh      | 01, 02, ..., 11, 12               |       |
       * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
       * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
       * |                                 | HH      | 00, 01, 02, ..., 23               |       |
       * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
       * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
       * |                                 | KK      | 1, 2, ..., 11, 0                  |       |
       * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
       * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
       * |                                 | kk      | 24, 01, 02, ..., 23               |       |
       * | Minute                          | m       | 0, 1, ..., 59                     |       |
       * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
       * |                                 | mm      | 00, 01, ..., 59                   |       |
       * | Second                          | s       | 0, 1, ..., 59                     |       |
       * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
       * |                                 | ss      | 00, 01, ..., 59                   |       |
       * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
       * |                                 | SS      | 00, 01, ..., 99                   |       |
       * |                                 | SSS     | 000, 0001, ..., 999               |       |
       * |                                 | SSSS    | ...                               | 3     |
       * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
       * |                                 | XX      | -0800, +0530, Z                   |       |
       * |                                 | XXX     | -08:00, +05:30, Z                 |       |
       * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
       * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
       * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
       * |                                 | xx      | -0800, +0530, +0000               |       |
       * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
       * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
       * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
       * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
       * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
       * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
       * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
       * | Seconds timestamp               | t       | 512969520                         | 7     |
       * |                                 | tt      | ...                               | 3,7   |
       * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
       * |                                 | TT      | ...                               | 3,7   |
       * | Long localized date             | P       | 05/29/1453                        | 7     |
       * |                                 | PP      | May 29, 1453                      | 7     |
       * |                                 | PPP     | May 29th, 1453                    | 7     |
       * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |
       * | Long localized time             | p       | 12:00 AM                          | 7     |
       * |                                 | pp      | 12:00:00 AM                       | 7     |
       * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
       * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
       * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |
       * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |
       * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |
       * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |
       * Notes:
       * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
       *    are the same as "stand-alone" units, but are different in some languages.
       *    "Formatting" units are declined according to the rules of the language
       *    in the context of a date. "Stand-alone" units are always nominative singular:
       *
       *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
       *
       *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
       *
       * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
       *    the single quote characters (see below).
       *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
       *    the output will be the same as default pattern for this unit, usually
       *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
       *    are marked with "2" in the last column of the table.
       *
       *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
       *
       *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
       *
       *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
       *
       *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
       *
       *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
       *
       * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
       *    The output will be padded with zeros to match the length of the pattern.
       *
       *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
       *
       * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
       *    These tokens represent the shortest form of the quarter.
       *
       * 5. The main difference between `y` and `u` patterns are B.C. years:
       *
       *    | Year | `y` | `u` |
       *    |------|-----|-----|
       *    | AC 1 |   1 |   1 |
       *    | BC 1 |   1 |   0 |
       *    | BC 2 |   2 |  -1 |
       *
       *    Also `yy` always returns the last two digits of a year,
       *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
       *
       *    | Year | `yy` | `uu` |
       *    |------|------|------|
       *    | 1    |   01 |   01 |
       *    | 14   |   14 |   14 |
       *    | 376  |   76 |  376 |
       *    | 1453 |   53 | 1453 |
       *
       *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
       *    except local week-numbering years are dependent on `options.weekStartsOn`
       *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
       *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
       *
       * 6. Specific non-location timezones are currently unavailable in `date-fns`,
       *    so right now these tokens fall back to GMT timezones.
       *
       * 7. These patterns are not in the Unicode Technical Standard #35:
       *    - `i`: ISO day of week
       *    - `I`: ISO week of year
       *    - `R`: ISO week-numbering year
       *    - `t`: seconds timestamp
       *    - `T`: milliseconds timestamp
       *    - `o`: ordinal number modifier
       *    - `P`: long localized date
       *    - `p`: long localized time
       *
       * 8. These tokens are often confused with others. See: https://git.io/fxCyr
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The second argument is now required for the sake of explicitness.
       *
       *   ```javascript
       *   // Before v2.0.0
       *   format(new Date(2016, 0, 1))
       *
       *   // v2.0.0 onward
       *   format(new Date(2016, 0, 1), "yyyy-MM-dd'T'HH:mm:ss.SSSxxx")
       *   ```
       *
       * - New format string API for `format` function
       *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).
       *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.
       *
       * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.
       *
       * @param {Date|Number} date - the original date
       * @param {String} format - the string of tokens
       * @param {Object} [options] - an object with options.
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:
       *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).
       *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens (`yy`, `yyyy`).
       *   See: https://git.io/fxCyr
       * @returns {String} the formatted date string
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.locale` must contain `localize` property
       * @throws {RangeError} `options.locale` must contain `formatLong` property
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
       * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see: https://git.io/fxCyr
       *
       * @example
       * // Represent 11 February 2014 in middle-endian format:
       * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
       * //=> '02/11/2014'
       *
       * @example
       * // Represent 2 July 2014 in Esperanto:
       * import { eoLocale } from 'date-fns/locale/eo'
       * var result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
       *   locale: eoLocale
       * })
       * //=> '2-a de julio 2014'
       *
       * @example
       * // Escape string by single quote characters:
       * var result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
       * //=> "3 o'clock"
       */

      function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var formatStr = String(dirtyFormatStr);
        var options = dirtyOptions || {};
        var locale = options.locale || en_US["a"
        /* default */
        ];
        var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(toInteger["a"
        /* default */
        ])(localeFirstWeekContainsDate);
        var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(toInteger["a"
        /* default */
        ])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

        if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
          throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
        }

        var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(toInteger["a"
        /* default */
        ])(localeWeekStartsOn);
        var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(toInteger["a"
        /* default */
        ])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
        }

        if (!locale.localize) {
          throw new RangeError('locale must contain localize property');
        }

        if (!locale.formatLong) {
          throw new RangeError('locale must contain formatLong property');
        }

        var originalDate = Object(toDate["a"
        /* default */
        ])(dirtyDate);

        if (!Object(isValid["default"])(originalDate)) {
          throw new RangeError('Invalid time value');
        } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
        // This ensures that when UTC functions will be implemented, locales will be compatible with them.
        // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376


        var timezoneOffset = Object(getTimezoneOffsetInMilliseconds["a"
        /* default */
        ])(originalDate);
        var utcDate = Object(subMilliseconds["a"
        /* default */
        ])(originalDate, timezoneOffset);
        var formatterOptions = {
          firstWeekContainsDate: firstWeekContainsDate,
          weekStartsOn: weekStartsOn,
          locale: locale,
          _originalDate: originalDate
        };
        var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {
          var firstCharacter = substring[0];

          if (firstCharacter === 'p' || firstCharacter === 'P') {
            var longFormatter = format_longFormatters[firstCharacter];
            return longFormatter(substring, locale.formatLong, formatterOptions);
          }

          return substring;
        }).join('').match(formattingTokensRegExp).map(function (substring) {
          // Replace two single quote characters with one single quote character
          if (substring === "''") {
            return "'";
          }

          var firstCharacter = substring[0];

          if (firstCharacter === "'") {
            return cleanEscapedString(substring);
          }

          var formatter = format_formatters[firstCharacter];

          if (formatter) {
            if (!options.awareOfUnicodeTokens && Object(protectedTokens["a"
            /* isProtectedToken */
            ])(substring)) {
              Object(protectedTokens["b"
              /* throwProtectedError */
              ])(substring);
            }

            return formatter(utcDate, substring, locale.localize, formatterOptions);
          }

          return substring;
        }).join('');
        return result;
      }

      function cleanEscapedString(input) {
        return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
      }
      /***/

    },
    /* 300 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      }); // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/toInteger/index.js

      var toInteger = __webpack_require__(5); // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/assign/index.js


      function assign_assign(target, dirtyObject) {
        if (target == null) {
          throw new TypeError('assign requires that input parameter not be null or undefined');
        }

        dirtyObject = dirtyObject || {};

        for (var property in dirtyObject) {
          if (dirtyObject.hasOwnProperty(property)) {
            target[property] = dirtyObject[property];
          }
        }

        return target;
      } // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js


      var getTimezoneOffsetInMilliseconds = __webpack_require__(82); // EXTERNAL MODULE: ./node_modules/date-fns/esm/toDate/index.js


      var toDate = __webpack_require__(3); // EXTERNAL MODULE: ./node_modules/date-fns/esm/subMilliseconds/index.js + 1 modules


      var subMilliseconds = __webpack_require__(88); // EXTERNAL MODULE: ./node_modules/date-fns/esm/locale/en-US/index.js + 9 modules


      var en_US = __webpack_require__(84); // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js


      var getUTCWeekYear = __webpack_require__(25); // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/setUTCDay/index.js
      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(toInteger["a"
        /* default */
        ])(localeWeekStartsOn);
        var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(toInteger["a"
        /* default */
        ])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
        }

        var date = Object(toDate["a"
        /* default */
        ])(dirtyDate);
        var day = Object(toInteger["a"
        /* default */
        ])(dirtyDay);
        var currentDay = date.getUTCDay();
        var remainder = day % 7;
        var dayIndex = (remainder + 7) % 7;
        var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
        date.setUTCDate(date.getUTCDate() + diff);
        return date;
      } // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getUTCWeek/index.js + 1 modules


      var getUTCWeek = __webpack_require__(87); // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/setUTCWeek/index.js
      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function setUTCWeek(dirtyDate, dirtyWeek, options) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var date = Object(toDate["a"
        /* default */
        ])(dirtyDate);
        var week = Object(toInteger["a"
        /* default */
        ])(dirtyWeek);
        var diff = Object(getUTCWeek["a"
        /* default */
        ])(date, options) - week;
        date.setUTCDate(date.getUTCDate() - diff * 7);
        return date;
      } // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js


      var startOfUTCWeek = __webpack_require__(20); // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/setUTCISODay/index.js
      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function setUTCISODay(dirtyDate, dirtyDay) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var day = Object(toInteger["a"
        /* default */
        ])(dirtyDay);

        if (day % 7 === 0) {
          day = day - 7;
        }

        var weekStartsOn = 1;
        var date = Object(toDate["a"
        /* default */
        ])(dirtyDate);
        var currentDay = date.getUTCDay();
        var remainder = day % 7;
        var dayIndex = (remainder + 7) % 7;
        var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
        date.setUTCDate(date.getUTCDate() + diff);
        return date;
      } // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js + 1 modules


      var getUTCISOWeek = __webpack_require__(85); // CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js
      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var date = Object(toDate["a"
        /* default */
        ])(dirtyDate);
        var isoWeek = Object(toInteger["a"
        /* default */
        ])(dirtyISOWeek);
        var diff = Object(getUTCISOWeek["a"
        /* default */
        ])(date) - isoWeek;
        date.setUTCDate(date.getUTCDate() - diff * 7);
        return date;
      } // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js


      var startOfUTCISOWeek = __webpack_require__(19); // CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/index.js


      var MILLISECONDS_IN_HOUR = 3600000;
      var MILLISECONDS_IN_MINUTE = 60000;
      var MILLISECONDS_IN_SECOND = 1000;
      var numericPatterns = {
        month: /^(1[0-2]|0?\d)/,
        // 0 to 12
        date: /^(3[0-1]|[0-2]?\d)/,
        // 0 to 31
        dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
        // 0 to 366
        week: /^(5[0-3]|[0-4]?\d)/,
        // 0 to 53
        hour23h: /^(2[0-3]|[0-1]?\d)/,
        // 0 to 23
        hour24h: /^(2[0-4]|[0-1]?\d)/,
        // 0 to 24
        hour11h: /^(1[0-1]|0?\d)/,
        // 0 to 11
        hour12h: /^(1[0-2]|0?\d)/,
        // 0 to 12
        minute: /^[0-5]?\d/,
        // 0 to 59
        second: /^[0-5]?\d/,
        // 0 to 59
        singleDigit: /^\d/,
        // 0 to 9
        twoDigits: /^\d{1,2}/,
        // 0 to 99
        threeDigits: /^\d{1,3}/,
        // 0 to 999
        fourDigits: /^\d{1,4}/,
        // 0 to 9999
        anyDigitsSigned: /^-?\d+/,
        singleDigitSigned: /^-?\d/,
        // 0 to 9, -0 to -9
        twoDigitsSigned: /^-?\d{1,2}/,
        // 0 to 99, -0 to -99
        threeDigitsSigned: /^-?\d{1,3}/,
        // 0 to 999, -0 to -999
        fourDigitsSigned: /^-?\d{1,4}/ // 0 to 9999, -0 to -9999

      };
      var timezonePatterns = {
        basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
        basic: /^([+-])(\d{2})(\d{2})|Z/,
        basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
        extended: /^([+-])(\d{2}):(\d{2})|Z/,
        extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
      };

      function parseNumericPattern(pattern, string, valueCallback) {
        var matchResult = string.match(pattern);

        if (!matchResult) {
          return null;
        }

        var value = parseInt(matchResult[0], 10);
        return {
          value: valueCallback ? valueCallback(value) : value,
          rest: string.slice(matchResult[0].length)
        };
      }

      function parseTimezonePattern(pattern, string) {
        var matchResult = string.match(pattern);

        if (!matchResult) {
          return null;
        } // Input is 'Z'


        if (matchResult[0] === 'Z') {
          return {
            value: 0,
            rest: string.slice(1)
          };
        }

        var sign = matchResult[1] === '+' ? 1 : -1;
        var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
        var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
        var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
        return {
          value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),
          rest: string.slice(matchResult[0].length)
        };
      }

      function parseAnyDigitsSigned(string, valueCallback) {
        return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);
      }

      function parseNDigits(n, string, valueCallback) {
        switch (n) {
          case 1:
            return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);

          case 2:
            return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);

          case 3:
            return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);

          case 4:
            return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);

          default:
            return parseNumericPattern(new RegExp('^\\d{1,' + n + '}'), string, valueCallback);
        }
      }

      function parseNDigitsSigned(n, string, valueCallback) {
        switch (n) {
          case 1:
            return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);

          case 2:
            return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);

          case 3:
            return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);

          case 4:
            return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);

          default:
            return parseNumericPattern(new RegExp('^-?\\d{1,' + n + '}'), string, valueCallback);
        }
      }

      function dayPeriodEnumToHours(enumValue) {
        switch (enumValue) {
          case 'morning':
            return 4;

          case 'evening':
            return 17;

          case 'pm':
          case 'noon':
          case 'afternoon':
            return 12;

          case 'am':
          case 'midnight':
          case 'night':
          default:
            return 0;
        }
      }

      function normalizeTwoDigitYear(twoDigitYear, currentYear) {
        var isCommonEra = currentYear > 0; // Absolute number of the current year:
        // 1 -> 1 AC
        // 0 -> 1 BC
        // -1 -> 2 BC

        var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
        var result;

        if (absCurrentYear <= 50) {
          result = twoDigitYear || 100;
        } else {
          var rangeEnd = absCurrentYear + 50;
          var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
          var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
          result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
        }

        return isCommonEra ? result : 1 - result;
      }

      var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
      var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation

      function isLeapYearIndex(year) {
        return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
      }
      /*
       * |     | Unit                           |     | Unit                           |
       * |-----|--------------------------------|-----|--------------------------------|
       * |  a  | AM, PM                         |  A* | Milliseconds in day            |
       * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
       * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
       * |  d  | Day of month                   |  D  | Day of year                    |
       * |  e  | Local day of week              |  E  | Day of week                    |
       * |  f  |                                |  F* | Day of week in month           |
       * |  g* | Modified Julian day            |  G  | Era                            |
       * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
       * |  i! | ISO day of week                |  I! | ISO week of year               |
       * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
       * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
       * |  l* | (deprecated)                   |  L  | Stand-alone month              |
       * |  m  | Minute                         |  M  | Month                          |
       * |  n  |                                |  N  |                                |
       * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
       * |  p  |                                |  P  |                                |
       * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
       * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
       * |  s  | Second                         |  S  | Fraction of second             |
       * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
       * |  u  | Extended year                  |  U* | Cyclic year                    |
       * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
       * |  w  | Local week of year             |  W* | Week of month                  |
       * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
       * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
       * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
       *
       * Letters marked by * are not implemented but reserved by Unicode standard.
       *
       * Letters marked by ! are non-standard, but implemented by date-fns:
       * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
       * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
       *   i.e. 7 for Sunday, 1 for Monday, etc.
       * - `I` is ISO week of year, as opposed to `w` which is local week of year.
       * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
       *   `R` is supposed to be used in conjunction with `I` and `i`
       *   for universal ISO week-numbering date, whereas
       *   `Y` is supposed to be used in conjunction with `w` and `e`
       *   for week-numbering date specific to the locale.
       */


      var parsers = {
        // Era
        G: {
          priority: 140,
          parse: function (string, token, match, options) {
            switch (token) {
              // AD, BC
              case 'G':
              case 'GG':
              case 'GGG':
                return match.era(string, {
                  width: 'abbreviated'
                }) || match.era(string, {
                  width: 'narrow'
                });
              // A, B

              case 'GGGGG':
                return match.era(string, {
                  width: 'narrow'
                });
              // Anno Domini, Before Christ

              case 'GGGG':
              default:
                return match.era(string, {
                  width: 'wide'
                }) || match.era(string, {
                  width: 'abbreviated'
                }) || match.era(string, {
                  width: 'narrow'
                });
            }
          },
          set: function (date, flags, value, options) {
            // Sets year 10 BC if BC, or 10 AC if AC
            date.setUTCFullYear(value === 1 ? 10 : -9, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },
        // Year
        y: {
          // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns
          // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
          // |----------|-------|----|-------|-------|-------|
          // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
          // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
          // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
          // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
          // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
          priority: 130,
          parse: function (string, token, match, options) {
            var valueCallback = function (year) {
              return {
                year: year,
                isTwoDigitYear: token === 'yy'
              };
            };

            switch (token) {
              case 'y':
                return parseNDigits(4, string, valueCallback);

              case 'yo':
                return match.ordinalNumber(string, {
                  unit: 'year',
                  valueCallback: valueCallback
                });

              default:
                return parseNDigits(token.length, string, valueCallback);
            }
          },
          validate: function (date, value, options) {
            return value.isTwoDigitYear || value.year > 0;
          },
          set: function (date, flags, value, options) {
            var currentYear = Object(getUTCWeekYear["a"
            /* default */
            ])(date, options);

            if (value.isTwoDigitYear) {
              var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
              date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            }

            var year = currentYear > 0 ? value.year : 1 - value.year;
            date.setUTCFullYear(year, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },
        // Local week-numbering year
        Y: {
          priority: 130,
          parse: function (string, token, match, options) {
            var valueCallback = function (year) {
              return {
                year: year,
                isTwoDigitYear: token === 'YY'
              };
            };

            switch (token) {
              case 'Y':
                return parseNDigits(4, string, valueCallback);

              case 'Yo':
                return match.ordinalNumber(string, {
                  unit: 'year',
                  valueCallback: valueCallback
                });

              default:
                return parseNDigits(token.length, string, valueCallback);
            }
          },
          validate: function (date, value, options) {
            return value.isTwoDigitYear || value.year > 0;
          },
          set: function (date, flags, value, options) {
            var currentYear = date.getUTCFullYear();

            if (value.isTwoDigitYear) {
              var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
              date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);
              date.setUTCHours(0, 0, 0, 0);
              return Object(startOfUTCWeek["a"
              /* default */
              ])(date, options);
            }

            var year = currentYear > 0 ? value.year : 1 - value.year;
            date.setUTCFullYear(year, 0, options.firstWeekContainsDate);
            date.setUTCHours(0, 0, 0, 0);
            return Object(startOfUTCWeek["a"
            /* default */
            ])(date, options);
          }
        },
        // ISO week-numbering year
        R: {
          priority: 130,
          parse: function (string, token, match, options) {
            if (token === 'R') {
              return parseNDigitsSigned(4, string);
            }

            return parseNDigitsSigned(token.length, string);
          },
          set: function (date, flags, value, options) {
            var firstWeekOfYear = new Date(0);
            firstWeekOfYear.setUTCFullYear(value, 0, 4);
            firstWeekOfYear.setUTCHours(0, 0, 0, 0);
            return Object(startOfUTCISOWeek["a"
            /* default */
            ])(firstWeekOfYear);
          }
        },
        // Extended year
        u: {
          priority: 130,
          parse: function (string, token, match, options) {
            if (token === 'u') {
              return parseNDigitsSigned(4, string);
            }

            return parseNDigitsSigned(token.length, string);
          },
          set: function (date, flags, value, options) {
            date.setUTCFullYear(value, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },
        // Quarter
        Q: {
          priority: 120,
          parse: function (string, token, match, options) {
            switch (token) {
              // 1, 2, 3, 4
              case 'Q':
              case 'QQ':
                // 01, 02, 03, 04
                return parseNDigits(token.length, string);
              // 1st, 2nd, 3rd, 4th

              case 'Qo':
                return match.ordinalNumber(string, {
                  unit: 'quarter'
                });
              // Q1, Q2, Q3, Q4

              case 'QQQ':
                return match.quarter(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.quarter(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // 1, 2, 3, 4 (narrow quarter; could be not numerical)

              case 'QQQQQ':
                return match.quarter(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // 1st quarter, 2nd quarter, ...

              case 'QQQQ':
              default:
                return match.quarter(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.quarter(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.quarter(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          validate: function (date, value, options) {
            return value >= 1 && value <= 4;
          },
          set: function (date, flags, value, options) {
            date.setUTCMonth((value - 1) * 3, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },
        // Stand-alone quarter
        q: {
          priority: 120,
          parse: function (string, token, match, options) {
            switch (token) {
              // 1, 2, 3, 4
              case 'q':
              case 'qq':
                // 01, 02, 03, 04
                return parseNDigits(token.length, string);
              // 1st, 2nd, 3rd, 4th

              case 'qo':
                return match.ordinalNumber(string, {
                  unit: 'quarter'
                });
              // Q1, Q2, Q3, Q4

              case 'qqq':
                return match.quarter(string, {
                  width: 'abbreviated',
                  context: 'standalone'
                }) || match.quarter(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // 1, 2, 3, 4 (narrow quarter; could be not numerical)

              case 'qqqqq':
                return match.quarter(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // 1st quarter, 2nd quarter, ...

              case 'qqqq':
              default:
                return match.quarter(string, {
                  width: 'wide',
                  context: 'standalone'
                }) || match.quarter(string, {
                  width: 'abbreviated',
                  context: 'standalone'
                }) || match.quarter(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
            }
          },
          validate: function (date, value, options) {
            return value >= 1 && value <= 4;
          },
          set: function (date, flags, value, options) {
            date.setUTCMonth((value - 1) * 3, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },
        // Month
        M: {
          priority: 110,
          parse: function (string, token, match, options) {
            var valueCallback = function (value) {
              return value - 1;
            };

            switch (token) {
              // 1, 2, ..., 12
              case 'M':
                return parseNumericPattern(numericPatterns.month, string, valueCallback);
              // 01, 02, ..., 12

              case 'MM':
                return parseNDigits(2, string, valueCallback);
              // 1st, 2nd, ..., 12th

              case 'Mo':
                return match.ordinalNumber(string, {
                  unit: 'month',
                  valueCallback: valueCallback
                });
              // Jan, Feb, ..., Dec

              case 'MMM':
                return match.month(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.month(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // J, F, ..., D

              case 'MMMMM':
                return match.month(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // January, February, ..., December

              case 'MMMM':
              default:
                return match.month(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.month(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.month(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          validate: function (date, value, options) {
            return value >= 0 && value <= 11;
          },
          set: function (date, flags, value, options) {
            date.setUTCMonth(value, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },
        // Stand-alone month
        L: {
          priority: 110,
          parse: function (string, token, match, options) {
            var valueCallback = function (value) {
              return value - 1;
            };

            switch (token) {
              // 1, 2, ..., 12
              case 'L':
                return parseNumericPattern(numericPatterns.month, string, valueCallback);
              // 01, 02, ..., 12

              case 'LL':
                return parseNDigits(2, string, valueCallback);
              // 1st, 2nd, ..., 12th

              case 'Lo':
                return match.ordinalNumber(string, {
                  unit: 'month',
                  valueCallback: valueCallback
                });
              // Jan, Feb, ..., Dec

              case 'LLL':
                return match.month(string, {
                  width: 'abbreviated',
                  context: 'standalone'
                }) || match.month(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // J, F, ..., D

              case 'LLLLL':
                return match.month(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // January, February, ..., December

              case 'LLLL':
              default:
                return match.month(string, {
                  width: 'wide',
                  context: 'standalone'
                }) || match.month(string, {
                  width: 'abbreviated',
                  context: 'standalone'
                }) || match.month(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
            }
          },
          validate: function (date, value, options) {
            return value >= 0 && value <= 11;
          },
          set: function (date, flags, value, options) {
            date.setUTCMonth(value, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },
        // Local week of year
        w: {
          priority: 100,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'w':
                return parseNumericPattern(numericPatterns.week, string);

              case 'wo':
                return match.ordinalNumber(string, {
                  unit: 'week'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function (date, value, options) {
            return value >= 1 && value <= 53;
          },
          set: function (date, flags, value, options) {
            return Object(startOfUTCWeek["a"
            /* default */
            ])(setUTCWeek(date, value, options), options);
          }
        },
        // ISO week of year
        I: {
          priority: 100,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'I':
                return parseNumericPattern(numericPatterns.week, string);

              case 'Io':
                return match.ordinalNumber(string, {
                  unit: 'week'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function (date, value, options) {
            return value >= 1 && value <= 53;
          },
          set: function (date, flags, value, options) {
            return Object(startOfUTCISOWeek["a"
            /* default */
            ])(setUTCISOWeek(date, value, options), options);
          }
        },
        // Day of the month
        d: {
          priority: 90,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'd':
                return parseNumericPattern(numericPatterns.date, string);

              case 'do':
                return match.ordinalNumber(string, {
                  unit: 'date'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function (date, value, options) {
            var year = date.getUTCFullYear();
            var isLeapYear = isLeapYearIndex(year);
            var month = date.getUTCMonth();

            if (isLeapYear) {
              return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
            } else {
              return value >= 1 && value <= DAYS_IN_MONTH[month];
            }
          },
          set: function (date, flags, value, options) {
            date.setUTCDate(value);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },
        // Day of year
        D: {
          priority: 90,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'D':
              case 'DD':
                return parseNumericPattern(numericPatterns.dayOfYear, string);

              case 'Do':
                return match.ordinalNumber(string, {
                  unit: 'date'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function (date, value, options) {
            var year = date.getUTCFullYear();
            var isLeapYear = isLeapYearIndex(year);

            if (isLeapYear) {
              return value >= 1 && value <= 366;
            } else {
              return value >= 1 && value <= 365;
            }
          },
          set: function (date, flags, value, options) {
            date.setUTCMonth(0, value);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },
        // Day of week
        E: {
          priority: 90,
          parse: function (string, token, match, options) {
            switch (token) {
              // Tue
              case 'E':
              case 'EE':
              case 'EEE':
                return match.day(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'short',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // T

              case 'EEEEE':
                return match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // Tu

              case 'EEEEEE':
                return match.day(string, {
                  width: 'short',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // Tuesday

              case 'EEEE':
              default:
                return match.day(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'short',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          validate: function (date, value, options) {
            return value >= 0 && value <= 6;
          },
          set: function (date, flags, value, options) {
            date = setUTCDay(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },
        // Local day of week
        e: {
          priority: 90,
          parse: function (string, token, match, options) {
            var valueCallback = function (value) {
              var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
              return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
            };

            switch (token) {
              // 3
              case 'e':
              case 'ee':
                // 03
                return parseNDigits(token.length, string, valueCallback);
              // 3rd

              case 'eo':
                return match.ordinalNumber(string, {
                  unit: 'day',
                  valueCallback: valueCallback
                });
              // Tue

              case 'eee':
                return match.day(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'short',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // T

              case 'eeeee':
                return match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // Tu

              case 'eeeeee':
                return match.day(string, {
                  width: 'short',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // Tuesday

              case 'eeee':
              default:
                return match.day(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'short',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          validate: function (date, value, options) {
            return value >= 0 && value <= 6;
          },
          set: function (date, flags, value, options) {
            date = setUTCDay(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },
        // Stand-alone local day of week
        c: {
          priority: 90,
          parse: function (string, token, match, options) {
            var valueCallback = function (value) {
              var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
              return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
            };

            switch (token) {
              // 3
              case 'c':
              case 'cc':
                // 03
                return parseNDigits(token.length, string, valueCallback);
              // 3rd

              case 'co':
                return match.ordinalNumber(string, {
                  unit: 'day',
                  valueCallback: valueCallback
                });
              // Tue

              case 'ccc':
                return match.day(string, {
                  width: 'abbreviated',
                  context: 'standalone'
                }) || match.day(string, {
                  width: 'short',
                  context: 'standalone'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // T

              case 'ccccc':
                return match.day(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // Tu

              case 'cccccc':
                return match.day(string, {
                  width: 'short',
                  context: 'standalone'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // Tuesday

              case 'cccc':
              default:
                return match.day(string, {
                  width: 'wide',
                  context: 'standalone'
                }) || match.day(string, {
                  width: 'abbreviated',
                  context: 'standalone'
                }) || match.day(string, {
                  width: 'short',
                  context: 'standalone'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
            }
          },
          validate: function (date, value, options) {
            return value >= 0 && value <= 6;
          },
          set: function (date, flags, value, options) {
            date = setUTCDay(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },
        // ISO day of week
        i: {
          priority: 90,
          parse: function (string, token, match, options) {
            var valueCallback = function (value) {
              if (value === 0) {
                return 7;
              }

              return value;
            };

            switch (token) {
              // 2
              case 'i':
              case 'ii':
                // 02
                return parseNDigits(token.length, string);
              // 2nd

              case 'io':
                return match.ordinalNumber(string, {
                  unit: 'day'
                });
              // Tue

              case 'iii':
                return match.day(string, {
                  width: 'abbreviated',
                  context: 'formatting',
                  valueCallback: valueCallback
                }) || match.day(string, {
                  width: 'short',
                  context: 'formatting',
                  valueCallback: valueCallback
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting',
                  valueCallback: valueCallback
                });
              // T

              case 'iiiii':
                return match.day(string, {
                  width: 'narrow',
                  context: 'formatting',
                  valueCallback: valueCallback
                });
              // Tu

              case 'iiiiii':
                return match.day(string, {
                  width: 'short',
                  context: 'formatting',
                  valueCallback: valueCallback
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting',
                  valueCallback: valueCallback
                });
              // Tuesday

              case 'iiii':
              default:
                return match.day(string, {
                  width: 'wide',
                  context: 'formatting',
                  valueCallback: valueCallback
                }) || match.day(string, {
                  width: 'abbreviated',
                  context: 'formatting',
                  valueCallback: valueCallback
                }) || match.day(string, {
                  width: 'short',
                  context: 'formatting',
                  valueCallback: valueCallback
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting',
                  valueCallback: valueCallback
                });
            }
          },
          validate: function (date, value, options) {
            return value >= 1 && value <= 7;
          },
          set: function (date, flags, value, options) {
            date = setUTCISODay(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },
        // AM or PM
        a: {
          priority: 80,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'a':
              case 'aa':
              case 'aaa':
                return match.dayPeriod(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });

              case 'aaaaa':
                return match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });

              case 'aaaa':
              default:
                return match.dayPeriod(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          set: function (date, flags, value, options) {
            date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
            return date;
          }
        },
        // AM, PM, midnight
        b: {
          priority: 80,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'b':
              case 'bb':
              case 'bbb':
                return match.dayPeriod(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });

              case 'bbbbb':
                return match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });

              case 'bbbb':
              default:
                return match.dayPeriod(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          set: function (date, flags, value, options) {
            date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
            return date;
          }
        },
        // in the morning, in the afternoon, in the evening, at night
        B: {
          priority: 80,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'B':
              case 'BB':
              case 'BBB':
                return match.dayPeriod(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });

              case 'BBBBB':
                return match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });

              case 'BBBB':
              default:
                return match.dayPeriod(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          set: function (date, flags, value, options) {
            date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
            return date;
          }
        },
        // Hour [1-12]
        h: {
          priority: 70,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'h':
                return parseNumericPattern(numericPatterns.hour12h, string);

              case 'ho':
                return match.ordinalNumber(string, {
                  unit: 'hour'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function (date, value, options) {
            return value >= 1 && value <= 12;
          },
          set: function (date, flags, value, options) {
            var isPM = date.getUTCHours() >= 12;

            if (isPM && value < 12) {
              date.setUTCHours(value + 12, 0, 0, 0);
            } else if (!isPM && value === 12) {
              date.setUTCHours(0, 0, 0, 0);
            } else {
              date.setUTCHours(value, 0, 0, 0);
            }

            return date;
          }
        },
        // Hour [0-23]
        H: {
          priority: 70,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'H':
                return parseNumericPattern(numericPatterns.hour23h, string);

              case 'Ho':
                return match.ordinalNumber(string, {
                  unit: 'hour'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function (date, value, options) {
            return value >= 0 && value <= 23;
          },
          set: function (date, flags, value, options) {
            date.setUTCHours(value, 0, 0, 0);
            return date;
          }
        },
        // Hour [0-11]
        K: {
          priority: 70,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'K':
                return parseNumericPattern(numericPatterns.hour11h, string);

              case 'Ko':
                return match.ordinalNumber(string, {
                  unit: 'hour'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function (date, value, options) {
            return value >= 0 && value <= 11;
          },
          set: function (date, flags, value, options) {
            var isPM = date.getUTCHours() >= 12;

            if (isPM && value < 12) {
              date.setUTCHours(value + 12, 0, 0, 0);
            } else {
              date.setUTCHours(value, 0, 0, 0);
            }

            return date;
          }
        },
        // Hour [1-24]
        k: {
          priority: 70,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'k':
                return parseNumericPattern(numericPatterns.hour24h, string);

              case 'ko':
                return match.ordinalNumber(string, {
                  unit: 'hour'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function (date, value, options) {
            return value >= 1 && value <= 24;
          },
          set: function (date, flags, value, options) {
            var hours = value <= 24 ? value % 24 : value;
            date.setUTCHours(hours, 0, 0, 0);
            return date;
          }
        },
        // Minute
        m: {
          priority: 60,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'm':
                return parseNumericPattern(numericPatterns.minute, string);

              case 'mo':
                return match.ordinalNumber(string, {
                  unit: 'minute'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function (date, value, options) {
            return value >= 0 && value <= 59;
          },
          set: function (date, flags, value, options) {
            date.setUTCMinutes(value, 0, 0);
            return date;
          }
        },
        // Second
        s: {
          priority: 50,
          parse: function (string, token, match, options) {
            switch (token) {
              case 's':
                return parseNumericPattern(numericPatterns.second, string);

              case 'so':
                return match.ordinalNumber(string, {
                  unit: 'second'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function (date, value, options) {
            return value >= 0 && value <= 59;
          },
          set: function (date, flags, value, options) {
            date.setUTCSeconds(value, 0);
            return date;
          }
        },
        // Fraction of second
        S: {
          priority: 30,
          parse: function (string, token, match, options) {
            var valueCallback = function (value) {
              return Math.floor(value * Math.pow(10, -token.length + 3));
            };

            return parseNDigits(token.length, string, valueCallback);
          },
          set: function (date, flags, value, options) {
            date.setUTCMilliseconds(value);
            return date;
          }
        },
        // Timezone (ISO-8601. +00:00 is `'Z'`)
        X: {
          priority: 10,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'X':
                return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);

              case 'XX':
                return parseTimezonePattern(timezonePatterns.basic, string);

              case 'XXXX':
                return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);

              case 'XXXXX':
                return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);

              case 'XXX':
              default:
                return parseTimezonePattern(timezonePatterns.extended, string);
            }
          },
          set: function (date, flags, value, options) {
            if (flags.timestampIsSet) {
              return date;
            }

            return new Date(date.getTime() - value);
          }
        },
        // Timezone (ISO-8601)
        x: {
          priority: 10,
          parse: function (string, token, match, options) {
            switch (token) {
              case 'x':
                return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);

              case 'xx':
                return parseTimezonePattern(timezonePatterns.basic, string);

              case 'xxxx':
                return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);

              case 'xxxxx':
                return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);

              case 'xxx':
              default:
                return parseTimezonePattern(timezonePatterns.extended, string);
            }
          },
          set: function (date, flags, value, options) {
            if (flags.timestampIsSet) {
              return date;
            }

            return new Date(date.getTime() - value);
          }
        },
        // Seconds timestamp
        t: {
          priority: 40,
          parse: function (string, token, match, options) {
            return parseAnyDigitsSigned(string);
          },
          set: function (date, flags, value, options) {
            return [new Date(value * 1000), {
              timestampIsSet: true
            }];
          }
        },
        // Milliseconds timestamp
        T: {
          priority: 20,
          parse: function (string, token, match, options) {
            return parseAnyDigitsSigned(string);
          },
          set: function (date, flags, value, options) {
            return [new Date(value), {
              timestampIsSet: true
            }];
          }
        }
        /* harmony default export */

      };
      var _lib_parsers = parsers; // EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/protectedTokens/index.js

      var protectedTokens = __webpack_require__(89); // CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/index.js

      /* harmony export (immutable) */


      __webpack_exports__["default"] = parse;
      var TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:
      // - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
      //   (one of the certain letters followed by `o`)
      // - (\w)\1* matches any sequences of the same letter
      // - '' matches two quote characters in a row
      // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
      //   except a single quote symbol, which ends the sequence.
      //   Two quote characters do not end the sequence.
      //   If there is no matching single quote
      //   then the sequence will continue until the end of the string.
      // - . matches any single character unmatched by previous parts of the RegExps

      var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
      var escapedStringRegExp = /^'(.*?)'?$/;
      var doubleQuoteRegExp = /''/g;
      var notWhitespaceRegExp = /\S/;
      /**
       * @name parse
       * @category Common Helpers
       * @summary Parse the date.
       *
       * @description
       * Return the date parsed from string using the given format string.
       *
       * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
       * > See: https://git.io/fxCyr
       *
       * The characters in the format string wrapped between two single quotes characters (') are escaped.
       * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
       *
       * Format of the format string is based on Unicode Technical Standard #35:
       * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
       * with a few additions (see note 5 below the table).
       *
       * Accepted format string patterns:
       * | Unit                            |Prior| Pattern | Result examples                   | Notes |
       * |---------------------------------|-----|---------|-----------------------------------|-------|
       * | Era                             | 140 | G..GGG  | AD, BC                            |       |
       * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
       * |                                 |     | GGGGG   | A, B                              |       |
       * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
       * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
       * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
       * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
       * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
       * |                                 |     | yyyyy   | ...                               | 2,4   |
       * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
       * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
       * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
       * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
       * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
       * |                                 |     | YYYYY   | ...                               | 2,4   |
       * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
       * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
       * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
       * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
       * |                                 |     | RRRRR   | ...                               | 2,4,5 |
       * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
       * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
       * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
       * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
       * |                                 |     | uuuuu   | ...                               | 2,4   |
       * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
       * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
       * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
       * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
       * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
       * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
       * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
       * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
       * |                                 |     | qq      | 01, 02, 03, 04                    |       |
       * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
       * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
       * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
       * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
       * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
       * |                                 |     | MM      | 01, 02, ..., 12                   |       |
       * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
       * |                                 |     | MMMM    | January, February, ..., December  | 2     |
       * |                                 |     | MMMMM   | J, F, ..., D                      |       |
       * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
       * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
       * |                                 |     | LL      | 01, 02, ..., 12                   |       |
       * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
       * |                                 |     | LLLL    | January, February, ..., December  | 2     |
       * |                                 |     | LLLLL   | J, F, ..., D                      |       |
       * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
       * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
       * |                                 |     | ww      | 01, 02, ..., 53                   |       |
       * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
       * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
       * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
       * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
       * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
       * |                                 |     | dd      | 01, 02, ..., 31                   |       |
       * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 6     |
       * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
       * |                                 |     | DD      | 01, 02, ..., 365, 366             | 6     |
       * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
       * |                                 |     | DDDD    | ...                               | 2     |
       * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
       * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
       * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
       * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
       * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
       * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |
       * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
       * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
       * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |
       * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
       * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
       * |                                 |     | ee      | 02, 03, ..., 01                   |       |
       * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |
       * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
       * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
       * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
       * |                                 |     | cc      | 02, 03, ..., 01                   |       |
       * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |
       * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
       * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
       * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
       * |                                 |     | aaaaa   | a, p                              |       |
       * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
       * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
       * |                                 |     | bbbbb   | a, p, n, mi                       |       |
       * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
       * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
       * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
       * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
       * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
       * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
       * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
       * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
       * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
       * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
       * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
       * |                                 |     | KK      | 1, 2, ..., 11, 0                  |       |
       * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
       * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
       * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
       * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
       * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
       * |                                 |     | mm      | 00, 01, ..., 59                   |       |
       * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
       * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
       * |                                 |     | ss      | 00, 01, ..., 59                   |       |
       * | Seconds timestamp               |  40 | t       | 512969520                         |       |
       * |                                 |     | tt      | ...                               | 2     |
       * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |
       * |                                 |     | SS      | 00, 01, ..., 99                   |       |
       * |                                 |     | SSS     | 000, 0001, ..., 999               |       |
       * |                                 |     | SSSS    | ...                               | 2     |
       * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |
       * |                                 |     | TT      | ...                               | 2     |
       * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |
       * |                                 |     | XX      | -0800, +0530, Z                   |       |
       * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
       * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
       * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
       * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |
       * |                                 |     | xx      | -0800, +0530, +0000               |       |
       * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
       * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
       * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
       * Notes:
       * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
       *    are the same as "stand-alone" units, but are different in some languages.
       *    "Formatting" units are declined according to the rules of the language
       *    in the context of a date. "Stand-alone" units are always nominative singular.
       *    In `format` function, they will produce different result:
       *
       *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
       *
       *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
       *
       *    `parse` will try to match both formatting and stand-alone units interchangably.
       *
       * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
       *    the single quote characters (see below).
       *    If the sequence is longer than listed in table:
       *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number
       *      as wide as the sequence
       *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.
       *      These variations are marked with "2" in the last column of the table.
       *
       * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
       *    These tokens represent the shortest form of the quarter.
       *
       * 4. The main difference between `y` and `u` patterns are B.C. years:
       *
       *    | Year | `y` | `u` |
       *    |------|-----|-----|
       *    | AC 1 |   1 |   1 |
       *    | BC 1 |   1 |   0 |
       *    | BC 2 |   2 |  -1 |
       *
       *    Also `yy` will try to guess the century of two digit year by proximity with `baseDate`:
       *
       *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`
       *
       *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`
       *
       *    while `uu` will just assign the year as is:
       *
       *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`
       *
       *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`
       *
       *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
       *    except local week-numbering years are dependent on `options.weekStartsOn`
       *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
       *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
       *
       * 5. These patterns are not in the Unicode Technical Standard #35:
       *    - `i`: ISO day of week
       *    - `I`: ISO week of year
       *    - `R`: ISO week-numbering year
       *    - `o`: ordinal number modifier
       *
       * 6. These tokens are often confused with others. See: https://git.io/fxCyr
       *
       * Values will be assigned to the date in the descending order of its unit's priority.
       * Units of an equal priority overwrite each other in the order of appearance.
       *
       * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),
       * the values will be taken from 3rd argument `baseDate` which works as a context of parsing.
       *
       * `baseDate` must be passed for correct work of the function.
       * If you're not sure which `baseDate` to supply, create a new instance of Date:
       * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`
       * In this case parsing will be done in the context of the current date.
       * If `baseDate` is `Invalid Date` or a value not convertible to valid `Date`,
       * then `Invalid Date` will be returned.
       *
       * The result may vary by locale.
       *
       * If `formatString` matches with `dateString` but does not provides tokens, `baseDate` will be returned.
       *
       * If parsing failed, `Invalid Date` will be returned.
       * Invalid Date is a Date, whose time value is NaN.
       * Time value of Date: http://es5.github.io/#x15.9.1.1
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - Old `parse` was renamed to `toDate`.
       *   Now `parse` is a new function which parses a string using a provided format.
       *
       *   ```javascript
       *   // Before v2.0.0
       *   parse('2016-01-01')
       *
       *   // v2.0.0 onward
       *   toDate('2016-01-01')
       *   parse('2016-01-01', 'yyyy-MM-dd', new Date())
       *   ```
       *
       * @param {String} dateString - the string to parse
       * @param {String} formatString - the string of tokens
       * @param {Date|Number} baseDate - defines values missing from the parsed dateString
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
       * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:
       *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).
       *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens (`yy`, `yyyy`).
       *   See: https://git.io/fxCyr
       * @returns {Date} the parsed date
       * @throws {TypeError} 3 arguments required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
       * @throws {RangeError} `options.locale` must contain `match` property
       * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see: https://git.io/fxCyr
       *
       * @example
       * // Parse 11 February 2014 from middle-endian format:
       * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())
       * //=> Tue Feb 11 2014 00:00:00
       *
       * @example
       * // Parse 28th of February in Esperanto locale in the context of 2010 year:
       * import eo from 'date-fns/locale/eo'
       * var result = parse('28-a de februaro', "do 'de' MMMM", new Date(2010, 0, 1), {
       *   locale: eo
       * })
       * //=> Sun Feb 28 2010 00:00:00
       */

      function parse(dirtyDateString, dirtyFormatString, dirtyBaseDate, dirtyOptions) {
        if (arguments.length < 3) {
          throw new TypeError('3 arguments required, but only ' + arguments.length + ' present');
        }

        var dateString = String(dirtyDateString);
        var formatString = String(dirtyFormatString);
        var options = dirtyOptions || {};
        var locale = options.locale || en_US["a"
        /* default */
        ];

        if (!locale.match) {
          throw new RangeError('locale must contain match property');
        }

        var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(toInteger["a"
        /* default */
        ])(localeFirstWeekContainsDate);
        var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(toInteger["a"
        /* default */
        ])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

        if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
          throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
        }

        var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(toInteger["a"
        /* default */
        ])(localeWeekStartsOn);
        var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(toInteger["a"
        /* default */
        ])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
        }

        if (formatString === '') {
          if (dateString === '') {
            return Object(toDate["a"
            /* default */
            ])(dirtyBaseDate);
          } else {
            return new Date(NaN);
          }
        }

        var subFnOptions = {
          firstWeekContainsDate: firstWeekContainsDate,
          weekStartsOn: weekStartsOn,
          locale: locale // If timezone isn't specified, it will be set to the system timezone

        };
        var setters = [{
          priority: TIMEZONE_UNIT_PRIORITY,
          set: dateToSystemTimezone,
          index: 0
        }];
        var i;
        var tokens = formatString.match(formattingTokensRegExp);

        for (i = 0; i < tokens.length; i++) {
          var token = tokens[i];

          if (!options.awareOfUnicodeTokens && Object(protectedTokens["a"
          /* isProtectedToken */
          ])(token)) {
            Object(protectedTokens["b"
            /* throwProtectedError */
            ])(token);
          }

          var firstCharacter = token[0];
          var parser = _lib_parsers[firstCharacter];

          if (parser) {
            var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);

            if (!parseResult) {
              return new Date(NaN);
            }

            setters.push({
              priority: parser.priority,
              set: parser.set,
              validate: parser.validate,
              value: parseResult.value,
              index: setters.length
            });
            dateString = parseResult.rest;
          } else {
            // Replace two single quote characters with one single quote character
            if (token === "''") {
              token = "'";
            } else if (firstCharacter === "'") {
              token = cleanEscapedString(token);
            } // Cut token from string, or, if string doesn't match the token, return Invalid Date


            if (dateString.indexOf(token) === 0) {
              dateString = dateString.slice(token.length);
            } else {
              return new Date(NaN);
            }
          }
        } // Check if the remaining input contains something other than whitespace


        if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
          return new Date(NaN);
        }

        var uniquePrioritySetters = setters.map(function (setter) {
          return setter.priority;
        }).sort(function (a, b) {
          return b - a;
        }).filter(function (priority, index, array) {
          return array.indexOf(priority) === index;
        }).map(function (priority) {
          return setters.filter(function (setter) {
            return setter.priority === priority;
          }).reverse();
        }).map(function (setterArray) {
          return setterArray[0];
        });
        var date = Object(toDate["a"
        /* default */
        ])(dirtyBaseDate);

        if (isNaN(date)) {
          return new Date(NaN);
        } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
        // This ensures that when UTC functions will be implemented, locales will be compatible with them.
        // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37


        var utcDate = Object(subMilliseconds["a"
        /* default */
        ])(date, Object(getTimezoneOffsetInMilliseconds["a"
        /* default */
        ])(date));
        var flags = {};

        for (i = 0; i < uniquePrioritySetters.length; i++) {
          var setter = uniquePrioritySetters[i];

          if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {
            return new Date(NaN);
          }

          var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)

          if (result[0]) {
            utcDate = result[0];
            assign_assign(flags, result[1]); // Result is date
          } else {
            utcDate = result;
          }
        }

        return utcDate;
      }

      function dateToSystemTimezone(date, flags) {
        if (flags.timestampIsSet) {
          return date;
        }

        var convertedDate = new Date(0);
        convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
        convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());
        return convertedDate;
      }

      function cleanEscapedString(input) {
        return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
      }
      /***/

    },
    /* 301 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 302 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-portal", {
          attrs: {
            "md-attach-to-parent": _vm.mdAttachToParent
          }
        }, [_c("transition", {
          attrs: {
            name: "md-overlay"
          }
        }, [_vm.mdActive ? _c("div", _vm._g({
          staticClass: "md-overlay",
          class: _vm.overlayClasses
        }, _vm.$listeners)) : _vm._e()])], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-0e05c97a", esExports);
        }
      }
      /***/

    },
    /* 303 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDatepickerDialog_vue__ = __webpack_require__(91);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDatepickerDialog_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDatepickerDialog_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDatepickerDialog_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDatepickerDialog_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4f0a3d52_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDatepickerDialog_vue__ = __webpack_require__(324);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(304);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDatepickerDialog_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4f0a3d52_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDatepickerDialog_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdDatepicker/MdDatepickerDialog.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-4f0a3d52", Component.options);
          } else {
            hotAPI.reload("data-v-4f0a3d52", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 304 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 305 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (immutable) */

      __webpack_exports__["default"] = startOfMonth;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(3);
      /**
       * @name startOfMonth
       * @category Month Helpers
       * @summary Return the start of a month for the given date.
       *
       * @description
       * Return the start of a month for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the start of a month
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The start of a month for 2 September 2014 11:55:00:
       * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Mon Sep 01 2014 00:00:00
       */


      function startOfMonth(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        date.setDate(1);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },
    /* 306 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (immutable) */

      __webpack_exports__["default"] = subMonths;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__addMonths_index_js__ = __webpack_require__(92);
      /**
       * @name subMonths
       * @category Month Helpers
       * @summary Subtract the specified number of months from the given date.
       *
       * @description
       * Subtract the specified number of months from the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of months to be subtracted
       * @returns {Date} the new date with the months subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Subtract 5 months from 1 February 2015:
       * var result = subMonths(new Date(2015, 1, 1), 5)
       * //=> Mon Sep 01 2014 00:00:00
       */


      function subMonths(dirtyDate, dirtyAmount) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var amount = Object(__WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__["a"
        /* default */
        ])(dirtyAmount);
        return Object(__WEBPACK_IMPORTED_MODULE_1__addMonths_index_js__["default"])(dirtyDate, -amount);
      }
      /***/

    },
    /* 307 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (immutable) */

      __webpack_exports__["default"] = getDate;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(3);
      /**
       * @name getDate
       * @category Day Helpers
       * @summary Get the day of the month of the given date.
       *
       * @description
       * Get the day of the month of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the day of month
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which day of the month is 29 February 2012?
       * var result = getDate(new Date(2012, 1, 29))
       * //=> 29
       */


      function getDate(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        var dayOfMonth = date.getDate();
        return dayOfMonth;
      }
      /***/

    },
    /* 308 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (immutable) */

      __webpack_exports__["default"] = getDay;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(3);
      /**
       * @name getDay
       * @category Weekday Helpers
       * @summary Get the day of the week of the given date.
       *
       * @description
       * Get the day of the week of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the day of week
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which day of the week is 29 February 2012?
       * var result = getDay(new Date(2012, 1, 29))
       * //=> 3
       */


      function getDay(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        var day = date.getDay();
        return day;
      }
      /***/

    },
    /* 309 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (immutable) */

      __webpack_exports__["default"] = getMonth;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(3);
      /**
       * @name getMonth
       * @category Month Helpers
       * @summary Get the month of the given date.
       *
       * @description
       * Get the month of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the month
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which month is 29 February 2012?
       * var result = getMonth(new Date(2012, 1, 29))
       * //=> 1
       */


      function getMonth(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        var month = date.getMonth();
        return month;
      }
      /***/

    },
    /* 310 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (immutable) */

      __webpack_exports__["default"] = getYear;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(3);
      /**
       * @name getYear
       * @category Year Helpers
       * @summary Get the year of the given date.
       *
       * @description
       * Get the year of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which year is 2 July 2014?
       * var result = getYear(new Date(2014, 6, 2))
       * //=> 2014
       */


      function getYear(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        var year = date.getFullYear();
        return year;
      }
      /***/

    },
    /* 311 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (immutable) */

      __webpack_exports__["default"] = isEqual;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(3);
      /**
       * @name isEqual
       * @category Common Helpers
       * @summary Are the given dates equal?
       *
       * @description
       * Are the given dates equal?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to compare
       * @param {Date|Number} dateRight - the second date to compare
       * @returns {Boolean} the dates are equal
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
       * var result = isEqual(
       *   new Date(2014, 6, 2, 6, 30, 45, 0),
       *   new Date(2014, 6, 2, 6, 30, 45, 500)
       * )
       * //=> false
       */


      function isEqual(dirtyLeftDate, dirtyRightDate) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var dateLeft = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a"
        /* default */
        ])(dirtyLeftDate);
        var dateRight = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a"
        /* default */
        ])(dirtyRightDate);
        return dateLeft.getTime() === dateRight.getTime();
      }
      /***/

    },
    /* 312 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      }); // EXTERNAL MODULE: ./node_modules/date-fns/esm/toDate/index.js

      var toDate = __webpack_require__(3); // CONCATENATED MODULE: ./node_modules/date-fns/esm/startOfDay/index.js

      /**
       * @name startOfDay
       * @category Day Helpers
       * @summary Return the start of a day for the given date.
       *
       * @description
       * Return the start of a day for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the start of a day
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The start of a day for 2 September 2014 11:55:00:
       * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Tue Sep 02 2014 00:00:00
       */


      function startOfDay(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
        }

        var date = Object(toDate["a"
        /* default */
        ])(dirtyDate);
        date.setHours(0, 0, 0, 0);
        return date;
      } // CONCATENATED MODULE: ./node_modules/date-fns/esm/isSameDay/index.js

      /* harmony export (immutable) */


      __webpack_exports__["default"] = isSameDay;
      /**
       * @name isSameDay
       * @category Day Helpers
       * @summary Are the given dates in the same day?
       *
       * @description
       * Are the given dates in the same day?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to check
       * @param {Date|Number} dateRight - the second date to check
       * @returns {Boolean} the dates are in the same day
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?
       * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))
       * //=> true
       */

      function isSameDay(dirtyDateLeft, dirtyDateRight) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var dateLeftStartOfDay = startOfDay(dirtyDateLeft);
        var dateRightStartOfDay = startOfDay(dirtyDateRight);
        return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
      }
      /***/

    },
    /* 313 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (immutable) */

      __webpack_exports__["default"] = setDate;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ = __webpack_require__(3);
      /**
       * @name setDate
       * @category Day Helpers
       * @summary Set the day of the month to the given date.
       *
       * @description
       * Set the day of the month to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} dayOfMonth - the day of the month of the new date
       * @returns {Date} the new date with the day of the month set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set the 30th day of the month to 1 September 2014:
       * var result = setDate(new Date(2014, 8, 1), 30)
       * //=> Tue Sep 30 2014 00:00:00
       */


      function setDate(dirtyDate, dirtyDayOfMonth) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        var dayOfMonth = Object(__WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__["a"
        /* default */
        ])(dirtyDayOfMonth);
        date.setDate(dayOfMonth);
        return date;
      }
      /***/

    },
    /* 314 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (immutable) */

      __webpack_exports__["default"] = setMonth;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__getDaysInMonth_index_js__ = __webpack_require__(27);
      /**
       * @name setMonth
       * @category Month Helpers
       * @summary Set the month to the given date.
       *
       * @description
       * Set the month to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} month - the month of the new date
       * @returns {Date} the new date with the month set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set February to 1 September 2014:
       * var result = setMonth(new Date(2014, 8, 1), 1)
       * //=> Sat Feb 01 2014 00:00:00
       */


      function setMonth(dirtyDate, dirtyMonth) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        var month = Object(__WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__["a"
        /* default */
        ])(dirtyMonth);
        var year = date.getFullYear();
        var day = date.getDate();
        var dateWithDesiredMonth = new Date(0);
        dateWithDesiredMonth.setFullYear(year, month, 15);
        dateWithDesiredMonth.setHours(0, 0, 0, 0);
        var daysInMonth = Object(__WEBPACK_IMPORTED_MODULE_2__getDaysInMonth_index_js__["default"])(dateWithDesiredMonth); // Set the last day of the new month
        // if the original date was the last day of the longer month

        date.setMonth(month, Math.min(day, daysInMonth));
        return date;
      }
      /***/

    },
    /* 315 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (immutable) */

      __webpack_exports__["default"] = setYear;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ = __webpack_require__(3);
      /**
       * @name setYear
       * @category Year Helpers
       * @summary Set the year to the given date.
       *
       * @description
       * Set the year to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} year - the year of the new date
       * @returns {Date} the new date with the year set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set year 2013 to 1 September 2014:
       * var result = setYear(new Date(2014, 8, 1), 2013)
       * //=> Sun Sep 01 2013 00:00:00
       */


      function setYear(dirtyDate, dirtyYear) {
        if (arguments.length < 2) {
          throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
        }

        var date = Object(__WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a"
        /* default */
        ])(dirtyDate);
        var year = Object(__WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__["a"
        /* default */
        ])(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date

        if (isNaN(date)) {
          return new Date(NaN);
        }

        date.setFullYear(year);
        return date;
      }
      /***/

    },
    /* 316 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 317 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* WEBPACK VAR INJECTION */

      (function (global) {
        /**!
        * @fileOverview Kickass library to create and place poppers near their reference elements.
        * @version 1.15.0
        * @license
        * Copyright (c) 2016 Federico Zivolo and contributors
        *
        * Permission is hereby granted, free of charge, to any person obtaining a copy
        * of this software and associated documentation files (the "Software"), to deal
        * in the Software without restriction, including without limitation the rights
        * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        * copies of the Software, and to permit persons to whom the Software is
        * furnished to do so, subject to the following conditions:
        *
        * The above copyright notice and this permission notice shall be included in all
        * copies or substantial portions of the Software.
        *
        * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        * SOFTWARE.
        */
        var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';
        var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
        var timeoutDuration = 0;

        for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
          if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
            timeoutDuration = 1;
            break;
          }
        }

        function microtaskDebounce(fn) {
          var called = false;
          return function () {
            if (called) {
              return;
            }

            called = true;
            window.Promise.resolve().then(function () {
              called = false;
              fn();
            });
          };
        }

        function taskDebounce(fn) {
          var scheduled = false;
          return function () {
            if (!scheduled) {
              scheduled = true;
              setTimeout(function () {
                scheduled = false;
                fn();
              }, timeoutDuration);
            }
          };
        }

        var supportsMicroTasks = isBrowser && window.Promise;
        /**
        * Create a debounced version of a method, that's asynchronously deferred
        * but called in the minimum time possible.
        *
        * @method
        * @memberof Popper.Utils
        * @argument {Function} fn
        * @returns {Function}
        */

        var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;
        /**
         * Check if the given variable is a function
         * @method
         * @memberof Popper.Utils
         * @argument {Any} functionToCheck - variable to check
         * @returns {Boolean} answer to: is a function?
         */

        function isFunction(functionToCheck) {
          var getType = {};
          return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
        }
        /**
         * Get CSS computed property of the given element
         * @method
         * @memberof Popper.Utils
         * @argument {Eement} element
         * @argument {String} property
         */


        function getStyleComputedProperty(element, property) {
          if (element.nodeType !== 1) {
            return [];
          } // NOTE: 1 DOM access here


          var window = element.ownerDocument.defaultView;
          var css = window.getComputedStyle(element, null);
          return property ? css[property] : css;
        }
        /**
         * Returns the parentNode or the host of the element
         * @method
         * @memberof Popper.Utils
         * @argument {Element} element
         * @returns {Element} parent
         */


        function getParentNode(element) {
          if (element.nodeName === 'HTML') {
            return element;
          }

          return element.parentNode || element.host;
        }
        /**
         * Returns the scrolling parent of the given element
         * @method
         * @memberof Popper.Utils
         * @argument {Element} element
         * @returns {Element} scroll parent
         */


        function getScrollParent(element) {
          // Return body, `getScroll` will take care to get the correct `scrollTop` from it
          if (!element) {
            return document.body;
          }

          switch (element.nodeName) {
            case 'HTML':
            case 'BODY':
              return element.ownerDocument.body;

            case '#document':
              return element.body;
          } // Firefox want us to check `-x` and `-y` variations as well


          var _getStyleComputedProp = getStyleComputedProperty(element),
              overflow = _getStyleComputedProp.overflow,
              overflowX = _getStyleComputedProp.overflowX,
              overflowY = _getStyleComputedProp.overflowY;

          if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
            return element;
          }

          return getScrollParent(getParentNode(element));
        }

        var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
        var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);
        /**
         * Determines if the browser is Internet Explorer
         * @method
         * @memberof Popper.Utils
         * @param {Number} version to check
         * @returns {Boolean} isIE
         */

        function isIE(version) {
          if (version === 11) {
            return isIE11;
          }

          if (version === 10) {
            return isIE10;
          }

          return isIE11 || isIE10;
        }
        /**
         * Returns the offset parent of the given element
         * @method
         * @memberof Popper.Utils
         * @argument {Element} element
         * @returns {Element} offset parent
         */


        function getOffsetParent(element) {
          if (!element) {
            return document.documentElement;
          }

          var noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here

          var offsetParent = element.offsetParent || null; // Skip hidden elements which don't have an offsetParent

          while (offsetParent === noOffsetParent && element.nextElementSibling) {
            offsetParent = (element = element.nextElementSibling).offsetParent;
          }

          var nodeName = offsetParent && offsetParent.nodeName;

          if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
            return element ? element.ownerDocument.documentElement : document.documentElement;
          } // .offsetParent will return the closest TH, TD or TABLE in case
          // no offsetParent is present, I hate this job...


          if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
            return getOffsetParent(offsetParent);
          }

          return offsetParent;
        }

        function isOffsetContainer(element) {
          var nodeName = element.nodeName;

          if (nodeName === 'BODY') {
            return false;
          }

          return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
        }
        /**
         * Finds the root node (document, shadowDOM root) of the given element
         * @method
         * @memberof Popper.Utils
         * @argument {Element} node
         * @returns {Element} root node
         */


        function getRoot(node) {
          if (node.parentNode !== null) {
            return getRoot(node.parentNode);
          }

          return node;
        }
        /**
         * Finds the offset parent common to the two provided nodes
         * @method
         * @memberof Popper.Utils
         * @argument {Element} element1
         * @argument {Element} element2
         * @returns {Element} common offset parent
         */


        function findCommonOffsetParent(element1, element2) {
          // This check is needed to avoid errors in case one of the elements isn't defined for any reason
          if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
            return document.documentElement;
          } // Here we make sure to give as "start" the element that comes first in the DOM


          var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
          var start = order ? element1 : element2;
          var end = order ? element2 : element1; // Get common ancestor container

          var range = document.createRange();
          range.setStart(start, 0);
          range.setEnd(end, 0);
          var commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document

          if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
            if (isOffsetContainer(commonAncestorContainer)) {
              return commonAncestorContainer;
            }

            return getOffsetParent(commonAncestorContainer);
          } // one of the nodes is inside shadowDOM, find which one


          var element1root = getRoot(element1);

          if (element1root.host) {
            return findCommonOffsetParent(element1root.host, element2);
          } else {
            return findCommonOffsetParent(element1, getRoot(element2).host);
          }
        }
        /**
         * Gets the scroll value of the given element in the given side (top and left)
         * @method
         * @memberof Popper.Utils
         * @argument {Element} element
         * @argument {String} side `top` or `left`
         * @returns {number} amount of scrolled pixels
         */


        function getScroll(element) {
          var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';
          var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
          var nodeName = element.nodeName;

          if (nodeName === 'BODY' || nodeName === 'HTML') {
            var html = element.ownerDocument.documentElement;
            var scrollingElement = element.ownerDocument.scrollingElement || html;
            return scrollingElement[upperSide];
          }

          return element[upperSide];
        }
        /*
         * Sum or subtract the element scroll values (left and top) from a given rect object
         * @method
         * @memberof Popper.Utils
         * @param {Object} rect - Rect object you want to change
         * @param {HTMLElement} element - The element from the function reads the scroll values
         * @param {Boolean} subtract - set to true if you want to subtract the scroll values
         * @return {Object} rect - The modifier rect object
         */


        function includeScroll(rect, element) {
          var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
          var scrollTop = getScroll(element, 'top');
          var scrollLeft = getScroll(element, 'left');
          var modifier = subtract ? -1 : 1;
          rect.top += scrollTop * modifier;
          rect.bottom += scrollTop * modifier;
          rect.left += scrollLeft * modifier;
          rect.right += scrollLeft * modifier;
          return rect;
        }
        /*
         * Helper to detect borders of a given element
         * @method
         * @memberof Popper.Utils
         * @param {CSSStyleDeclaration} styles
         * Result of `getStyleComputedProperty` on the given element
         * @param {String} axis - `x` or `y`
         * @return {number} borders - The borders size of the given axis
         */


        function getBordersSize(styles, axis) {
          var sideA = axis === 'x' ? 'Left' : 'Top';
          var sideB = sideA === 'Left' ? 'Right' : 'Bottom';
          return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);
        }

        function getSize(axis, body, html, computedStyle) {
          return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
        }

        function getWindowSizes(document) {
          var body = document.body;
          var html = document.documentElement;
          var computedStyle = isIE(10) && getComputedStyle(html);
          return {
            height: getSize('Height', body, html, computedStyle),
            width: getSize('Width', body, html, computedStyle)
          };
        }

        var classCallCheck = function (instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        };

        var createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        var defineProperty = function (obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
            });
          } else {
            obj[key] = value;
          }

          return obj;
        };

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };
        /**
         * Given element offsets, generate an output similar to getBoundingClientRect
         * @method
         * @memberof Popper.Utils
         * @argument {Object} offsets
         * @returns {Object} ClientRect like output
         */


        function getClientRect(offsets) {
          return _extends({}, offsets, {
            right: offsets.left + offsets.width,
            bottom: offsets.top + offsets.height
          });
        }
        /**
         * Get bounding client rect of given element
         * @method
         * @memberof Popper.Utils
         * @param {HTMLElement} element
         * @return {Object} client rect
         */


        function getBoundingClientRect(element) {
          var rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't
          // considered in DOM in some circumstances...
          // This isn't reproducible in IE10 compatibility mode of IE11

          try {
            if (isIE(10)) {
              rect = element.getBoundingClientRect();
              var scrollTop = getScroll(element, 'top');
              var scrollLeft = getScroll(element, 'left');
              rect.top += scrollTop;
              rect.left += scrollLeft;
              rect.bottom += scrollTop;
              rect.right += scrollLeft;
            } else {
              rect = element.getBoundingClientRect();
            }
          } catch (e) {}

          var result = {
            left: rect.left,
            top: rect.top,
            width: rect.right - rect.left,
            height: rect.bottom - rect.top
          }; // subtract scrollbar size from sizes

          var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
          var width = sizes.width || element.clientWidth || result.right - result.left;
          var height = sizes.height || element.clientHeight || result.bottom - result.top;
          var horizScrollbar = element.offsetWidth - width;
          var vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
          // we make this check conditional for performance reasons

          if (horizScrollbar || vertScrollbar) {
            var styles = getStyleComputedProperty(element);
            horizScrollbar -= getBordersSize(styles, 'x');
            vertScrollbar -= getBordersSize(styles, 'y');
            result.width -= horizScrollbar;
            result.height -= vertScrollbar;
          }

          return getClientRect(result);
        }

        function getOffsetRectRelativeToArbitraryNode(children, parent) {
          var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
          var isIE10 = isIE(10);
          var isHTML = parent.nodeName === 'HTML';
          var childrenRect = getBoundingClientRect(children);
          var parentRect = getBoundingClientRect(parent);
          var scrollParent = getScrollParent(children);
          var styles = getStyleComputedProperty(parent);
          var borderTopWidth = parseFloat(styles.borderTopWidth, 10);
          var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10); // In cases where the parent is fixed, we must ignore negative scroll in offset calc

          if (fixedPosition && isHTML) {
            parentRect.top = Math.max(parentRect.top, 0);
            parentRect.left = Math.max(parentRect.left, 0);
          }

          var offsets = getClientRect({
            top: childrenRect.top - parentRect.top - borderTopWidth,
            left: childrenRect.left - parentRect.left - borderLeftWidth,
            width: childrenRect.width,
            height: childrenRect.height
          });
          offsets.marginTop = 0;
          offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent
          // we do this only on HTML because it's the only element that behaves
          // differently when margins are applied to it. The margins are included in
          // the box of the documentElement, in the other cases not.

          if (!isIE10 && isHTML) {
            var marginTop = parseFloat(styles.marginTop, 10);
            var marginLeft = parseFloat(styles.marginLeft, 10);
            offsets.top -= borderTopWidth - marginTop;
            offsets.bottom -= borderTopWidth - marginTop;
            offsets.left -= borderLeftWidth - marginLeft;
            offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them

            offsets.marginTop = marginTop;
            offsets.marginLeft = marginLeft;
          }

          if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
            offsets = includeScroll(offsets, parent);
          }

          return offsets;
        }

        function getViewportOffsetRectRelativeToArtbitraryNode(element) {
          var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var html = element.ownerDocument.documentElement;
          var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
          var width = Math.max(html.clientWidth, window.innerWidth || 0);
          var height = Math.max(html.clientHeight, window.innerHeight || 0);
          var scrollTop = !excludeScroll ? getScroll(html) : 0;
          var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;
          var offset = {
            top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
            left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
            width: width,
            height: height
          };
          return getClientRect(offset);
        }
        /**
         * Check if the given element is fixed or is inside a fixed parent
         * @method
         * @memberof Popper.Utils
         * @argument {Element} element
         * @argument {Element} customContainer
         * @returns {Boolean} answer to "isFixed?"
         */


        function isFixed(element) {
          var nodeName = element.nodeName;

          if (nodeName === 'BODY' || nodeName === 'HTML') {
            return false;
          }

          if (getStyleComputedProperty(element, 'position') === 'fixed') {
            return true;
          }

          var parentNode = getParentNode(element);

          if (!parentNode) {
            return false;
          }

          return isFixed(parentNode);
        }
        /**
         * Finds the first parent of an element that has a transformed property defined
         * @method
         * @memberof Popper.Utils
         * @argument {Element} element
         * @returns {Element} first transformed parent or documentElement
         */


        function getFixedPositionOffsetParent(element) {
          // This check is needed to avoid errors in case one of the elements isn't defined for any reason
          if (!element || !element.parentElement || isIE()) {
            return document.documentElement;
          }

          var el = element.parentElement;

          while (el && getStyleComputedProperty(el, 'transform') === 'none') {
            el = el.parentElement;
          }

          return el || document.documentElement;
        }
        /**
         * Computed the boundaries limits and return them
         * @method
         * @memberof Popper.Utils
         * @param {HTMLElement} popper
         * @param {HTMLElement} reference
         * @param {number} padding
         * @param {HTMLElement} boundariesElement - Element used to define the boundaries
         * @param {Boolean} fixedPosition - Is in fixed position mode
         * @returns {Object} Coordinates of the boundaries
         */


        function getBoundaries(popper, reference, padding, boundariesElement) {
          var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; // NOTE: 1 DOM access here

          var boundaries = {
            top: 0,
            left: 0
          };
          var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference); // Handle viewport case

          if (boundariesElement === 'viewport') {
            boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
          } else {
            // Handle other cases based on DOM element used as boundaries
            var boundariesNode = void 0;

            if (boundariesElement === 'scrollParent') {
              boundariesNode = getScrollParent(getParentNode(reference));

              if (boundariesNode.nodeName === 'BODY') {
                boundariesNode = popper.ownerDocument.documentElement;
              }
            } else if (boundariesElement === 'window') {
              boundariesNode = popper.ownerDocument.documentElement;
            } else {
              boundariesNode = boundariesElement;
            }

            var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation

            if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
              var _getWindowSizes = getWindowSizes(popper.ownerDocument),
                  height = _getWindowSizes.height,
                  width = _getWindowSizes.width;

              boundaries.top += offsets.top - offsets.marginTop;
              boundaries.bottom = height + offsets.top;
              boundaries.left += offsets.left - offsets.marginLeft;
              boundaries.right = width + offsets.left;
            } else {
              // for all the other DOM elements, this one is good
              boundaries = offsets;
            }
          } // Add paddings


          padding = padding || 0;
          var isPaddingNumber = typeof padding === 'number';
          boundaries.left += isPaddingNumber ? padding : padding.left || 0;
          boundaries.top += isPaddingNumber ? padding : padding.top || 0;
          boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
          boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;
          return boundaries;
        }

        function getArea(_ref) {
          var width = _ref.width,
              height = _ref.height;
          return width * height;
        }
        /**
         * Utility used to transform the `auto` placement to the placement with more
         * available space.
         * @method
         * @memberof Popper.Utils
         * @argument {Object} data - The data object generated by update method
         * @argument {Object} options - Modifiers configuration and options
         * @returns {Object} The data object, properly modified
         */


        function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
          var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

          if (placement.indexOf('auto') === -1) {
            return placement;
          }

          var boundaries = getBoundaries(popper, reference, padding, boundariesElement);
          var rects = {
            top: {
              width: boundaries.width,
              height: refRect.top - boundaries.top
            },
            right: {
              width: boundaries.right - refRect.right,
              height: boundaries.height
            },
            bottom: {
              width: boundaries.width,
              height: boundaries.bottom - refRect.bottom
            },
            left: {
              width: refRect.left - boundaries.left,
              height: boundaries.height
            }
          };
          var sortedAreas = Object.keys(rects).map(function (key) {
            return _extends({
              key: key
            }, rects[key], {
              area: getArea(rects[key])
            });
          }).sort(function (a, b) {
            return b.area - a.area;
          });
          var filteredAreas = sortedAreas.filter(function (_ref2) {
            var width = _ref2.width,
                height = _ref2.height;
            return width >= popper.clientWidth && height >= popper.clientHeight;
          });
          var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
          var variation = placement.split('-')[1];
          return computedPlacement + (variation ? '-' + variation : '');
        }
        /**
         * Get offsets to the reference element
         * @method
         * @memberof Popper.Utils
         * @param {Object} state
         * @param {Element} popper - the popper element
         * @param {Element} reference - the reference element (the popper will be relative to this)
         * @param {Element} fixedPosition - is in fixed position mode
         * @returns {Object} An object containing the offsets which will be applied to the popper
         */


        function getReferenceOffsets(state, popper, reference) {
          var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
          var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);
          return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
        }
        /**
         * Get the outer sizes of the given element (offset size + margins)
         * @method
         * @memberof Popper.Utils
         * @argument {Element} element
         * @returns {Object} object containing width and height properties
         */


        function getOuterSizes(element) {
          var window = element.ownerDocument.defaultView;
          var styles = window.getComputedStyle(element);
          var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
          var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
          var result = {
            width: element.offsetWidth + y,
            height: element.offsetHeight + x
          };
          return result;
        }
        /**
         * Get the opposite placement of the given one
         * @method
         * @memberof Popper.Utils
         * @argument {String} placement
         * @returns {String} flipped placement
         */


        function getOppositePlacement(placement) {
          var hash = {
            left: 'right',
            right: 'left',
            bottom: 'top',
            top: 'bottom'
          };
          return placement.replace(/left|right|bottom|top/g, function (matched) {
            return hash[matched];
          });
        }
        /**
         * Get offsets to the popper
         * @method
         * @memberof Popper.Utils
         * @param {Object} position - CSS position the Popper will get applied
         * @param {HTMLElement} popper - the popper element
         * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
         * @param {String} placement - one of the valid placement options
         * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
         */


        function getPopperOffsets(popper, referenceOffsets, placement) {
          placement = placement.split('-')[0]; // Get popper node sizes

          var popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object

          var popperOffsets = {
            width: popperRect.width,
            height: popperRect.height
          }; // depending by the popper placement we have to compute its offsets slightly differently

          var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
          var mainSide = isHoriz ? 'top' : 'left';
          var secondarySide = isHoriz ? 'left' : 'top';
          var measurement = isHoriz ? 'height' : 'width';
          var secondaryMeasurement = !isHoriz ? 'height' : 'width';
          popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;

          if (placement === secondarySide) {
            popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
          } else {
            popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
          }

          return popperOffsets;
        }
        /**
         * Mimics the `find` method of Array
         * @method
         * @memberof Popper.Utils
         * @argument {Array} arr
         * @argument prop
         * @argument value
         * @returns index or -1
         */


        function find(arr, check) {
          // use native find if supported
          if (Array.prototype.find) {
            return arr.find(check);
          } // use `filter` to obtain the same behavior of `find`


          return arr.filter(check)[0];
        }
        /**
         * Return the index of the matching object
         * @method
         * @memberof Popper.Utils
         * @argument {Array} arr
         * @argument prop
         * @argument value
         * @returns index or -1
         */


        function findIndex(arr, prop, value) {
          // use native findIndex if supported
          if (Array.prototype.findIndex) {
            return arr.findIndex(function (cur) {
              return cur[prop] === value;
            });
          } // use `find` + `indexOf` if `findIndex` isn't supported


          var match = find(arr, function (obj) {
            return obj[prop] === value;
          });
          return arr.indexOf(match);
        }
        /**
         * Loop trough the list of modifiers and run them in order,
         * each of them will then edit the data object.
         * @method
         * @memberof Popper.Utils
         * @param {dataObject} data
         * @param {Array} modifiers
         * @param {String} ends - Optional modifier name used as stopper
         * @returns {dataObject}
         */


        function runModifiers(modifiers, data, ends) {
          var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));
          modifiersToRun.forEach(function (modifier) {
            if (modifier['function']) {
              // eslint-disable-line dot-notation
              console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
            }

            var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation

            if (modifier.enabled && isFunction(fn)) {
              // Add properties to offsets to make them a complete clientRect object
              // we do this before each modifier to make sure the previous one doesn't
              // mess with these values
              data.offsets.popper = getClientRect(data.offsets.popper);
              data.offsets.reference = getClientRect(data.offsets.reference);
              data = fn(data, modifier);
            }
          });
          return data;
        }
        /**
         * Updates the position of the popper, computing the new offsets and applying
         * the new style.<br />
         * Prefer `scheduleUpdate` over `update` because of performance reasons.
         * @method
         * @memberof Popper
         */


        function update() {
          // if popper is destroyed, don't perform any further update
          if (this.state.isDestroyed) {
            return;
          }

          var data = {
            instance: this,
            styles: {},
            arrowStyles: {},
            attributes: {},
            flipped: false,
            offsets: {}
          }; // compute reference element offsets

          data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); // compute auto placement, store placement inside the data object,
          // modifiers will be able to edit `placement` if needed
          // and refer to originalPlacement to know the original value

          data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); // store the computed placement inside `originalPlacement`

          data.originalPlacement = data.placement;
          data.positionFixed = this.options.positionFixed; // compute the popper offsets

          data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
          data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; // run the modifiers

          data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback
          // the other ones will call `onUpdate` callback

          if (!this.state.isCreated) {
            this.state.isCreated = true;
            this.options.onCreate(data);
          } else {
            this.options.onUpdate(data);
          }
        }
        /**
         * Helper used to know if the given modifier is enabled.
         * @method
         * @memberof Popper.Utils
         * @returns {Boolean}
         */


        function isModifierEnabled(modifiers, modifierName) {
          return modifiers.some(function (_ref) {
            var name = _ref.name,
                enabled = _ref.enabled;
            return enabled && name === modifierName;
          });
        }
        /**
         * Get the prefixed supported property name
         * @method
         * @memberof Popper.Utils
         * @argument {String} property (camelCase)
         * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
         */


        function getSupportedPropertyName(property) {
          var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
          var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

          for (var i = 0; i < prefixes.length; i++) {
            var prefix = prefixes[i];
            var toCheck = prefix ? '' + prefix + upperProp : property;

            if (typeof document.body.style[toCheck] !== 'undefined') {
              return toCheck;
            }
          }

          return null;
        }
        /**
         * Destroys the popper.
         * @method
         * @memberof Popper
         */


        function destroy() {
          this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled

          if (isModifierEnabled(this.modifiers, 'applyStyle')) {
            this.popper.removeAttribute('x-placement');
            this.popper.style.position = '';
            this.popper.style.top = '';
            this.popper.style.left = '';
            this.popper.style.right = '';
            this.popper.style.bottom = '';
            this.popper.style.willChange = '';
            this.popper.style[getSupportedPropertyName('transform')] = '';
          }

          this.disableEventListeners(); // remove the popper if user explicity asked for the deletion on destroy
          // do not use `remove` because IE11 doesn't support it

          if (this.options.removeOnDestroy) {
            this.popper.parentNode.removeChild(this.popper);
          }

          return this;
        }
        /**
         * Get the window associated with the element
         * @argument {Element} element
         * @returns {Window}
         */


        function getWindow(element) {
          var ownerDocument = element.ownerDocument;
          return ownerDocument ? ownerDocument.defaultView : window;
        }

        function attachToScrollParents(scrollParent, event, callback, scrollParents) {
          var isBody = scrollParent.nodeName === 'BODY';
          var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
          target.addEventListener(event, callback, {
            passive: true
          });

          if (!isBody) {
            attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
          }

          scrollParents.push(target);
        }
        /**
         * Setup needed event listeners used to update the popper position
         * @method
         * @memberof Popper.Utils
         * @private
         */


        function setupEventListeners(reference, options, state, updateBound) {
          // Resize event listener on window
          state.updateBound = updateBound;
          getWindow(reference).addEventListener('resize', state.updateBound, {
            passive: true
          }); // Scroll event listener on scroll parents

          var scrollElement = getScrollParent(reference);
          attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
          state.scrollElement = scrollElement;
          state.eventsEnabled = true;
          return state;
        }
        /**
         * It will add resize/scroll events and start recalculating
         * position of the popper element when they are triggered.
         * @method
         * @memberof Popper
         */


        function enableEventListeners() {
          if (!this.state.eventsEnabled) {
            this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
          }
        }
        /**
         * Remove event listeners used to update the popper position
         * @method
         * @memberof Popper.Utils
         * @private
         */


        function removeEventListeners(reference, state) {
          // Remove resize event listener on window
          getWindow(reference).removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents

          state.scrollParents.forEach(function (target) {
            target.removeEventListener('scroll', state.updateBound);
          }); // Reset state

          state.updateBound = null;
          state.scrollParents = [];
          state.scrollElement = null;
          state.eventsEnabled = false;
          return state;
        }
        /**
         * It will remove resize/scroll events and won't recalculate popper position
         * when they are triggered. It also won't trigger `onUpdate` callback anymore,
         * unless you call `update` method manually.
         * @method
         * @memberof Popper
         */


        function disableEventListeners() {
          if (this.state.eventsEnabled) {
            cancelAnimationFrame(this.scheduleUpdate);
            this.state = removeEventListeners(this.reference, this.state);
          }
        }
        /**
         * Tells if a given input is a number
         * @method
         * @memberof Popper.Utils
         * @param {*} input to check
         * @return {Boolean}
         */


        function isNumeric(n) {
          return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
        }
        /**
         * Set the style to the given popper
         * @method
         * @memberof Popper.Utils
         * @argument {Element} element - Element to apply the style to
         * @argument {Object} styles
         * Object with a list of properties and values which will be applied to the element
         */


        function setStyles(element, styles) {
          Object.keys(styles).forEach(function (prop) {
            var unit = ''; // add unit if the value is numeric and is one of the following

            if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
              unit = 'px';
            }

            element.style[prop] = styles[prop] + unit;
          });
        }
        /**
         * Set the attributes to the given popper
         * @method
         * @memberof Popper.Utils
         * @argument {Element} element - Element to apply the attributes to
         * @argument {Object} styles
         * Object with a list of properties and values which will be applied to the element
         */


        function setAttributes(element, attributes) {
          Object.keys(attributes).forEach(function (prop) {
            var value = attributes[prop];

            if (value !== false) {
              element.setAttribute(prop, attributes[prop]);
            } else {
              element.removeAttribute(prop);
            }
          });
        }
        /**
         * @function
         * @memberof Modifiers
         * @argument {Object} data - The data object generated by `update` method
         * @argument {Object} data.styles - List of style properties - values to apply to popper element
         * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
         * @argument {Object} options - Modifiers configuration and options
         * @returns {Object} The same data object
         */


        function applyStyle(data) {
          // any property present in `data.styles` will be applied to the popper,
          // in this way we can make the 3rd party modifiers add custom styles to it
          // Be aware, modifiers could override the properties defined in the previous
          // lines of this modifier!
          setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper,
          // they will be set as HTML attributes of the element

          setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties

          if (data.arrowElement && Object.keys(data.arrowStyles).length) {
            setStyles(data.arrowElement, data.arrowStyles);
          }

          return data;
        }
        /**
         * Set the x-placement attribute before everything else because it could be used
         * to add margins to the popper margins needs to be calculated to get the
         * correct popper offsets.
         * @method
         * @memberof Popper.modifiers
         * @param {HTMLElement} reference - The reference element used to position the popper
         * @param {HTMLElement} popper - The HTML element used as popper
         * @param {Object} options - Popper.js options
         */


        function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
          // compute reference element offsets
          var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); // compute auto placement, store placement inside the data object,
          // modifiers will be able to edit `placement` if needed
          // and refer to originalPlacement to know the original value

          var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
          popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because
          // without the position applied we can't guarantee correct computations

          setStyles(popper, {
            position: options.positionFixed ? 'fixed' : 'absolute'
          });
          return options;
        }
        /**
         * @function
         * @memberof Popper.Utils
         * @argument {Object} data - The data object generated by `update` method
         * @argument {Boolean} shouldRound - If the offsets should be rounded at all
         * @returns {Object} The popper's position offsets rounded
         *
         * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
         * good as it can be within reason.
         * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
         *
         * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
         * as well on High DPI screens).
         *
         * Firefox prefers no rounding for positioning and does not have blurriness on
         * high DPI screens.
         *
         * Only horizontal placement and left/right values need to be considered.
         */


        function getRoundedOffsets(data, shouldRound) {
          var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;
          var round = Math.round,
              floor = Math.floor;

          var noRound = function noRound(v) {
            return v;
          };

          var referenceWidth = round(reference.width);
          var popperWidth = round(popper.width);
          var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
          var isVariation = data.placement.indexOf('-') !== -1;
          var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
          var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;
          var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
          var verticalToInteger = !shouldRound ? noRound : round;
          return {
            left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
            top: verticalToInteger(popper.top),
            bottom: verticalToInteger(popper.bottom),
            right: horizontalToInteger(popper.right)
          };
        }

        var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);
        /**
         * @function
         * @memberof Modifiers
         * @argument {Object} data - The data object generated by `update` method
         * @argument {Object} options - Modifiers configuration and options
         * @returns {Object} The data object, properly modified
         */

        function computeStyle(data, options) {
          var x = options.x,
              y = options.y;
          var popper = data.offsets.popper; // Remove this legacy support in Popper.js v2

          var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
            return modifier.name === 'applyStyle';
          }).gpuAcceleration;

          if (legacyGpuAccelerationOption !== undefined) {
            console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
          }

          var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;
          var offsetParent = getOffsetParent(data.instance.popper);
          var offsetParentRect = getBoundingClientRect(offsetParent); // Styles

          var styles = {
            position: popper.position
          };
          var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);
          var sideA = x === 'bottom' ? 'top' : 'bottom';
          var sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported,
          //  we use `translate3d` to apply the position to the popper we
          // automatically use the supported prefixed version if needed

          var prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?)
          // If the content of the popper grows once it's been positioned, it
          // may happen that the popper gets misplaced because of the new content
          // overflowing its reference element
          // To avoid this problem, we provide two options (x and y), which allow
          // the consumer to define the offset origin.
          // If we position a popper on top of a reference element, we can set
          // `x` to `top` to make the popper grow towards its top instead of
          // its bottom.

          var left = void 0,
              top = void 0;

          if (sideA === 'bottom') {
            // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
            // and not the bottom of the html element
            if (offsetParent.nodeName === 'HTML') {
              top = -offsetParent.clientHeight + offsets.bottom;
            } else {
              top = -offsetParentRect.height + offsets.bottom;
            }
          } else {
            top = offsets.top;
          }

          if (sideB === 'right') {
            if (offsetParent.nodeName === 'HTML') {
              left = -offsetParent.clientWidth + offsets.right;
            } else {
              left = -offsetParentRect.width + offsets.right;
            }
          } else {
            left = offsets.left;
          }

          if (gpuAcceleration && prefixedProperty) {
            styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
            styles[sideA] = 0;
            styles[sideB] = 0;
            styles.willChange = 'transform';
          } else {
            // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
            var invertTop = sideA === 'bottom' ? -1 : 1;
            var invertLeft = sideB === 'right' ? -1 : 1;
            styles[sideA] = top * invertTop;
            styles[sideB] = left * invertLeft;
            styles.willChange = sideA + ', ' + sideB;
          } // Attributes


          var attributes = {
            'x-placement': data.placement
          }; // Update `data` attributes, styles and arrowStyles

          data.attributes = _extends({}, attributes, data.attributes);
          data.styles = _extends({}, styles, data.styles);
          data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);
          return data;
        }
        /**
         * Helper used to know if the given modifier depends from another one.<br />
         * It checks if the needed modifier is listed and enabled.
         * @method
         * @memberof Popper.Utils
         * @param {Array} modifiers - list of modifiers
         * @param {String} requestingName - name of requesting modifier
         * @param {String} requestedName - name of requested modifier
         * @returns {Boolean}
         */


        function isModifierRequired(modifiers, requestingName, requestedName) {
          var requesting = find(modifiers, function (_ref) {
            var name = _ref.name;
            return name === requestingName;
          });
          var isRequired = !!requesting && modifiers.some(function (modifier) {
            return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
          });

          if (!isRequired) {
            var _requesting = '`' + requestingName + '`';

            var requested = '`' + requestedName + '`';
            console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
          }

          return isRequired;
        }
        /**
         * @function
         * @memberof Modifiers
         * @argument {Object} data - The data object generated by update method
         * @argument {Object} options - Modifiers configuration and options
         * @returns {Object} The data object, properly modified
         */


        function arrow(data, options) {
          var _data$offsets$arrow; // arrow depends on keepTogether in order to work


          if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
            return data;
          }

          var arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector

          if (typeof arrowElement === 'string') {
            arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier

            if (!arrowElement) {
              return data;
            }
          } else {
            // if the arrowElement isn't a query selector we must check that the
            // provided DOM node is child of its popper node
            if (!data.instance.popper.contains(arrowElement)) {
              console.warn('WARNING: `arrow.element` must be child of its popper element!');
              return data;
            }
          }

          var placement = data.placement.split('-')[0];
          var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;
          var isVertical = ['left', 'right'].indexOf(placement) !== -1;
          var len = isVertical ? 'height' : 'width';
          var sideCapitalized = isVertical ? 'Top' : 'Left';
          var side = sideCapitalized.toLowerCase();
          var altSide = isVertical ? 'left' : 'top';
          var opSide = isVertical ? 'bottom' : 'right';
          var arrowElementSize = getOuterSizes(arrowElement)[len]; //
          // extends keepTogether behavior making sure the popper and its
          // reference have enough pixels in conjunction
          //
          // top/left side

          if (reference[opSide] - arrowElementSize < popper[side]) {
            data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
          } // bottom/right side


          if (reference[side] + arrowElementSize > popper[opSide]) {
            data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
          }

          data.offsets.popper = getClientRect(data.offsets.popper); // compute center of the popper

          var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets
          // take popper margin in account because we don't have this info available

          var css = getStyleComputedProperty(data.instance.popper);
          var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);
          var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);
          var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; // prevent arrowElement from being placed not contiguously to its popper

          sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
          data.arrowElement = arrowElement;
          data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);
          return data;
        }
        /**
         * Get the opposite placement variation of the given one
         * @method
         * @memberof Popper.Utils
         * @argument {String} placement variation
         * @returns {String} flipped placement variation
         */


        function getOppositeVariation(variation) {
          if (variation === 'end') {
            return 'start';
          } else if (variation === 'start') {
            return 'end';
          }

          return variation;
        }
        /**
         * List of accepted placements to use as values of the `placement` option.<br />
         * Valid placements are:
         * - `auto`
         * - `top`
         * - `right`
         * - `bottom`
         * - `left`
         *
         * Each placement can have a variation from this list:
         * - `-start`
         * - `-end`
         *
         * Variations are interpreted easily if you think of them as the left to right
         * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
         * is right.<br />
         * Vertically (`left` and `right`), `start` is top and `end` is bottom.
         *
         * Some valid examples are:
         * - `top-end` (on top of reference, right aligned)
         * - `right-start` (on right of reference, top aligned)
         * - `bottom` (on bottom, centered)
         * - `auto-end` (on the side with more space available, alignment depends by placement)
         *
         * @static
         * @type {Array}
         * @enum {String}
         * @readonly
         * @method placements
         * @memberof Popper
         */


        var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; // Get rid of `auto` `auto-start` and `auto-end`

        var validPlacements = placements.slice(3);
        /**
         * Given an initial placement, returns all the subsequent placements
         * clockwise (or counter-clockwise).
         *
         * @method
         * @memberof Popper.Utils
         * @argument {String} placement - A valid placement (it accepts variations)
         * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
         * @returns {Array} placements including their variations
         */

        function clockwise(placement) {
          var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var index = validPlacements.indexOf(placement);
          var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
          return counter ? arr.reverse() : arr;
        }

        var BEHAVIORS = {
          FLIP: 'flip',
          CLOCKWISE: 'clockwise',
          COUNTERCLOCKWISE: 'counterclockwise'
        };
        /**
         * @function
         * @memberof Modifiers
         * @argument {Object} data - The data object generated by update method
         * @argument {Object} options - Modifiers configuration and options
         * @returns {Object} The data object, properly modified
         */

        function flip(data, options) {
          // if `inner` modifier is enabled, we can't use the `flip` modifier
          if (isModifierEnabled(data.instance.modifiers, 'inner')) {
            return data;
          }

          if (data.flipped && data.placement === data.originalPlacement) {
            // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
            return data;
          }

          var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
          var placement = data.placement.split('-')[0];
          var placementOpposite = getOppositePlacement(placement);
          var variation = data.placement.split('-')[1] || '';
          var flipOrder = [];

          switch (options.behavior) {
            case BEHAVIORS.FLIP:
              flipOrder = [placement, placementOpposite];
              break;

            case BEHAVIORS.CLOCKWISE:
              flipOrder = clockwise(placement);
              break;

            case BEHAVIORS.COUNTERCLOCKWISE:
              flipOrder = clockwise(placement, true);
              break;

            default:
              flipOrder = options.behavior;
          }

          flipOrder.forEach(function (step, index) {
            if (placement !== step || flipOrder.length === index + 1) {
              return data;
            }

            placement = data.placement.split('-')[0];
            placementOpposite = getOppositePlacement(placement);
            var popperOffsets = data.offsets.popper;
            var refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here

            var floor = Math.floor;
            var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);
            var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
            var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
            var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
            var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);
            var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required

            var isVertical = ['top', 'bottom'].indexOf(placement) !== -1; // flips variation if reference element overflows boundaries

            var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom); // flips variation if popper content overflows boundaries

            var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);
            var flippedVariation = flippedVariationByRef || flippedVariationByContent;

            if (overlapsRef || overflowsBoundaries || flippedVariation) {
              // this boolean to detect any flip loop
              data.flipped = true;

              if (overlapsRef || overflowsBoundaries) {
                placement = flipOrder[index + 1];
              }

              if (flippedVariation) {
                variation = getOppositeVariation(variation);
              }

              data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with
              // any additional property we may add in the future

              data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
              data = runModifiers(data.instance.modifiers, data, 'flip');
            }
          });
          return data;
        }
        /**
         * @function
         * @memberof Modifiers
         * @argument {Object} data - The data object generated by update method
         * @argument {Object} options - Modifiers configuration and options
         * @returns {Object} The data object, properly modified
         */


        function keepTogether(data) {
          var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;
          var placement = data.placement.split('-')[0];
          var floor = Math.floor;
          var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
          var side = isVertical ? 'right' : 'bottom';
          var opSide = isVertical ? 'left' : 'top';
          var measurement = isVertical ? 'width' : 'height';

          if (popper[side] < floor(reference[opSide])) {
            data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
          }

          if (popper[opSide] > floor(reference[side])) {
            data.offsets.popper[opSide] = floor(reference[side]);
          }

          return data;
        }
        /**
         * Converts a string containing value + unit into a px value number
         * @function
         * @memberof {modifiers~offset}
         * @private
         * @argument {String} str - Value + unit string
         * @argument {String} measurement - `height` or `width`
         * @argument {Object} popperOffsets
         * @argument {Object} referenceOffsets
         * @returns {Number|String}
         * Value in pixels, or original string if no values were extracted
         */


        function toValue(str, measurement, popperOffsets, referenceOffsets) {
          // separate value from unit
          var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
          var value = +split[1];
          var unit = split[2]; // If it's not a number it's an operator, I guess

          if (!value) {
            return str;
          }

          if (unit.indexOf('%') === 0) {
            var element = void 0;

            switch (unit) {
              case '%p':
                element = popperOffsets;
                break;

              case '%':
              case '%r':
              default:
                element = referenceOffsets;
            }

            var rect = getClientRect(element);
            return rect[measurement] / 100 * value;
          } else if (unit === 'vh' || unit === 'vw') {
            // if is a vh or vw, we calculate the size based on the viewport
            var size = void 0;

            if (unit === 'vh') {
              size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
            } else {
              size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
            }

            return size / 100 * value;
          } else {
            // if is an explicit pixel unit, we get rid of the unit and keep the value
            // if is an implicit unit, it's px, and we return just the value
            return value;
          }
        }
        /**
         * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
         * @function
         * @memberof {modifiers~offset}
         * @private
         * @argument {String} offset
         * @argument {Object} popperOffsets
         * @argument {Object} referenceOffsets
         * @argument {String} basePlacement
         * @returns {Array} a two cells array with x and y offsets in numbers
         */


        function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
          var offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width
          // in this way the first offset will use an axis and the second one
          // will use the other one

          var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands
          // The regex addresses values with the plus or minus sign in front (+10, -20, etc)

          var fragments = offset.split(/(\+|\-)/).map(function (frag) {
            return frag.trim();
          }); // Detect if the offset string contains a pair of values or a single one
          // they could be separated by comma or space

          var divider = fragments.indexOf(find(fragments, function (frag) {
            return frag.search(/,|\s/) !== -1;
          }));

          if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
            console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
          } // If divider is found, we divide the list of values and operands to divide
          // them by ofset X and Y.


          var splitRegex = /\s*,\s*|\s+/;
          var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; // Convert the values with units to absolute pixels to allow our computations

          ops = ops.map(function (op, index) {
            // Most of the units rely on the orientation of the popper
            var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
            var mergeWithPrevious = false;
            return op // This aggregates any `+` or `-` sign that aren't considered operators
            // e.g.: 10 + +5 => [10, +, +5]
            .reduce(function (a, b) {
              if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
                a[a.length - 1] = b;
                mergeWithPrevious = true;
                return a;
              } else if (mergeWithPrevious) {
                a[a.length - 1] += b;
                mergeWithPrevious = false;
                return a;
              } else {
                return a.concat(b);
              }
            }, []) // Here we convert the string values into number values (in px)
            .map(function (str) {
              return toValue(str, measurement, popperOffsets, referenceOffsets);
            });
          }); // Loop trough the offsets arrays and execute the operations

          ops.forEach(function (op, index) {
            op.forEach(function (frag, index2) {
              if (isNumeric(frag)) {
                offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
              }
            });
          });
          return offsets;
        }
        /**
         * @function
         * @memberof Modifiers
         * @argument {Object} data - The data object generated by update method
         * @argument {Object} options - Modifiers configuration and options
         * @argument {Number|String} options.offset=0
         * The offset value as described in the modifier description
         * @returns {Object} The data object, properly modified
         */


        function offset(data, _ref) {
          var offset = _ref.offset;
          var placement = data.placement,
              _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;
          var basePlacement = placement.split('-')[0];
          var offsets = void 0;

          if (isNumeric(+offset)) {
            offsets = [+offset, 0];
          } else {
            offsets = parseOffset(offset, popper, reference, basePlacement);
          }

          if (basePlacement === 'left') {
            popper.top += offsets[0];
            popper.left -= offsets[1];
          } else if (basePlacement === 'right') {
            popper.top += offsets[0];
            popper.left += offsets[1];
          } else if (basePlacement === 'top') {
            popper.left += offsets[0];
            popper.top -= offsets[1];
          } else if (basePlacement === 'bottom') {
            popper.left += offsets[0];
            popper.top += offsets[1];
          }

          data.popper = popper;
          return data;
        }
        /**
         * @function
         * @memberof Modifiers
         * @argument {Object} data - The data object generated by `update` method
         * @argument {Object} options - Modifiers configuration and options
         * @returns {Object} The data object, properly modified
         */


        function preventOverflow(data, options) {
          var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to
          // go one step up and use the next offsetParent as reference to
          // avoid to make this modifier completely useless and look like broken

          if (data.instance.reference === boundariesElement) {
            boundariesElement = getOffsetParent(boundariesElement);
          } // NOTE: DOM access here
          // resets the popper's position so that the document size can be calculated excluding
          // the size of the popper element itself


          var transformProp = getSupportedPropertyName('transform');
          var popperStyles = data.instance.popper.style; // assignment to help minification

          var top = popperStyles.top,
              left = popperStyles.left,
              transform = popperStyles[transformProp];
          popperStyles.top = '';
          popperStyles.left = '';
          popperStyles[transformProp] = '';
          var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); // NOTE: DOM access here
          // restores the original style properties after the offsets have been computed

          popperStyles.top = top;
          popperStyles.left = left;
          popperStyles[transformProp] = transform;
          options.boundaries = boundaries;
          var order = options.priority;
          var popper = data.offsets.popper;
          var check = {
            primary: function primary(placement) {
              var value = popper[placement];

              if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
                value = Math.max(popper[placement], boundaries[placement]);
              }

              return defineProperty({}, placement, value);
            },
            secondary: function secondary(placement) {
              var mainSide = placement === 'right' ? 'left' : 'top';
              var value = popper[mainSide];

              if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
                value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
              }

              return defineProperty({}, mainSide, value);
            }
          };
          order.forEach(function (placement) {
            var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
            popper = _extends({}, popper, check[side](placement));
          });
          data.offsets.popper = popper;
          return data;
        }
        /**
         * @function
         * @memberof Modifiers
         * @argument {Object} data - The data object generated by `update` method
         * @argument {Object} options - Modifiers configuration and options
         * @returns {Object} The data object, properly modified
         */


        function shift(data) {
          var placement = data.placement;
          var basePlacement = placement.split('-')[0];
          var shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier

          if (shiftvariation) {
            var _data$offsets = data.offsets,
                reference = _data$offsets.reference,
                popper = _data$offsets.popper;
            var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
            var side = isVertical ? 'left' : 'top';
            var measurement = isVertical ? 'width' : 'height';
            var shiftOffsets = {
              start: defineProperty({}, side, reference[side]),
              end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
            };
            data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
          }

          return data;
        }
        /**
         * @function
         * @memberof Modifiers
         * @argument {Object} data - The data object generated by update method
         * @argument {Object} options - Modifiers configuration and options
         * @returns {Object} The data object, properly modified
         */


        function hide(data) {
          if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
            return data;
          }

          var refRect = data.offsets.reference;
          var bound = find(data.instance.modifiers, function (modifier) {
            return modifier.name === 'preventOverflow';
          }).boundaries;

          if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
            // Avoid unnecessary DOM access if visibility hasn't changed
            if (data.hide === true) {
              return data;
            }

            data.hide = true;
            data.attributes['x-out-of-boundaries'] = '';
          } else {
            // Avoid unnecessary DOM access if visibility hasn't changed
            if (data.hide === false) {
              return data;
            }

            data.hide = false;
            data.attributes['x-out-of-boundaries'] = false;
          }

          return data;
        }
        /**
         * @function
         * @memberof Modifiers
         * @argument {Object} data - The data object generated by `update` method
         * @argument {Object} options - Modifiers configuration and options
         * @returns {Object} The data object, properly modified
         */


        function inner(data) {
          var placement = data.placement;
          var basePlacement = placement.split('-')[0];
          var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;
          var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;
          var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;
          popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);
          data.placement = getOppositePlacement(placement);
          data.offsets.popper = getClientRect(popper);
          return data;
        }
        /**
         * Modifier function, each modifier can have a function of this type assigned
         * to its `fn` property.<br />
         * These functions will be called on each update, this means that you must
         * make sure they are performant enough to avoid performance bottlenecks.
         *
         * @function ModifierFn
         * @argument {dataObject} data - The data object generated by `update` method
         * @argument {Object} options - Modifiers configuration and options
         * @returns {dataObject} The data object, properly modified
         */

        /**
         * Modifiers are plugins used to alter the behavior of your poppers.<br />
         * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
         * needed by the library.
         *
         * Usually you don't want to override the `order`, `fn` and `onLoad` props.
         * All the other properties are configurations that could be tweaked.
         * @namespace modifiers
         */


        var modifiers = {
          /**
           * Modifier used to shift the popper on the start or end of its reference
           * element.<br />
           * It will read the variation of the `placement` property.<br />
           * It can be one either `-end` or `-start`.
           * @memberof modifiers
           * @inner
           */
          shift: {
            /** @prop {number} order=100 - Index used to define the order of execution */
            order: 100,

            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
            enabled: true,

            /** @prop {ModifierFn} */
            fn: shift
          },

          /**
           * The `offset` modifier can shift your popper on both its axis.
           *
           * It accepts the following units:
           * - `px` or unit-less, interpreted as pixels
           * - `%` or `%r`, percentage relative to the length of the reference element
           * - `%p`, percentage relative to the length of the popper element
           * - `vw`, CSS viewport width unit
           * - `vh`, CSS viewport height unit
           *
           * For length is intended the main axis relative to the placement of the popper.<br />
           * This means that if the placement is `top` or `bottom`, the length will be the
           * `width`. In case of `left` or `right`, it will be the `height`.
           *
           * You can provide a single value (as `Number` or `String`), or a pair of values
           * as `String` divided by a comma or one (or more) white spaces.<br />
           * The latter is a deprecated method because it leads to confusion and will be
           * removed in v2.<br />
           * Additionally, it accepts additions and subtractions between different units.
           * Note that multiplications and divisions aren't supported.
           *
           * Valid examples are:
           * ```
           * 10
           * '10%'
           * '10, 10'
           * '10%, 10'
           * '10 + 10%'
           * '10 - 5vh + 3%'
           * '-10px + 5vh, 5px - 6%'
           * ```
           * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
           * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
           * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
           *
           * @memberof modifiers
           * @inner
           */
          offset: {
            /** @prop {number} order=200 - Index used to define the order of execution */
            order: 200,

            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
            enabled: true,

            /** @prop {ModifierFn} */
            fn: offset,

            /** @prop {Number|String} offset=0
             * The offset value as described in the modifier description
             */
            offset: 0
          },

          /**
           * Modifier used to prevent the popper from being positioned outside the boundary.
           *
           * A scenario exists where the reference itself is not within the boundaries.<br />
           * We can say it has "escaped the boundaries" — or just "escaped".<br />
           * In this case we need to decide whether the popper should either:
           *
           * - detach from the reference and remain "trapped" in the boundaries, or
           * - if it should ignore the boundary and "escape with its reference"
           *
           * When `escapeWithReference` is set to`true` and reference is completely
           * outside its boundaries, the popper will overflow (or completely leave)
           * the boundaries in order to remain attached to the edge of the reference.
           *
           * @memberof modifiers
           * @inner
           */
          preventOverflow: {
            /** @prop {number} order=300 - Index used to define the order of execution */
            order: 300,

            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
            enabled: true,

            /** @prop {ModifierFn} */
            fn: preventOverflow,

            /**
             * @prop {Array} [priority=['left','right','top','bottom']]
             * Popper will try to prevent overflow following these priorities by default,
             * then, it could overflow on the left and on top of the `boundariesElement`
             */
            priority: ['left', 'right', 'top', 'bottom'],

            /**
             * @prop {number} padding=5
             * Amount of pixel used to define a minimum distance between the boundaries
             * and the popper. This makes sure the popper always has a little padding
             * between the edges of its container
             */
            padding: 5,

            /**
             * @prop {String|HTMLElement} boundariesElement='scrollParent'
             * Boundaries used by the modifier. Can be `scrollParent`, `window`,
             * `viewport` or any DOM element.
             */
            boundariesElement: 'scrollParent'
          },

          /**
           * Modifier used to make sure the reference and its popper stay near each other
           * without leaving any gap between the two. Especially useful when the arrow is
           * enabled and you want to ensure that it points to its reference element.
           * It cares only about the first axis. You can still have poppers with margin
           * between the popper and its reference element.
           * @memberof modifiers
           * @inner
           */
          keepTogether: {
            /** @prop {number} order=400 - Index used to define the order of execution */
            order: 400,

            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
            enabled: true,

            /** @prop {ModifierFn} */
            fn: keepTogether
          },

          /**
           * This modifier is used to move the `arrowElement` of the popper to make
           * sure it is positioned between the reference element and its popper element.
           * It will read the outer size of the `arrowElement` node to detect how many
           * pixels of conjunction are needed.
           *
           * It has no effect if no `arrowElement` is provided.
           * @memberof modifiers
           * @inner
           */
          arrow: {
            /** @prop {number} order=500 - Index used to define the order of execution */
            order: 500,

            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
            enabled: true,

            /** @prop {ModifierFn} */
            fn: arrow,

            /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
            element: '[x-arrow]'
          },

          /**
           * Modifier used to flip the popper's placement when it starts to overlap its
           * reference element.
           *
           * Requires the `preventOverflow` modifier before it in order to work.
           *
           * **NOTE:** this modifier will interrupt the current update cycle and will
           * restart it if it detects the need to flip the placement.
           * @memberof modifiers
           * @inner
           */
          flip: {
            /** @prop {number} order=600 - Index used to define the order of execution */
            order: 600,

            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
            enabled: true,

            /** @prop {ModifierFn} */
            fn: flip,

            /**
             * @prop {String|Array} behavior='flip'
             * The behavior used to change the popper's placement. It can be one of
             * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
             * placements (with optional variations)
             */
            behavior: 'flip',

            /**
             * @prop {number} padding=5
             * The popper will flip if it hits the edges of the `boundariesElement`
             */
            padding: 5,

            /**
             * @prop {String|HTMLElement} boundariesElement='viewport'
             * The element which will define the boundaries of the popper position.
             * The popper will never be placed outside of the defined boundaries
             * (except if `keepTogether` is enabled)
             */
            boundariesElement: 'viewport',

            /**
             * @prop {Boolean} flipVariations=false
             * The popper will switch placement variation between `-start` and `-end` when
             * the reference element overlaps its boundaries.
             *
             * The original placement should have a set variation.
             */
            flipVariations: false,

            /**
             * @prop {Boolean} flipVariationsByContent=false
             * The popper will switch placement variation between `-start` and `-end` when
             * the popper element overlaps its reference boundaries.
             *
             * The original placement should have a set variation.
             */
            flipVariationsByContent: false
          },

          /**
           * Modifier used to make the popper flow toward the inner of the reference element.
           * By default, when this modifier is disabled, the popper will be placed outside
           * the reference element.
           * @memberof modifiers
           * @inner
           */
          inner: {
            /** @prop {number} order=700 - Index used to define the order of execution */
            order: 700,

            /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
            enabled: false,

            /** @prop {ModifierFn} */
            fn: inner
          },

          /**
           * Modifier used to hide the popper when its reference element is outside of the
           * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
           * be used to hide with a CSS selector the popper when its reference is
           * out of boundaries.
           *
           * Requires the `preventOverflow` modifier before it in order to work.
           * @memberof modifiers
           * @inner
           */
          hide: {
            /** @prop {number} order=800 - Index used to define the order of execution */
            order: 800,

            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
            enabled: true,

            /** @prop {ModifierFn} */
            fn: hide
          },

          /**
           * Computes the style that will be applied to the popper element to gets
           * properly positioned.
           *
           * Note that this modifier will not touch the DOM, it just prepares the styles
           * so that `applyStyle` modifier can apply it. This separation is useful
           * in case you need to replace `applyStyle` with a custom implementation.
           *
           * This modifier has `850` as `order` value to maintain backward compatibility
           * with previous versions of Popper.js. Expect the modifiers ordering method
           * to change in future major versions of the library.
           *
           * @memberof modifiers
           * @inner
           */
          computeStyle: {
            /** @prop {number} order=850 - Index used to define the order of execution */
            order: 850,

            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
            enabled: true,

            /** @prop {ModifierFn} */
            fn: computeStyle,

            /**
             * @prop {Boolean} gpuAcceleration=true
             * If true, it uses the CSS 3D transformation to position the popper.
             * Otherwise, it will use the `top` and `left` properties
             */
            gpuAcceleration: true,

            /**
             * @prop {string} [x='bottom']
             * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
             * Change this if your popper should grow in a direction different from `bottom`
             */
            x: 'bottom',

            /**
             * @prop {string} [x='left']
             * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
             * Change this if your popper should grow in a direction different from `right`
             */
            y: 'right'
          },

          /**
           * Applies the computed styles to the popper element.
           *
           * All the DOM manipulations are limited to this modifier. This is useful in case
           * you want to integrate Popper.js inside a framework or view library and you
           * want to delegate all the DOM manipulations to it.
           *
           * Note that if you disable this modifier, you must make sure the popper element
           * has its position set to `absolute` before Popper.js can do its work!
           *
           * Just disable this modifier and define your own to achieve the desired effect.
           *
           * @memberof modifiers
           * @inner
           */
          applyStyle: {
            /** @prop {number} order=900 - Index used to define the order of execution */
            order: 900,

            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
            enabled: true,

            /** @prop {ModifierFn} */
            fn: applyStyle,

            /** @prop {Function} */
            onLoad: applyStyleOnLoad,

            /**
             * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
             * @prop {Boolean} gpuAcceleration=true
             * If true, it uses the CSS 3D transformation to position the popper.
             * Otherwise, it will use the `top` and `left` properties
             */
            gpuAcceleration: undefined
          }
        };
        /**
         * The `dataObject` is an object containing all the information used by Popper.js.
         * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
         * @name dataObject
         * @property {Object} data.instance The Popper.js instance
         * @property {String} data.placement Placement applied to popper
         * @property {String} data.originalPlacement Placement originally defined on init
         * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
         * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
         * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
         * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
         * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
         * @property {Object} data.boundaries Offsets of the popper boundaries
         * @property {Object} data.offsets The measurements of popper, reference and arrow elements
         * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
         * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
         * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
         */

        /**
         * Default options provided to Popper.js constructor.<br />
         * These can be overridden using the `options` argument of Popper.js.<br />
         * To override an option, simply pass an object with the same
         * structure of the `options` object, as the 3rd argument. For example:
         * ```
         * new Popper(ref, pop, {
         *   modifiers: {
         *     preventOverflow: { enabled: false }
         *   }
         * })
         * ```
         * @type {Object}
         * @static
         * @memberof Popper
         */

        var Defaults = {
          /**
           * Popper's placement.
           * @prop {Popper.placements} placement='bottom'
           */
          placement: 'bottom',

          /**
           * Set this to true if you want popper to position it self in 'fixed' mode
           * @prop {Boolean} positionFixed=false
           */
          positionFixed: false,

          /**
           * Whether events (resize, scroll) are initially enabled.
           * @prop {Boolean} eventsEnabled=true
           */
          eventsEnabled: true,

          /**
           * Set to true if you want to automatically remove the popper when
           * you call the `destroy` method.
           * @prop {Boolean} removeOnDestroy=false
           */
          removeOnDestroy: false,

          /**
           * Callback called when the popper is created.<br />
           * By default, it is set to no-op.<br />
           * Access Popper.js instance with `data.instance`.
           * @prop {onCreate}
           */
          onCreate: function onCreate() {},

          /**
           * Callback called when the popper is updated. This callback is not called
           * on the initialization/creation of the popper, but only on subsequent
           * updates.<br />
           * By default, it is set to no-op.<br />
           * Access Popper.js instance with `data.instance`.
           * @prop {onUpdate}
           */
          onUpdate: function onUpdate() {},

          /**
           * List of modifiers used to modify the offsets before they are applied to the popper.
           * They provide most of the functionalities of Popper.js.
           * @prop {modifiers}
           */
          modifiers: modifiers
        };
        /**
         * @callback onCreate
         * @param {dataObject} data
         */

        /**
         * @callback onUpdate
         * @param {dataObject} data
         */
        // Utils
        // Methods

        var Popper = function () {
          /**
           * Creates a new Popper.js instance.
           * @class Popper
           * @param {Element|referenceObject} reference - The reference element used to position the popper
           * @param {Element} popper - The HTML / XML element used as the popper
           * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
           * @return {Object} instance - The generated Popper.js instance
           */
          function Popper(reference, popper) {
            var _this = this;

            var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            classCallCheck(this, Popper);

            this.scheduleUpdate = function () {
              return requestAnimationFrame(_this.update);
            }; // make update() debounced, so that it only runs at most once-per-tick


            this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it

            this.options = _extends({}, Popper.Defaults, options); // init state

            this.state = {
              isDestroyed: false,
              isCreated: false,
              scrollParents: []
            }; // get reference and popper elements (allow jQuery wrappers)

            this.reference = reference && reference.jquery ? reference[0] : reference;
            this.popper = popper && popper.jquery ? popper[0] : popper; // Deep merge modifiers options

            this.options.modifiers = {};
            Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
              _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
            }); // Refactoring modifiers' list (Object => Array)

            this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
              return _extends({
                name: name
              }, _this.options.modifiers[name]);
            }) // sort the modifiers by order
            .sort(function (a, b) {
              return a.order - b.order;
            }); // modifiers have the ability to execute arbitrary code when Popper.js get inited
            // such code is executed in the same order of its modifier
            // they could add new properties to their options configuration
            // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!

            this.modifiers.forEach(function (modifierOptions) {
              if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
                modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
              }
            }); // fire the first update to position the popper in the right place

            this.update();
            var eventsEnabled = this.options.eventsEnabled;

            if (eventsEnabled) {
              // setup event listeners, they will take care of update the position in specific situations
              this.enableEventListeners();
            }

            this.state.eventsEnabled = eventsEnabled;
          } // We can't use class properties because they don't get listed in the
          // class prototype and break stuff like Sinon stubs


          createClass(Popper, [{
            key: 'update',
            value: function update$$1() {
              return update.call(this);
            }
          }, {
            key: 'destroy',
            value: function destroy$$1() {
              return destroy.call(this);
            }
          }, {
            key: 'enableEventListeners',
            value: function enableEventListeners$$1() {
              return enableEventListeners.call(this);
            }
          }, {
            key: 'disableEventListeners',
            value: function disableEventListeners$$1() {
              return disableEventListeners.call(this);
            }
            /**
             * Schedules an update. It will run on the next UI update available.
             * @method scheduleUpdate
             * @memberof Popper
             */

            /**
             * Collection of utilities useful when writing custom modifiers.
             * Starting from version 1.7, this method is available only if you
             * include `popper-utils.js` before `popper.js`.
             *
             * **DEPRECATION**: This way to access PopperUtils is deprecated
             * and will be removed in v2! Use the PopperUtils module directly instead.
             * Due to the high instability of the methods contained in Utils, we can't
             * guarantee them to follow semver. Use them at your own risk!
             * @static
             * @private
             * @type {Object}
             * @deprecated since version 1.8
             * @member Utils
             * @memberof Popper
             */

          }]);
          return Popper;
        }();
        /**
         * The `referenceObject` is an object that provides an interface compatible with Popper.js
         * and lets you use it as replacement of a real DOM node.<br />
         * You can use this method to position a popper relatively to a set of coordinates
         * in case you don't have a DOM node to use as reference.
         *
         * ```
         * new Popper(referenceObject, popperNode);
         * ```
         *
         * NB: This feature isn't supported in Internet Explorer 10.
         * @name referenceObject
         * @property {Function} data.getBoundingClientRect
         * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
         * @property {number} data.clientWidth
         * An ES6 getter that will return the width of the virtual reference element.
         * @property {number} data.clientHeight
         * An ES6 getter that will return the height of the virtual reference element.
         */


        Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
        Popper.placements = placements;
        Popper.Defaults = Defaults;
        /* harmony default export */

        __webpack_exports__["default"] = Popper;
        /* WEBPACK VAR INJECTION */
      }).call(__webpack_exports__, __webpack_require__(37));
      /***/
    },
    /* 318 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowRightIcon_vue__ = __webpack_require__(94);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowRightIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowRightIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowRightIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowRightIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1e23e1bf_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdArrowRightIcon_vue__ = __webpack_require__(319);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowRightIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1e23e1bf_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdArrowRightIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/core/icons/MdArrowRightIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-1e23e1bf", Component.options);
          } else {
            hotAPI.reload("data-v-1e23e1bf", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 319 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm._m(0);
      };

      var staticRenderFns = [function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-icon", {
          staticClass: "md-icon-image"
        }, [_c("svg", {
          attrs: {
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }
        }, [_c("path", {
          attrs: {
            d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
          }
        }), _vm._v(" "), _c("path", {
          attrs: {
            d: "M0-.25h24v24H0z",
            fill: "none"
          }
        })])]);
      }];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-1e23e1bf", esExports);
        }
      }
      /***/

    },
    /* 320 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowLeftIcon_vue__ = __webpack_require__(95);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowLeftIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowLeftIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowLeftIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowLeftIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5cc7b6f4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdArrowLeftIcon_vue__ = __webpack_require__(321);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowLeftIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5cc7b6f4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdArrowLeftIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/core/icons/MdArrowLeftIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-5cc7b6f4", Component.options);
          } else {
            hotAPI.reload("data-v-5cc7b6f4", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 321 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm._m(0);
      };

      var staticRenderFns = [function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-icon", {
          staticClass: "md-icon-image"
        }, [_c("svg", {
          attrs: {
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }
        }, [_c("path", {
          attrs: {
            d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
          }
        }), _vm._v(" "), _c("path", {
          attrs: {
            d: "M0-.5h24v24H0z",
            fill: "none"
          }
        })])]);
      }];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-5cc7b6f4", esExports);
        }
      }
      /***/

    },
    /* 322 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 323 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-portal", [_c("transition", {
          attrs: {
            name: "md-dialog"
          }
        }, [_vm.mdActive ? _c("div", _vm._g({
          staticClass: "md-dialog",
          class: [_vm.dialogClasses, _vm.$mdActiveTheme],
          on: {
            keydown: function ($event) {
              if (!$event.type.indexOf("key") && _vm._k($event.keyCode, "esc", 27, $event.key, ["Esc", "Escape"])) {
                return null;
              }

              return _vm.onEsc($event);
            }
          }
        }, _vm.$listeners), [_c("md-focus-trap", [_c("div", {
          staticClass: "md-dialog-container"
        }, [_vm._t("default"), _vm._v(" "), _c("keep-alive", [_vm.mdBackdrop ? _c("md-overlay", {
          class: _vm.mdBackdropClass,
          attrs: {
            "md-fixed": "",
            "md-active": _vm.mdActive
          },
          on: {
            click: _vm.onClick
          }
        }) : _vm._e()], 1)], 2)])], 1) : _vm._e()])], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-f080a6a2", esExports);
        }
      }
      /***/

    },
    /* 324 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-popover", {
          attrs: {
            "md-settings": _vm.popperSettings,
            "md-active": ""
          }
        }, [_c("transition", {
          attrs: {
            name: "md-datepicker-dialog",
            appear: ""
          },
          on: {
            enter: _vm.setContentStyles,
            "after-leave": _vm.resetDate
          }
        }, [_c("div", {
          staticClass: "md-datepicker-dialog",
          class: [_vm.$mdActiveTheme]
        }, [_c("div", {
          staticClass: "md-datepicker-header"
        }, [_c("span", {
          staticClass: "md-datepicker-year-select",
          class: {
            "md-selected": _vm.currentView === "year"
          },
          on: {
            click: function ($event) {
              _vm.currentView = "year";
            }
          }
        }, [_vm._v(_vm._s(_vm.selectedYear))]), _vm._v(" "), _c("div", {
          staticClass: "md-datepicker-date-select",
          class: {
            "md-selected": _vm.currentView !== "year"
          },
          on: {
            click: function ($event) {
              _vm.currentView = "day";
            }
          }
        }, [_c("strong", {
          staticClass: "md-datepicker-dayname"
        }, [_vm._v(_vm._s(_vm.shortDayName) + ", ")]), _vm._v(" "), _c("strong", {
          staticClass: "md-datepicker-monthname"
        }, [_vm._v(_vm._s(_vm.shortMonthName))]), _vm._v(" "), _c("strong", {
          staticClass: "md-datepicker-day"
        }, [_vm._v(_vm._s(_vm.currentDay))])])]), _vm._v(" "), _c("div", {
          staticClass: "md-datepicker-body"
        }, [_c("transition", {
          attrs: {
            name: "md-datepicker-body-header"
          }
        }, [_vm.currentView === "day" ? _c("div", {
          staticClass: "md-datepicker-body-header"
        }, [_c("md-button", {
          staticClass: "md-dense md-icon-button",
          on: {
            click: _vm.previousMonth
          }
        }, [_c("md-arrow-left-icon")], 1), _vm._v(" "), _c("md-button", {
          staticClass: "md-dense md-icon-button",
          on: {
            click: _vm.nextMonth
          }
        }, [_c("md-arrow-right-icon")], 1)], 1) : _vm._e()]), _vm._v(" "), _c("div", {
          staticClass: "md-datepicker-body-content",
          style: _vm.contentStyles
        }, [_c("transition", {
          attrs: {
            name: "md-datepicker-view"
          }
        }, [_vm.currentView === "day" ? _c("transition-group", {
          staticClass: "md-datepicker-panel md-datepicker-calendar",
          class: _vm.calendarClasses,
          attrs: {
            tag: "div",
            name: "md-datepicker-month"
          }
        }, _vm._l([_vm.currentDate], function (month) {
          return _c("div", {
            key: month.getMonth(),
            staticClass: "md-datepicker-panel md-datepicker-month"
          }, [_c("md-button", {
            staticClass: "md-dense md-datepicker-month-trigger",
            on: {
              click: function ($event) {
                _vm.currentView = "month";
              }
            }
          }, [_vm._v(_vm._s(_vm.currentMonthName) + " " + _vm._s(_vm.currentYear))]), _vm._v(" "), _c("div", {
            staticClass: "md-datepicker-week"
          }, [_vm._l(_vm.locale.shorterDays, function (day, index) {
            return index >= _vm.firstDayOfAWeek ? _c("span", {
              key: index
            }, [_vm._v(_vm._s(day))]) : _vm._e();
          }), _vm._v(" "), _vm._l(_vm.locale.shorterDays, function (day, index) {
            return index < _vm.firstDayOfAWeek ? _c("span", {
              key: index
            }, [_vm._v(_vm._s(day))]) : _vm._e();
          })], 2), _vm._v(" "), _c("div", {
            staticClass: "md-datepicker-days"
          }, [_vm._l(_vm.prefixEmptyDays, function (day) {
            return _c("span", {
              key: "day-empty-" + day,
              staticClass: "md-datepicker-empty"
            });
          }), _vm._v(" "), _vm._l(_vm.daysInMonth, function (day) {
            return _c("div", {
              key: "day-" + day,
              staticClass: "md-datepicker-day"
            }, [_c("span", {
              staticClass: "md-datepicker-day-button",
              class: {
                "md-datepicker-selected": _vm.isSelectedDay(day),
                "md-datepicker-today": _vm.isToday(day),
                "md-datepicker-disabled": _vm.isDisabled(day)
              },
              on: {
                click: function ($event) {
                  return _vm.selectDate(day);
                }
              }
            }, [_vm._v(_vm._s(day))])]);
          })], 2)], 1);
        }), 0) : _vm.currentView === "month" ? _c("div", {
          staticClass: "md-datepicker-panel md-datepicker-month-selector"
        }, [_c("md-button", {
          staticClass: "md-datepicker-year-trigger",
          on: {
            click: function ($event) {
              _vm.currentView = "year";
            }
          }
        }, [_vm._v(_vm._s(_vm.currentYear))]), _vm._v(" "), _vm._l(_vm.locale.months, function (month, index) {
          return _c("span", {
            key: month,
            staticClass: "md-datepicker-month-button",
            class: {
              "md-datepicker-selected": _vm.currentMonthName === month
            },
            on: {
              click: function ($event) {
                return _vm.switchMonth(index);
              }
            }
          }, [_vm._v(_vm._s(month))]);
        })], 2) : _vm.currentView === "year" ? _c("keep-alive", [_c("md-content", {
          staticClass: "md-datepicker-panel md-datepicker-year-selector md-scrollbar"
        }, _vm._l(_vm.availableYears, function (year) {
          return _c("span", {
            key: year,
            staticClass: "md-datepicker-year-button",
            class: {
              "md-datepicker-selected": _vm.currentYear === year
            },
            on: {
              click: function ($event) {
                return _vm.switchYear(year);
              }
            }
          }, [_vm._v(_vm._s(year))]);
        }), 0)], 1) : _vm._e()], 1)], 1), _vm._v(" "), _c("md-dialog-actions", {
          staticClass: "md-datepicker-body-footer"
        }, [_c("md-button", {
          staticClass: "md-primary",
          on: {
            click: _vm.onCancel
          }
        }, [_vm._v("Cancel")]), _vm._v(" "), !_vm.mdImmediately ? _c("md-button", {
          staticClass: "md-primary",
          on: {
            click: _vm.onConfirm
          }
        }, [_vm._v("Ok")]) : _vm._e()], 1)], 1)])])], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-4f0a3d52", esExports);
        }
      }
      /***/

    },
    /* 325 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDateIcon_vue__ = __webpack_require__(98);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDateIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDateIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDateIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDateIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_644b79cc_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDateIcon_vue__ = __webpack_require__(326);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDateIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_644b79cc_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDateIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/core/icons/MdDateIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-644b79cc", Component.options);
          } else {
            hotAPI.reload("data-v-644b79cc", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 326 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm._m(0);
      };

      var staticRenderFns = [function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-icon", {
          staticClass: "md-icon-image"
        }, [_c("svg", {
          attrs: {
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }
        }, [_c("path", {
          attrs: {
            d: "M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
          }
        }), _vm._v(" "), _c("path", {
          attrs: {
            d: "M0 0h24v24H0z",
            fill: "none"
          }
        })])]);
      }];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-644b79cc", esExports);
        }
      }
      /***/

    },
    /* 327 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      exports.default = function (fn, time) {
        var timeout = void 0;
        return function () {
          var _this = this,
              _arguments = arguments;

          var functionCall = function functionCall() {
            return fn.apply(_this, _arguments);
          };

          clearTimeout(timeout);
          timeout = setTimeout(functionCall, time);
        };
      };
      /***/

    },
    /* 328 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-field", {
          class: ["md-datepicker", {
            "md-native": !this.mdOverrideNative
          }],
          attrs: {
            "md-clearable": ""
          }
        }, [_c("md-date-icon", {
          staticClass: "md-date-icon",
          nativeOn: {
            click: function ($event) {
              return _vm.toggleDialog($event);
            }
          }
        }), _vm._v(" "), _c("md-input", {
          ref: "input",
          attrs: {
            type: _vm.type,
            pattern: _vm.pattern
          },
          nativeOn: {
            focus: function ($event) {
              return _vm.onFocus($event);
            }
          },
          model: {
            value: _vm.inputDate,
            callback: function ($$v) {
              _vm.inputDate = $$v;
            },
            expression: "inputDate"
          }
        }), _vm._v(" "), _vm._t("default"), _vm._v(" "), _c("keep-alive", [_vm.showDialog ? _c("md-datepicker-dialog", {
          attrs: {
            "md-date": _vm.localDate,
            "md-disabled-dates": _vm.mdDisabledDates,
            mdImmediately: _vm.mdImmediately
          },
          on: {
            "update:mdDate": function ($event) {
              _vm.localDate = $event;
            },
            "update:md-date": function ($event) {
              _vm.localDate = $event;
            },
            "md-closed": _vm.toggleDialog
          }
        }) : _vm._e()], 1), _vm._v(" "), _c("md-overlay", {
          staticClass: "md-datepicker-overlay",
          attrs: {
            "md-fixed": "",
            "md-active": _vm.showDialog
          },
          on: {
            click: _vm.toggleDialog
          }
        })], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-37fe792f", esExports);
        }
      }
      /***/

    },
    /* 329 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdDialog = __webpack_require__(12);

      var _MdDialog2 = _interopRequireDefault(_MdDialog);

      var _MdDialogTitle = __webpack_require__(330);

      var _MdDialogTitle2 = _interopRequireDefault(_MdDialogTitle);

      var _MdDialogContent = __webpack_require__(333);

      var _MdDialogContent2 = _interopRequireDefault(_MdDialogContent);

      var _MdDialogActions = __webpack_require__(336);

      var _MdDialogActions2 = _interopRequireDefault(_MdDialogActions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdDialog2.default.name, _MdDialog2.default);
        Vue.component(_MdDialogTitle2.default.name, _MdDialogTitle2.default);
        Vue.component(_MdDialogContent2.default.name, _MdDialogContent2.default);
        Vue.component(_MdDialogActions2.default.name, _MdDialogActions2.default);
      };
      /***/

    },
    /* 330 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogTitle_vue__ = __webpack_require__(99);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogTitle_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogTitle_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogTitle_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogTitle_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_879275ce_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialogTitle_vue__ = __webpack_require__(332);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(331);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogTitle_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_879275ce_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialogTitle_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdDialog/MdDialogTitle.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-879275ce", Component.options);
          } else {
            hotAPI.reload("data-v-879275ce", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 331 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 332 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("span", {
          staticClass: "md-dialog-title md-title"
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-879275ce", esExports);
        }
      }
      /***/

    },
    /* 333 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogContent_vue__ = __webpack_require__(100);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogContent_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogContent_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogContent_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogContent_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_dae90f0c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialogContent_vue__ = __webpack_require__(335);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(334);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogContent_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_dae90f0c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialogContent_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdDialog/MdDialogContent.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-dae90f0c", Component.options);
          } else {
            hotAPI.reload("data-v-dae90f0c", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 334 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 335 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          class: ["md-dialog-content", _vm.$mdActiveTheme]
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-dae90f0c", esExports);
        }
      }
      /***/

    },
    /* 336 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogActions_vue__ = __webpack_require__(101);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogActions_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogActions_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogActions_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogActions_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_092eaafe_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialogActions_vue__ = __webpack_require__(338);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(337);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogActions_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_092eaafe_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialogActions_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdDialog/MdDialogActions.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-092eaafe", Component.options);
          } else {
            hotAPI.reload("data-v-092eaafe", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 337 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 338 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-dialog-actions"
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-092eaafe", esExports);
        }
      }
      /***/

    },
    /* 339 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdDialog = __webpack_require__(12);

      var _MdDialog2 = _interopRequireDefault(_MdDialog);

      var _MdDialogAlert = __webpack_require__(340);

      var _MdDialogAlert2 = _interopRequireDefault(_MdDialogAlert);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdDialog2.default.name, _MdDialog2.default);
        Vue.component(_MdDialogAlert2.default.name, _MdDialogAlert2.default);
      };
      /***/

    },
    /* 340 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogAlert_vue__ = __webpack_require__(102);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogAlert_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogAlert_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogAlert_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogAlert_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_197ab94b_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialogAlert_vue__ = __webpack_require__(341);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogAlert_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_197ab94b_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialogAlert_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdDialog/MdDialogAlert/MdDialogAlert.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-197ab94b", Component.options);
          } else {
            hotAPI.reload("data-v-197ab94b", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 341 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-dialog", _vm._g(_vm._b({
          attrs: {
            "md-fullscreen": false
          }
        }, "md-dialog", _vm.$attrs, false), _vm.$listeners), [_vm.mdTitle ? _c("md-dialog-title", [_vm._v(_vm._s(_vm.mdTitle))]) : _vm._e(), _vm._v(" "), _vm.mdContent ? _c("md-dialog-content", {
          domProps: {
            innerHTML: _vm._s(_vm.mdContent)
          }
        }) : _vm._e(), _vm._v(" "), _c("md-dialog-actions", [_c("md-button", {
          staticClass: "md-primary",
          on: {
            click: function ($event) {
              return _vm.$emit("update:mdActive", false);
            }
          }
        }, [_vm._v(_vm._s(_vm.mdConfirmText))])], 1)], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-197ab94b", esExports);
        }
      }
      /***/

    },
    /* 342 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdDialog = __webpack_require__(12);

      var _MdDialog2 = _interopRequireDefault(_MdDialog);

      var _MdDialogConfirm = __webpack_require__(343);

      var _MdDialogConfirm2 = _interopRequireDefault(_MdDialogConfirm);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdDialog2.default.name, _MdDialog2.default);
        Vue.component(_MdDialogConfirm2.default.name, _MdDialogConfirm2.default);
      };
      /***/

    },
    /* 343 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogConfirm_vue__ = __webpack_require__(103);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogConfirm_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogConfirm_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogConfirm_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogConfirm_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_acc7afda_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialogConfirm_vue__ = __webpack_require__(344);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogConfirm_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_acc7afda_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialogConfirm_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdDialog/MdDialogConfirm/MdDialogConfirm.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-acc7afda", Component.options);
          } else {
            hotAPI.reload("data-v-acc7afda", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 344 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-dialog", _vm._g(_vm._b({
          attrs: {
            "md-fullscreen": false
          }
        }, "md-dialog", _vm.$attrs, false), _vm.$listeners), [_vm.mdTitle ? _c("md-dialog-title", [_vm._v(_vm._s(_vm.mdTitle))]) : _vm._e(), _vm._v(" "), _vm.mdContent ? _c("md-dialog-content", {
          domProps: {
            innerHTML: _vm._s(_vm.mdContent)
          }
        }) : _vm._e(), _vm._v(" "), _c("md-dialog-actions", [_c("md-button", {
          on: {
            click: _vm.onCancel
          }
        }, [_vm._v(_vm._s(_vm.mdCancelText))]), _vm._v(" "), _c("md-button", {
          staticClass: "md-primary",
          on: {
            click: _vm.onConfirm
          }
        }, [_vm._v(_vm._s(_vm.mdConfirmText))])], 1)], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-acc7afda", esExports);
        }
      }
      /***/

    },
    /* 345 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdDialog = __webpack_require__(12);

      var _MdDialog2 = _interopRequireDefault(_MdDialog);

      var _MdDialogPrompt = __webpack_require__(346);

      var _MdDialogPrompt2 = _interopRequireDefault(_MdDialogPrompt);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdDialog2.default.name, _MdDialog2.default);
        Vue.component(_MdDialogPrompt2.default.name, _MdDialogPrompt2.default);
      };
      /***/

    },
    /* 346 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogPrompt_vue__ = __webpack_require__(104);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogPrompt_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogPrompt_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogPrompt_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogPrompt_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7b3c8c22_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialogPrompt_vue__ = __webpack_require__(347);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDialogPrompt_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7b3c8c22_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDialogPrompt_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdDialog/MdDialogPrompt/MdDialogPrompt.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-7b3c8c22", Component.options);
          } else {
            hotAPI.reload("data-v-7b3c8c22", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 347 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-dialog", _vm._b({
          attrs: {
            "md-fullscreen": false
          },
          on: {
            "md-opened": _vm.setInputFocus
          }
        }, "md-dialog", _vm.$attrs, false), [_vm.mdTitle ? _c("md-dialog-title", [_vm._v(_vm._s(_vm.mdTitle))]) : _vm._e(), _vm._v(" "), _vm.mdContent ? _c("md-dialog-content", {
          domProps: {
            innerHTML: _vm._s(_vm.mdContent)
          }
        }) : _vm._e(), _vm._v(" "), _c("md-dialog-content", [_c("md-field", [_c("md-input", {
          ref: "input",
          attrs: {
            id: _vm.mdInputId,
            name: _vm.mdInputName,
            maxlength: _vm.mdInputMaxlength,
            placeholder: _vm.mdInputPlaceholder
          },
          nativeOn: {
            keydown: function ($event) {
              if (!$event.type.indexOf("key") && _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")) {
                return null;
              }

              return _vm.onConfirm($event);
            }
          },
          model: {
            value: _vm.inputValue,
            callback: function ($$v) {
              _vm.inputValue = $$v;
            },
            expression: "inputValue"
          }
        })], 1)], 1), _vm._v(" "), _c("md-dialog-actions", [_c("md-button", {
          staticClass: "md-primary",
          on: {
            click: _vm.onCancel
          }
        }, [_vm._v(_vm._s(_vm.mdCancelText))]), _vm._v(" "), _c("md-button", {
          staticClass: "md-primary",
          on: {
            click: _vm.onConfirm
          }
        }, [_vm._v(_vm._s(_vm.mdConfirmText))])], 1)], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-7b3c8c22", esExports);
        }
      }
      /***/

    },
    /* 348 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdDivider = __webpack_require__(349);

      var _MdDivider2 = _interopRequireDefault(_MdDivider);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdDivider2.default.name, _MdDivider2.default);
      };
      /***/

    },
    /* 349 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDivider_vue__ = __webpack_require__(105);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDivider_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDivider_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDivider_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDivider_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8ca7ced6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDivider_vue__ = __webpack_require__(351);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(350);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDivider_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8ca7ced6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDivider_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdDivider/MdDivider.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-8ca7ced6", Component.options);
          } else {
            hotAPI.reload("data-v-8ca7ced6", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 350 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 351 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm.insideList ? _c("li", {
          staticClass: "md-divider",
          class: [_vm.$mdActiveTheme]
        }) : _c("hr", {
          staticClass: "md-divider",
          class: [_vm.$mdActiveTheme]
        });
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-8ca7ced6", esExports);
        }
      }
      /***/

    },
    /* 352 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdDrawer = __webpack_require__(353);

      var _MdDrawer2 = _interopRequireDefault(_MdDrawer);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdDrawer2.default.name, _MdDrawer2.default);
      };
      /***/

    },
    /* 353 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDrawer_vue__ = __webpack_require__(106);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDrawer_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDrawer_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDrawer_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDrawer_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_801caa62_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDrawer_vue__ = __webpack_require__(355);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(354);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDrawer_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_801caa62_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDrawer_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdDrawer/MdDrawer.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-801caa62", Component.options);
          } else {
            hotAPI.reload("data-v-801caa62", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 354 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 355 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-drawer",
          class: [_vm.$mdActiveTheme, _vm.drawerClasses]
        }, [_vm._t("default"), _vm._v(" "), _vm.mdFixed ? _c("md-overlay", {
          attrs: {
            "md-active": _vm.mdActive
          },
          on: {
            click: _vm.closeDrawer
          }
        }) : _c("md-overlay", {
          attrs: {
            "md-active": _vm.mdActive,
            "md-attach-to-parent": ""
          },
          on: {
            click: _vm.closeDrawer
          }
        })], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-801caa62", esExports);
        }
      }
      /***/

    },
    /* 356 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      __webpack_require__(357);

      exports.default = function (Vue) {};
      /***/

    },
    /* 357 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 358 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdEmptyState = __webpack_require__(108);

      var _MdEmptyState2 = _interopRequireDefault(_MdEmptyState);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdEmptyState2.default.name, _MdEmptyState2.default);
      };
      /***/

    },
    /* 359 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 360 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("transition", {
          attrs: {
            name: "md-empty-state",
            appear: ""
          }
        }, [_c("div", {
          staticClass: "md-empty-state",
          class: [_vm.emptyStateClasses, _vm.$mdActiveTheme],
          style: _vm.emptyStateStyles
        }, [_c("div", {
          staticClass: "md-empty-state-container"
        }, [_vm.mdIcon ? [_vm.isAssetIcon(_vm.mdIcon) ? _c("md-icon", {
          staticClass: "md-empty-state-icon",
          attrs: {
            "md-src": _vm.mdIcon
          }
        }) : _c("md-icon", {
          staticClass: "md-empty-state-icon"
        }, [_vm._v(_vm._s(_vm.mdIcon))])] : _vm._e(), _vm._v(" "), _vm.mdLabel ? _c("strong", {
          staticClass: "md-empty-state-label"
        }, [_vm._v(_vm._s(_vm.mdLabel))]) : _vm._e(), _vm._v(" "), _vm.mdDescription ? _c("p", {
          staticClass: "md-empty-state-description"
        }, [_vm._v(_vm._s(_vm.mdDescription))]) : _vm._e(), _vm._v(" "), _vm._t("default")], 2)])]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-d8a893a2", esExports);
        }
      }
      /***/

    },
    /* 361 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdIcon = __webpack_require__(111);

      var _MdIcon2 = _interopRequireDefault(_MdIcon);

      var _MdSelect = __webpack_require__(362);

      var _MdSelect2 = _interopRequireDefault(_MdSelect);

      var _MdField = __webpack_require__(24);

      var _MdField2 = _interopRequireDefault(_MdField);

      var _MdFile = __webpack_require__(380);

      var _MdFile2 = _interopRequireDefault(_MdFile);

      var _MdInput = __webpack_require__(17);

      var _MdInput2 = _interopRequireDefault(_MdInput);

      var _MdTextarea = __webpack_require__(385);

      var _MdTextarea2 = _interopRequireDefault(_MdTextarea);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.use(_MdIcon2.default);
        Vue.use(_MdSelect2.default);
        Vue.component(_MdField2.default.name, _MdField2.default);
        Vue.component(_MdFile2.default.name, _MdFile2.default);
        Vue.component(_MdInput2.default.name, _MdInput2.default);
        Vue.component(_MdTextarea2.default.name, _MdTextarea2.default);
      };
      /***/

    },
    /* 362 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdSelect = __webpack_require__(363);

      var _MdSelect2 = _interopRequireDefault(_MdSelect);

      var _MdOption = __webpack_require__(374);

      var _MdOption2 = _interopRequireDefault(_MdOption);

      var _MdOptgroup = __webpack_require__(377);

      var _MdOptgroup2 = _interopRequireDefault(_MdOptgroup);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdSelect2.default.name, _MdSelect2.default);
        Vue.component(_MdOption2.default.name, _MdOption2.default);
        Vue.component(_MdOptgroup2.default.name, _MdOptgroup2.default);
      };
      /***/

    },
    /* 363 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSelect_vue__ = __webpack_require__(112);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSelect_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSelect_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSelect_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSelect_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7e35dfa3_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSelect_vue__ = __webpack_require__(373);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(364);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSelect_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7e35dfa3_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSelect_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdField/MdSelect/MdSelect.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-7e35dfa3", Component.options);
          } else {
            hotAPI.reload("data-v-7e35dfa3", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 364 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 365 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDropDownIcon_vue__ = __webpack_require__(113);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDropDownIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDropDownIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDropDownIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDropDownIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_44db031d_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDropDownIcon_vue__ = __webpack_require__(366);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdDropDownIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_44db031d_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdDropDownIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/core/icons/MdDropDownIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-44db031d", Component.options);
          } else {
            hotAPI.reload("data-v-44db031d", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 366 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm._m(0);
      };

      var staticRenderFns = [function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-icon", {
          staticClass: "md-icon-image"
        }, [_c("svg", {
          attrs: {
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }
        }, [_c("path", {
          attrs: {
            d: "M7 10l5 5 5-5z"
          }
        }), _vm._v(" "), _c("path", {
          attrs: {
            d: "M0 0h24v24H0z",
            fill: "none"
          }
        })])]);
      }];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-44db031d", esExports);
        }
      }
      /***/

    },
    /* 367 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 368 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", _vm._g({
          staticClass: "md-menu"
        }, _vm.$listeners), [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-577c0662", esExports);
        }
      }
      /***/

    },
    /* 369 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 370 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 371 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("ul", _vm._g(_vm._b({
          staticClass: "md-list",
          class: [_vm.$mdActiveTheme]
        }, "ul", _vm.$attrs, false), _vm.$listeners), [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-16ed17ef", esExports);
        }
      }
      /***/

    },
    /* 372 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-popover", {
          attrs: {
            "md-settings": _vm.popperSettings,
            "md-active": _vm.shouldRender
          }
        }, [_vm.shouldRender ? _c("transition", _vm._g({
          attrs: {
            name: "md-menu-content",
            css: _vm.didMount
          }
        }, _vm.$listeners), [_c("div", {
          ref: "menu",
          class: [_vm.menuClasses, _vm.mdContentClass, _vm.$mdActiveTheme],
          style: _vm.menuStyles
        }, [_c("div", {
          ref: "container",
          staticClass: "md-menu-content-container md-scrollbar",
          class: _vm.$mdActiveTheme
        }, [_c("md-list", _vm._b({
          class: _vm.listClasses
        }, "md-list", _vm.filteredAttrs, false), [_vm._t("default")], 2)], 1)])]) : _vm._e()], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-2c16774c", esExports);
        }
      }
      /***/

    },
    /* 373 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-menu", {
          staticClass: "md-select",
          class: {
            "md-disabled": _vm.disabled
          },
          attrs: {
            "md-close-on-select": false,
            "md-active": _vm.showSelect,
            "md-offset-x": _vm.offset.x,
            "md-offset-y": _vm.offset.y,
            "md-dense": _vm.mdDense
          },
          on: {
            "update:mdActive": function ($event) {
              _vm.showSelect = $event;
            },
            "update:md-active": function ($event) {
              _vm.showSelect = $event;
            },
            "md-closed": _vm.onClose
          }
        }, [_c("md-input", _vm._g(_vm._b({
          ref: "input",
          staticClass: "md-input md-select-value",
          attrs: {
            readonly: "",
            disabled: _vm.disabled,
            required: _vm.required,
            placeholder: _vm.placeholder
          },
          on: {
            focus: function ($event) {
              $event.preventDefault();
              return _vm.onFocus($event);
            },
            blur: function ($event) {
              $event.preventDefault();
              return _vm.removeHighlight($event);
            },
            click: _vm.openSelect,
            keydown: [function ($event) {
              if (!$event.type.indexOf("key") && _vm._k($event.keyCode, "down", 40, $event.key, ["Down", "ArrowDown"])) {
                return null;
              }

              return _vm.openSelect($event);
            }, function ($event) {
              if (!$event.type.indexOf("key") && _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")) {
                return null;
              }

              return _vm.openSelect($event);
            }, function ($event) {
              if (!$event.type.indexOf("key") && _vm._k($event.keyCode, "space", 32, $event.key, [" ", "Spacebar"])) {
                return null;
              }

              return _vm.openSelect($event);
            }]
          },
          model: {
            value: _vm.MdSelect.label,
            callback: function ($$v) {
              _vm.$set(_vm.MdSelect, "label", $$v);
            },
            expression: "MdSelect.label"
          }
        }, "md-input", _vm.attrs, false), _vm.inputListeners)), _vm._v(" "), _c("md-drop-down-icon", {
          nativeOn: {
            click: function ($event) {
              return _vm.openSelect($event);
            }
          }
        }), _vm._v(" "), _c("keep-alive", [_c("md-menu-content", {
          ref: "menu",
          staticClass: "md-select-menu",
          style: _vm.menuStyles,
          attrs: {
            "md-content-class": _vm.mdClass
          },
          on: {
            enter: _vm.onMenuEnter
          }
        }, [_vm.showSelect ? _vm._t("default") : _vm._e()], 2)], 1), _vm._v(" "), !_vm.showSelect ? _c("div", {
          directives: [{
            name: "show",
            rawName: "v-show",
            value: false,
            expression: "false"
          }]
        }, [_vm._t("default")], 2) : _vm._e(), _vm._v(" "), _c("input", {
          directives: [{
            name: "model",
            rawName: "v-model",
            value: _vm.model,
            expression: "model"
          }],
          staticClass: "md-input-fake",
          attrs: {
            disabled: _vm.disabled,
            readonly: "",
            tabindex: "-1"
          },
          domProps: {
            value: _vm.model
          },
          on: {
            input: function ($event) {
              if ($event.target.composing) {
                return;
              }

              _vm.model = $event.target.value;
            }
          }
        }), _vm._v(" "), _c("select", _vm._b({
          directives: [{
            name: "model",
            rawName: "v-model",
            value: _vm.model,
            expression: "model"
          }],
          attrs: {
            readonly: "",
            tabindex: "-1"
          },
          on: {
            change: function ($event) {
              var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {
                return o.selected;
              }).map(function (o) {
                var val = "_value" in o ? o._value : o.value;
                return val;
              });
              _vm.model = $event.target.multiple ? $$selectedVal : $$selectedVal[0];
            }
          }
        }, "select", _vm.attributes, false))], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-7e35dfa3", esExports);
        }
      }
      /***/

    },
    /* 374 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOption_vue__ = __webpack_require__(121);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOption_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOption_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOption_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOption_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_32c8ce9c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdOption_vue__ = __webpack_require__(376);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(375);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOption_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_32c8ce9c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdOption_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdField/MdSelect/MdOption.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-32c8ce9c", Component.options);
          } else {
            hotAPI.reload("data-v-32c8ce9c", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 375 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 376 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-menu-item", {
          class: _vm.optionClasses,
          attrs: {
            disabled: _vm.isDisabled
          },
          on: {
            click: _vm.setSelection
          }
        }, [_vm.MdSelect.multiple ? _c("md-checkbox", {
          staticClass: "md-primary",
          attrs: {
            disabled: _vm.isDisabled
          },
          model: {
            value: _vm.isChecked,
            callback: function ($$v) {
              _vm.isChecked = $$v;
            },
            expression: "isChecked"
          }
        }) : _vm._e(), _vm._v(" "), _c("span", {
          ref: "text",
          staticClass: "md-list-item-text"
        }, [_vm._t("default")], 2)], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-32c8ce9c", esExports);
        }
      }
      /***/

    },
    /* 377 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOptgroup_vue__ = __webpack_require__(122);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOptgroup_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOptgroup_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOptgroup_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOptgroup_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_60840a93_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdOptgroup_vue__ = __webpack_require__(379);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(378);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdOptgroup_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_60840a93_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdOptgroup_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdField/MdSelect/MdOptgroup.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-60840a93", Component.options);
          } else {
            hotAPI.reload("data-v-60840a93", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 378 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 379 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-optgroup"
        }, [_c("md-subheader", [_vm._v(_vm._s(_vm.label))]), _vm._v(" "), _vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-60840a93", esExports);
        }
      }
      /***/

    },
    /* 380 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdFile_vue__ = __webpack_require__(123);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdFile_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdFile_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdFile_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdFile_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_16fac4a3_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdFile_vue__ = __webpack_require__(384);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(381);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdFile_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_16fac4a3_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdFile_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdField/MdFile/MdFile.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-16fac4a3", Component.options);
          } else {
            hotAPI.reload("data-v-16fac4a3", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 381 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 382 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdFileIcon_vue__ = __webpack_require__(124);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdFileIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdFileIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdFileIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdFileIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3bd0ca30_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdFileIcon_vue__ = __webpack_require__(383);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdFileIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3bd0ca30_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdFileIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/core/icons/MdFileIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-3bd0ca30", Component.options);
          } else {
            hotAPI.reload("data-v-3bd0ca30", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 383 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm._m(0);
      };

      var staticRenderFns = [function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-icon", {
          staticClass: "md-icon-image"
        }, [_c("svg", {
          attrs: {
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }
        }, [_c("path", {
          attrs: {
            d: "M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z"
          }
        }), _vm._v(" "), _c("path", {
          attrs: {
            d: "M0 0h24v24H0z",
            fill: "none"
          }
        })])]);
      }];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-3bd0ca30", esExports);
        }
      }
      /***/

    },
    /* 384 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-file"
        }, [_c("md-file-icon", {
          staticClass: "md-file-icon",
          class: _vm.iconClass,
          nativeOn: {
            click: function ($event) {
              return _vm.openPicker($event);
            }
          }
        }), _vm._v(" "), {
          disabled: _vm.disabled,
          required: _vm.required,
          placeholder: _vm.placeholder
        }.type === "checkbox" ? _c("input", _vm._b({
          directives: [{
            name: "model",
            rawName: "v-model",
            value: _vm.model,
            expression: "model"
          }],
          staticClass: "md-input",
          attrs: {
            readonly: "",
            type: "checkbox"
          },
          domProps: {
            checked: Array.isArray(_vm.model) ? _vm._i(_vm.model, null) > -1 : _vm.model
          },
          on: {
            click: _vm.openPicker,
            blur: _vm.onBlur,
            change: function ($event) {
              var $$a = _vm.model,
                  $$el = $event.target,
                  $$c = $$el.checked ? true : false;

              if (Array.isArray($$a)) {
                var $$v = null,
                    $$i = _vm._i($$a, $$v);

                if ($$el.checked) {
                  $$i < 0 && (_vm.model = $$a.concat([$$v]));
                } else {
                  $$i > -1 && (_vm.model = $$a.slice(0, $$i).concat($$a.slice($$i + 1)));
                }
              } else {
                _vm.model = $$c;
              }
            }
          }
        }, "input", {
          disabled: _vm.disabled,
          required: _vm.required,
          placeholder: _vm.placeholder
        }, false)) : {
          disabled: _vm.disabled,
          required: _vm.required,
          placeholder: _vm.placeholder
        }.type === "radio" ? _c("input", _vm._b({
          directives: [{
            name: "model",
            rawName: "v-model",
            value: _vm.model,
            expression: "model"
          }],
          staticClass: "md-input",
          attrs: {
            readonly: "",
            type: "radio"
          },
          domProps: {
            checked: _vm._q(_vm.model, null)
          },
          on: {
            click: _vm.openPicker,
            blur: _vm.onBlur,
            change: function ($event) {
              _vm.model = null;
            }
          }
        }, "input", {
          disabled: _vm.disabled,
          required: _vm.required,
          placeholder: _vm.placeholder
        }, false)) : _c("input", _vm._b({
          directives: [{
            name: "model",
            rawName: "v-model",
            value: _vm.model,
            expression: "model"
          }],
          staticClass: "md-input",
          attrs: {
            readonly: "",
            type: {
              disabled: _vm.disabled,
              required: _vm.required,
              placeholder: _vm.placeholder
            }.type
          },
          domProps: {
            value: _vm.model
          },
          on: {
            click: _vm.openPicker,
            blur: _vm.onBlur,
            input: function ($event) {
              if ($event.target.composing) {
                return;
              }

              _vm.model = $event.target.value;
            }
          }
        }, "input", {
          disabled: _vm.disabled,
          required: _vm.required,
          placeholder: _vm.placeholder
        }, false)), _vm._v(" "), _c("input", _vm._g(_vm._b({
          ref: "inputFile",
          attrs: {
            type: "file"
          },
          on: {
            change: _vm.onChange
          }
        }, "input", _vm.attributes, false), _vm.$listeners))], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-16fac4a3", esExports);
        }
      }
      /***/

    },
    /* 385 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTextarea_vue__ = __webpack_require__(125);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTextarea_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTextarea_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTextarea_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTextarea_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_445d103a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTextarea_vue__ = __webpack_require__(386);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTextarea_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_445d103a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTextarea_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdField/MdTextarea/MdTextarea.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-445d103a", Component.options);
          } else {
            hotAPI.reload("data-v-445d103a", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 386 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("textarea", _vm._g(_vm._b({
          directives: [{
            name: "model",
            rawName: "v-model",
            value: _vm.model,
            expression: "model"
          }],
          staticClass: "md-textarea",
          style: _vm.textareaStyles,
          domProps: {
            value: _vm.model
          },
          on: {
            focus: _vm.onFocus,
            blur: _vm.onBlur,
            input: function ($event) {
              if ($event.target.composing) {
                return;
              }

              _vm.model = $event.target.value;
            }
          }
        }, "textarea", _vm.attributes, false), _vm.listeners));
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-445d103a", esExports);
        }
      }
      /***/

    },
    /* 387 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdHighlightText = __webpack_require__(388);

      var _MdHighlightText2 = _interopRequireDefault(_MdHighlightText);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdHighlightText2.default.name, _MdHighlightText2.default);
      };
      /***/

    },
    /* 388 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdHighlightText_vue__ = __webpack_require__(126);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdHighlightText_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdHighlightText_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdHighlightText_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdHighlightText_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(389);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */


      var __vue_template__ = null;
      /* template functional */

      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdHighlightText_vue___default.a, __vue_template__, __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdHighlightText/MdHighlightText.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-41eb36a5", Component.options);
          } else {
            hotAPI.reload("data-v-41eb36a5", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 389 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 390 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdImage = __webpack_require__(391);

      var _MdImage2 = _interopRequireDefault(_MdImage);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdImage2.default.name, _MdImage2.default);
      };
      /***/

    },
    /* 391 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdImage_vue__ = __webpack_require__(127);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdImage_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdImage_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdImage_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdImage_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4511ea59_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdImage_vue__ = __webpack_require__(393);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(392);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdImage_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4511ea59_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdImage_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdImage/MdImage.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-4511ea59", Component.options);
          } else {
            hotAPI.reload("data-v-4511ea59", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 392 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 393 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-image",
          class: [_vm.$mdActiveTheme]
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-4511ea59", esExports);
        }
      }
      /***/

    },
    /* 394 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      __webpack_require__(395);

      exports.default = function (Vue) {};
      /***/

    },
    /* 395 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 396 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdList = __webpack_require__(119);

      var _MdList2 = _interopRequireDefault(_MdList);

      var _MdListItem = __webpack_require__(128);

      var _MdListItem2 = _interopRequireDefault(_MdListItem);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdList2.default.name, _MdList2.default);
        Vue.component(_MdListItem2.default.name, _MdListItem2.default);
      };
      /***/

    },
    /* 397 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 398 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemDefault_vue__ = __webpack_require__(131);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemDefault_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemDefault_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemDefault_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemDefault_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b4eac868_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemDefault_vue__ = __webpack_require__(401);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemDefault_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b4eac868_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemDefault_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdList/MdListItem/MdListItemDefault.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-b4eac868", Component.options);
          } else {
            hotAPI.reload("data-v-b4eac868", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 399 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemContent_vue__ = __webpack_require__(132);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemContent_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemContent_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemContent_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemContent_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_af37c3f8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemContent_vue__ = __webpack_require__(400);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemContent_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_af37c3f8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemContent_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdList/MdListItem/MdListItemContent.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-af37c3f8", Component.options);
          } else {
            hotAPI.reload("data-v-af37c3f8", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 400 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-ripple", {
          staticClass: "md-list-item-content",
          attrs: {
            "md-disabled": _vm.mdDisabled
          }
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-af37c3f8", esExports);
        }
      }
      /***/

    },
    /* 401 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-list-item-default",
          on: {
            click: _vm.toggleControl
          }
        }, [_c("md-list-item-content", {
          attrs: {
            "md-disabled": ""
          }
        }, [_vm._t("default")], 2)], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-b4eac868", esExports);
        }
      }
      /***/

    },
    /* 402 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemFakeButton_vue__ = __webpack_require__(133);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemFakeButton_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemFakeButton_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemFakeButton_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemFakeButton_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_91dceca8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemFakeButton_vue__ = __webpack_require__(403);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemFakeButton_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_91dceca8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemFakeButton_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdList/MdListItem/MdListItemFakeButton.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-91dceca8", Component.options);
          } else {
            hotAPI.reload("data-v-91dceca8", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 403 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-list-item-fake-button",
          attrs: {
            disabled: _vm.disabled
          }
        }, [_c("md-list-item-content", {
          attrs: {
            "md-disabled": _vm.isDisabled
          }
        }, [_vm._t("default")], 2)], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-91dceca8", esExports);
        }
      }
      /***/

    },
    /* 404 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemButton_vue__ = __webpack_require__(134);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemButton_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemButton_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemButton_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemButton_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4d27ca12_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemButton_vue__ = __webpack_require__(405);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemButton_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4d27ca12_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemButton_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdList/MdListItem/MdListItemButton.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-4d27ca12", Component.options);
          } else {
            hotAPI.reload("data-v-4d27ca12", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 405 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("button", {
          staticClass: "md-list-item-button",
          attrs: {
            type: "button",
            disabled: _vm.disabled
          }
        }, [_c("md-list-item-content", {
          attrs: {
            "md-disabled": _vm.isDisabled
          }
        }, [_vm._t("default")], 2)], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-4d27ca12", esExports);
        }
      }
      /***/

    },
    /* 406 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemLink_vue__ = __webpack_require__(135);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemLink_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemLink_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemLink_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemLink_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_49acb202_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemLink_vue__ = __webpack_require__(407);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemLink_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_49acb202_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemLink_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdList/MdListItem/MdListItemLink.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-49acb202", Component.options);
          } else {
            hotAPI.reload("data-v-49acb202", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 407 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("a", _vm._b({
          staticClass: "md-list-item-link"
        }, "a", _vm.$props, false), [_c("md-list-item-content", {
          attrs: {
            "md-disabled": _vm.isDisabled
          }
        }, [_vm._t("default")], 2)], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-49acb202", esExports);
        }
      }
      /***/

    },
    /* 408 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemRouter_vue__ = __webpack_require__(136);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemRouter_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemRouter_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemRouter_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemRouter_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_091cb0e4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemRouter_vue__ = __webpack_require__(409);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemRouter_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_091cb0e4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemRouter_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdList/MdListItem/MdListItemRouter.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-091cb0e4", Component.options);
          } else {
            hotAPI.reload("data-v-091cb0e4", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 409 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("router-link", _vm._b({
          staticClass: "md-list-item-router"
        }, "router-link", _vm.routerProps, false), [_c("md-list-item-content", {
          attrs: {
            "md-disabled": _vm.isDisabled
          }
        }, [_vm._t("default")], 2)], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-091cb0e4", esExports);
        }
      }
      /***/

    },
    /* 410 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemExpand_vue__ = __webpack_require__(137);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemExpand_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemExpand_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemExpand_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemExpand_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_378e4342_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemExpand_vue__ = __webpack_require__(414);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(411);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdListItemExpand_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_378e4342_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdListItemExpand_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdList/MdListItem/MdListItemExpand.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-378e4342", Component.options);
          } else {
            hotAPI.reload("data-v-378e4342", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 411 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 412 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowDownIcon_vue__ = __webpack_require__(138);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowDownIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowDownIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowDownIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowDownIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2443de21_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdArrowDownIcon_vue__ = __webpack_require__(413);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdArrowDownIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2443de21_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdArrowDownIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/core/icons/MdArrowDownIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-2443de21", Component.options);
          } else {
            hotAPI.reload("data-v-2443de21", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 413 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm._m(0);
      };

      var staticRenderFns = [function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-icon", {
          staticClass: "md-icon-image"
        }, [_c("svg", {
          attrs: {
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }
        }, [_c("path", {
          attrs: {
            d: "M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z"
          }
        }), _vm._v(" "), _c("path", {
          attrs: {
            d: "M0-.75h24v24H0z",
            fill: "none"
          }
        })])]);
      }];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-2443de21", esExports);
        }
      }
      /***/

    },
    /* 414 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-list-item-expand",
          class: _vm.expandClasses
        }, [_c("md-list-item-content", {
          attrs: {
            "md-disabled": _vm.isDisabled
          },
          nativeOn: {
            click: function ($event) {
              return _vm.toggleExpand($event);
            }
          }
        }, [_vm._t("default"), _vm._v(" "), _c("md-arrow-down-icon", {
          staticClass: "md-list-expand-icon"
        })], 2), _vm._v(" "), _c("div", {
          ref: "listExpand",
          staticClass: "md-list-expand",
          style: _vm.expandStyles
        }, [_vm._t("md-expand")], 2)], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-378e4342", esExports);
        }
      }
      /***/

    },
    /* 415 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdMenu = __webpack_require__(114);

      var _MdMenu2 = _interopRequireDefault(_MdMenu);

      var _MdMenuContent = __webpack_require__(116);

      var _MdMenuContent2 = _interopRequireDefault(_MdMenuContent);

      var _MdMenuItem = __webpack_require__(416);

      var _MdMenuItem2 = _interopRequireDefault(_MdMenuItem);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdMenu2.default.name, _MdMenu2.default);
        Vue.component(_MdMenuContent2.default.name, _MdMenuContent2.default);
        Vue.component(_MdMenuItem2.default.name, _MdMenuItem2.default);
      };
      /***/

    },
    /* 416 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenuItem_vue__ = __webpack_require__(139);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenuItem_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenuItem_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenuItem_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenuItem_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_26762702_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdMenuItem_vue__ = __webpack_require__(417);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdMenuItem_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_26762702_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdMenuItem_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdMenu/MdMenuItem.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-26762702", Component.options);
          } else {
            hotAPI.reload("data-v-26762702", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 417 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-list-item", _vm._g(_vm._b({
          staticClass: "md-menu-item",
          class: [_vm.itemClasses, _vm.$mdActiveTheme],
          attrs: {
            disabled: _vm.disabled,
            tabindex: _vm.highlighted && -1
          }
        }, "md-list-item", _vm.$attrs, false), _vm.listeners), [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-26762702", esExports);
        }
      }
      /***/

    },
    /* 418 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdProgressBar = __webpack_require__(419);

      var _MdProgressBar2 = _interopRequireDefault(_MdProgressBar);

      var _MdProgressSpinner = __webpack_require__(422);

      var _MdProgressSpinner2 = _interopRequireDefault(_MdProgressSpinner);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdProgressBar2.default.name, _MdProgressBar2.default);
        Vue.component(_MdProgressSpinner2.default.name, _MdProgressSpinner2.default);
      };
      /***/

    },
    /* 419 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdProgressBar_vue__ = __webpack_require__(140);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdProgressBar_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdProgressBar_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdProgressBar_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdProgressBar_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_ec82e758_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdProgressBar_vue__ = __webpack_require__(421);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(420);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdProgressBar_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_ec82e758_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdProgressBar_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdProgress/MdProgressBar/MdProgressBar.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-ec82e758", Component.options);
          } else {
            hotAPI.reload("data-v-ec82e758", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 420 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 421 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("transition", {
          attrs: {
            name: "md-progress-bar",
            appear: ""
          }
        }, [_c("div", {
          staticClass: "md-progress-bar",
          class: [_vm.progressClasses, _vm.$mdActiveTheme]
        }, [_c("div", {
          staticClass: "md-progress-bar-track",
          style: _vm.progressTrackStyle
        }), _vm._v(" "), _c("div", {
          staticClass: "md-progress-bar-fill",
          style: _vm.progressValueStyle
        }), _vm._v(" "), _c("div", {
          staticClass: "md-progress-bar-buffer",
          attrs: {
            Style: _vm.progressBufferStyle
          }
        })])]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-ec82e758", esExports);
        }
      }
      /***/

    },
    /* 422 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdProgressSpinner_vue__ = __webpack_require__(141);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdProgressSpinner_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdProgressSpinner_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdProgressSpinner_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdProgressSpinner_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0abf13e0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdProgressSpinner_vue__ = __webpack_require__(424);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(423);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdProgressSpinner_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0abf13e0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdProgressSpinner_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdProgress/MdProgressSpinner/MdProgressSpinner.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-0abf13e0", Component.options);
          } else {
            hotAPI.reload("data-v-0abf13e0", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 423 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 424 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("transition", {
          attrs: {
            name: "md-progress-spinner",
            appear: ""
          }
        }, [_c("div", {
          staticClass: "md-progress-spinner",
          class: [_vm.progressClasses, _vm.$mdActiveTheme]
        }, [_c("svg", {
          ref: "md-progress-spinner-draw",
          staticClass: "md-progress-spinner-draw",
          attrs: {
            preserveAspectRatio: "xMidYMid meet",
            focusable: "false",
            viewBox: "0 0 " + _vm.mdDiameter + " " + _vm.mdDiameter
          }
        }, [_c("circle", {
          ref: "md-progress-spinner-circle",
          staticClass: "md-progress-spinner-circle",
          attrs: {
            cx: "50%",
            cy: "50%",
            r: _vm.circleRadius
          }
        })])])]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-0abf13e0", esExports);
        }
      }
      /***/

    },
    /* 425 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdRadio = __webpack_require__(426);

      var _MdRadio2 = _interopRequireDefault(_MdRadio);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdRadio2.default.name, _MdRadio2.default);
      };
      /***/

    },
    /* 426 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdRadio_vue__ = __webpack_require__(142);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdRadio_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdRadio_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdRadio_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdRadio_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b5b900ce_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdRadio_vue__ = __webpack_require__(428);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(427);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdRadio_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b5b900ce_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdRadio_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdRadio/MdRadio.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-b5b900ce", Component.options);
          } else {
            hotAPI.reload("data-v-b5b900ce", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 427 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 428 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-radio",
          class: [_vm.$mdActiveTheme, _vm.radioClasses]
        }, [_c("div", {
          staticClass: "md-radio-container",
          on: {
            click: function ($event) {
              $event.stopPropagation();
              return _vm.toggleCheck($event);
            }
          }
        }, [_c("md-ripple", {
          attrs: {
            "md-centered": "",
            "md-active": _vm.rippleActive,
            "md-disabled": _vm.disabled
          },
          on: {
            "update:mdActive": function ($event) {
              _vm.rippleActive = $event;
            },
            "update:md-active": function ($event) {
              _vm.rippleActive = $event;
            }
          }
        }, [_c("input", _vm._b({
          attrs: {
            type: "radio"
          }
        }, "input", {
          id: _vm.id,
          name: _vm.name,
          disabled: _vm.disabled,
          required: _vm.required,
          value: _vm.value
        }, false))])], 1), _vm._v(" "), _vm.$slots.default ? _c("label", {
          staticClass: "md-radio-label",
          attrs: {
            for: _vm.id
          },
          on: {
            click: function ($event) {
              $event.preventDefault();
              return _vm.toggleCheck($event);
            }
          }
        }, [_vm._t("default")], 2) : _vm._e()]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-b5b900ce", esExports);
        }
      }
      /***/

    },
    /* 429 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdRipple = __webpack_require__(10);

      var _MdRipple2 = _interopRequireDefault(_MdRipple);

      var _MdWave = __webpack_require__(49);

      var _MdWave2 = _interopRequireDefault(_MdWave);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdRipple2.default.name, _MdRipple2.default);
        Vue.component(_MdWave2.default.name, _MdWave2.default);
      };
      /***/

    },
    /* 430 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdSnackbar = __webpack_require__(431);

      var _MdSnackbar2 = _interopRequireDefault(_MdSnackbar);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdSnackbar2.default.name, _MdSnackbar2.default);
      };
      /***/

    },
    /* 431 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSnackbar_vue__ = __webpack_require__(143);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSnackbar_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSnackbar_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSnackbar_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSnackbar_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7063bc8f_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSnackbar_vue__ = __webpack_require__(436);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(432);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSnackbar_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7063bc8f_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSnackbar_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdSnackbar/MdSnackbar.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-7063bc8f", Component.options);
          } else {
            hotAPI.reload("data-v-7063bc8f", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 432 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 433 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSnackbarContent_vue__ = __webpack_require__(144);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSnackbarContent_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSnackbarContent_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSnackbarContent_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSnackbarContent_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_ffe066cc_hasScoped_false_buble_transforms_stripWithFunctional_true_node_modules_vue_loader_lib_selector_type_template_index_0_MdSnackbarContent_vue__ = __webpack_require__(434);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = true;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSnackbarContent_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_ffe066cc_hasScoped_false_buble_transforms_stripWithFunctional_true_node_modules_vue_loader_lib_selector_type_template_index_0_MdSnackbarContent_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdSnackbar/MdSnackbarContent.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-ffe066cc", Component.options);
          } else {
            hotAPI.rerender("data-v-ffe066cc", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 434 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function (_h, _vm) {
        var _c = _vm._c;
        return _c("transition", {
          attrs: {
            name: "md-snackbar",
            appear: ""
          }
        }, [_c("div", {
          staticClass: "md-snackbar",
          class: _vm.props.mdClasses
        }, [_c("div", {
          staticClass: "md-snackbar-content"
        }, [_vm._t("default")], 2)])]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-ffe066cc", esExports);
        }
      }
      /***/

    },
    /* 435 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var currentSnackbar = null;
      var timeout = null;

      function createPromise(duration, persistent, context) {
        return new Promise(function (resolve) {
          currentSnackbar = {
            destroy: function destroy() {
              currentSnackbar = null;
              resolve();
            }
          };

          if (duration !== Infinity) {
            timeout = window.setTimeout(function () {
              destroySnackbar();

              if (!persistent) {
                context._vnode.componentInstance.initDestroy(true);
              }
            }, duration);
          }
        });
      }

      var destroySnackbar = exports.destroySnackbar = function destroySnackbar() {
        return new Promise(function (resolve) {
          if (currentSnackbar) {
            window.clearTimeout(timeout);
            currentSnackbar.destroy();
            window.setTimeout(resolve, 400);
          } else {
            resolve();
          }
        });
      };

      var createSnackbar = exports.createSnackbar = function createSnackbar(duration, persistent, context) {
        if (currentSnackbar) {
          return destroySnackbar().then(function () {
            return createPromise(duration, persistent, context);
          });
        }

        return createPromise(duration, persistent, context);
      };
      /***/

    },
    /* 436 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm.mdPersistent && _vm.mdDuration !== Infinity ? _c("md-portal", [_c("keep-alive", [_vm.mdActive ? _c("md-snackbar-content", {
          attrs: {
            "md-classes": [_vm.snackbarClasses, _vm.$mdActiveTheme]
          }
        }, [_vm._t("default")], 2) : _vm._e()], 1)], 1) : _c("md-portal", [_vm.mdActive ? _c("md-snackbar-content", {
          attrs: {
            "md-classes": [_vm.snackbarClasses, _vm.$mdActiveTheme]
          }
        }, [_vm._t("default")], 2) : _vm._e()], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-7063bc8f", esExports);
        }
      }
      /***/

    },
    /* 437 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdSpeedDial = __webpack_require__(438);

      var _MdSpeedDial2 = _interopRequireDefault(_MdSpeedDial);

      var _MdSpeedDialTarget = __webpack_require__(441);

      var _MdSpeedDialTarget2 = _interopRequireDefault(_MdSpeedDialTarget);

      var _MdSpeedDialContent = __webpack_require__(444);

      var _MdSpeedDialContent2 = _interopRequireDefault(_MdSpeedDialContent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdSpeedDial2.default.name, _MdSpeedDial2.default);
        Vue.component(_MdSpeedDialTarget2.default.name, _MdSpeedDialTarget2.default);
        Vue.component(_MdSpeedDialContent2.default.name, _MdSpeedDialContent2.default);
      };
      /***/

    },
    /* 438 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDial_vue__ = __webpack_require__(145);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDial_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDial_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDial_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDial_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_470f76d1_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSpeedDial_vue__ = __webpack_require__(440);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(439);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDial_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_470f76d1_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSpeedDial_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdSpeedDial/MdSpeedDial.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-470f76d1", Component.options);
          } else {
            hotAPI.reload("data-v-470f76d1", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 439 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 440 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-speed-dial",
          class: [_vm.$mdActiveTheme, _vm.speedDialClasses]
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-470f76d1", esExports);
        }
      }
      /***/

    },
    /* 441 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDialTarget_vue__ = __webpack_require__(146);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDialTarget_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDialTarget_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDialTarget_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDialTarget_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_654a757c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSpeedDialTarget_vue__ = __webpack_require__(443);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(442);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDialTarget_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_654a757c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSpeedDialTarget_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdSpeedDial/MdSpeedDialTarget.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-654a757c", Component.options);
          } else {
            hotAPI.reload("data-v-654a757c", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 442 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 443 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-button", _vm._g(_vm._b({
          staticClass: "md-speed-dial-target md-fab",
          on: {
            click: _vm.handleClick
          }
        }, "md-button", _vm.$attrs, false), _vm.$listeners), [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-654a757c", esExports);
        }
      }
      /***/

    },
    /* 444 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDialContent_vue__ = __webpack_require__(147);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDialContent_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDialContent_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDialContent_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDialContent_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_45ac6418_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSpeedDialContent_vue__ = __webpack_require__(446);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(445);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSpeedDialContent_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_45ac6418_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSpeedDialContent_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdSpeedDial/MdSpeedDialContent.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-45ac6418", Component.options);
          } else {
            hotAPI.reload("data-v-45ac6418", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 445 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 446 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-speed-dial-content"
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-45ac6418", esExports);
        }
      }
      /***/

    },
    /* 447 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdSteppers = __webpack_require__(448);

      var _MdSteppers2 = _interopRequireDefault(_MdSteppers);

      var _MdStep = __webpack_require__(458);

      var _MdStep2 = _interopRequireDefault(_MdStep);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdSteppers2.default.name, _MdSteppers2.default);
        Vue.component(_MdStep2.default.name, _MdStep2.default);
      };
      /***/

    },
    /* 448 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSteppers_vue__ = __webpack_require__(148);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSteppers_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSteppers_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSteppers_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSteppers_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_95acb722_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSteppers_vue__ = __webpack_require__(457);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(449);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSteppers_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_95acb722_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSteppers_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdSteppers/MdSteppers.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-95acb722", Component.options);
          } else {
            hotAPI.reload("data-v-95acb722", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 449 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 450 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdWarningIcon_vue__ = __webpack_require__(152);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdWarningIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdWarningIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdWarningIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdWarningIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8993dc9c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdWarningIcon_vue__ = __webpack_require__(451);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdWarningIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8993dc9c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdWarningIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/core/icons/MdWarningIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-8993dc9c", Component.options);
          } else {
            hotAPI.reload("data-v-8993dc9c", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 451 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm._m(0);
      };

      var staticRenderFns = [function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-icon", {
          staticClass: "md-icon-image"
        }, [_c("svg", {
          attrs: {
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }
        }, [_c("path", {
          attrs: {
            d: "M0 0h24v24H0z",
            fill: "none"
          }
        }), _vm._v(" "), _c("path", {
          attrs: {
            d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
          }
        })])]);
      }];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-8993dc9c", esExports);
        }
      }
      /***/

    },
    /* 452 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCheckIcon_vue__ = __webpack_require__(153);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCheckIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCheckIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCheckIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCheckIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4154b05e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCheckIcon_vue__ = __webpack_require__(453);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdCheckIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4154b05e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdCheckIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/core/icons/MdCheckIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-4154b05e", Component.options);
          } else {
            hotAPI.reload("data-v-4154b05e", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 453 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm._m(0);
      };

      var staticRenderFns = [function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-icon", {
          staticClass: "md-icon-image"
        }, [_c("svg", {
          attrs: {
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }
        }, [_c("path", {
          attrs: {
            d: "M0 0h24v24H0z",
            fill: "none"
          }
        }), _vm._v(" "), _c("path", {
          attrs: {
            d: "M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"
          }
        })])]);
      }];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-4154b05e", esExports);
        }
      }
      /***/

    },
    /* 454 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdEditIcon_vue__ = __webpack_require__(154);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdEditIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdEditIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdEditIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdEditIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_75d6b514_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdEditIcon_vue__ = __webpack_require__(455);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdEditIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_75d6b514_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdEditIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/core/icons/MdEditIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-75d6b514", Component.options);
          } else {
            hotAPI.reload("data-v-75d6b514", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 455 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm._m(0);
      };

      var staticRenderFns = [function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-icon", {
          staticClass: "md-icon-image"
        }, [_c("svg", {
          attrs: {
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }
        }, [_c("path", {
          attrs: {
            d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
          }
        }), _vm._v(" "), _c("path", {
          attrs: {
            d: "M0 0h24v24H0z",
            fill: "none"
          }
        })])]);
      }];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-75d6b514", esExports);
        }
      }
      /***/

    },
    /* 456 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-button", _vm._g(_vm._b({
          staticClass: "md-stepper-header",
          class: _vm.classes,
          attrs: {
            disabled: _vm.shouldDisable
          },
          nativeOn: {
            click: function ($event) {
              !_vm.MdSteppers.syncRoute && _vm.MdSteppers.setActiveStep(_vm.index);
            }
          }
        }, "md-button", _vm.data.props, false), _vm.data.events), [_vm.data.error ? _c("md-warning-icon", {
          staticClass: "md-stepper-icon"
        }) : _c("div", {
          staticClass: "md-stepper-number"
        }, [_vm.data.done && _vm.data.editable ? _c("md-edit-icon", {
          staticClass: "md-stepper-editable"
        }) : _vm.data.done ? _c("md-check-icon", {
          staticClass: "md-stepper-done"
        }) : [_vm._v(_vm._s(_vm.MdSteppers.getStepperNumber(_vm.index)))]], 2), _vm._v(" "), _c("div", {
          staticClass: "md-stepper-text"
        }, [_c("span", {
          staticClass: "md-stepper-label"
        }, [_vm._v(_vm._s(_vm.data.label))]), _vm._v(" "), _vm.data.error ? _c("span", {
          staticClass: "md-stepper-error"
        }, [_vm._v(_vm._s(_vm.data.error))]) : _vm.data.description ? _c("span", {
          staticClass: "md-stepper-description"
        }, [_vm._v(_vm._s(_vm.data.description))]) : _vm._e()])], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-43e95866", esExports);
        }
      }
      /***/

    },
    /* 457 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-steppers",
          class: [_vm.steppersClasses, _vm.$mdActiveTheme]
        }, [!_vm.mdVertical ? _c("div", {
          staticClass: "md-steppers-navigation"
        }, _vm._l(_vm.MdSteppers.items, function (_, index) {
          return _c("md-step-header", {
            key: index,
            attrs: {
              index: index
            }
          });
        }), 1) : _vm._e(), _vm._v(" "), _c("div", {
          staticClass: "md-steppers-wrapper",
          style: _vm.contentStyles
        }, [_c("div", {
          staticClass: "md-steppers-container",
          style: _vm.containerStyles
        }, [_vm._t("default")], 2)])]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-95acb722", esExports);
        }
      }
      /***/

    },
    /* 458 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdStep_vue__ = __webpack_require__(155);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdStep_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdStep_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdStep_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdStep_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8624960e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdStep_vue__ = __webpack_require__(460);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(459);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdStep_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8624960e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdStep_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdSteppers/MdStep.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-8624960e", Component.options);
          } else {
            hotAPI.reload("data-v-8624960e", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 459 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 460 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-stepper"
        }, [_vm.MdSteppers.isVertical ? _c("md-step-header", {
          attrs: {
            index: _vm.id
          }
        }) : _vm._e(), _vm._v(" "), _c("div", {
          staticClass: "md-stepper-content",
          class: {
            "md-active": !_vm.MdSteppers.syncRoute && _vm.id === _vm.MdSteppers.activeStep
          }
        }, [_vm._t("default")], 2)], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-8624960e", esExports);
        }
      }
      /***/

    },
    /* 461 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdSubheader = __webpack_require__(462);

      var _MdSubheader2 = _interopRequireDefault(_MdSubheader);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdSubheader2.default.name, _MdSubheader2.default);
      };
      /***/

    },
    /* 462 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSubheader_vue__ = __webpack_require__(156);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSubheader_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSubheader_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSubheader_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSubheader_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7ff30e86_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSubheader_vue__ = __webpack_require__(464);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(463);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSubheader_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7ff30e86_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSubheader_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdSubheader/MdSubheader.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-7ff30e86", Component.options);
          } else {
            hotAPI.reload("data-v-7ff30e86", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 463 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 464 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm.insideList ? _c("li", {
          staticClass: "md-subheader",
          class: [_vm.$mdActiveTheme]
        }, [_vm._t("default")], 2) : _c("div", {
          staticClass: "md-subheader",
          class: [_vm.$mdActiveTheme]
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-7ff30e86", esExports);
        }
      }
      /***/

    },
    /* 465 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdSwitch = __webpack_require__(466);

      var _MdSwitch2 = _interopRequireDefault(_MdSwitch);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdSwitch2.default.name, _MdSwitch2.default);
      };
      /***/

    },
    /* 466 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSwitch_vue__ = __webpack_require__(157);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSwitch_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSwitch_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSwitch_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSwitch_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5ff953a2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSwitch_vue__ = __webpack_require__(468);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(467);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdSwitch_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5ff953a2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdSwitch_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdSwitch/MdSwitch.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-5ff953a2", Component.options);
          } else {
            hotAPI.reload("data-v-5ff953a2", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 467 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 468 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-switch",
          class: [_vm.$mdActiveTheme, _vm.checkClasses]
        }, [_c("div", {
          staticClass: "md-switch-container",
          on: {
            click: function ($event) {
              $event.stopPropagation();
              return _vm.toggleCheck($event);
            }
          }
        }, [_c("div", {
          staticClass: "md-switch-thumb"
        }, [_c("md-ripple", {
          attrs: {
            "md-centered": "",
            "md-active": _vm.rippleActive,
            "md-disabled": _vm.disabled
          },
          on: {
            "update:mdActive": function ($event) {
              _vm.rippleActive = $event;
            },
            "update:md-active": function ($event) {
              _vm.rippleActive = $event;
            }
          }
        }, [_c("input", _vm._b({
          attrs: {
            id: _vm.id,
            type: "checkbox"
          }
        }, "input", {
          id: _vm.id,
          name: _vm.name,
          disabled: _vm.disabled,
          required: _vm.required,
          value: _vm.value
        }, false))])], 1)]), _vm._v(" "), _vm.$slots.default ? _c("label", {
          staticClass: "md-switch-label",
          attrs: {
            for: _vm.id
          },
          on: {
            click: function ($event) {
              $event.preventDefault();
              return _vm.toggleCheck($event);
            }
          }
        }, [_vm._t("default")], 2) : _vm._e()]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-5ff953a2", esExports);
        }
      }
      /***/

    },
    /* 469 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdTableContainer = __webpack_require__(470);

      var _MdTableContainer2 = _interopRequireDefault(_MdTableContainer);

      var _MdTableToolbar = __webpack_require__(491);

      var _MdTableToolbar2 = _interopRequireDefault(_MdTableToolbar);

      var _MdTableEmptyState = __webpack_require__(496);

      var _MdTableEmptyState2 = _interopRequireDefault(_MdTableEmptyState);

      var _MdTableRow = __webpack_require__(165);

      var _MdTableRow2 = _interopRequireDefault(_MdTableRow);

      var _MdTableHead = __webpack_require__(30);

      var _MdTableHead2 = _interopRequireDefault(_MdTableHead);

      var _MdTableCell = __webpack_require__(499);

      var _MdTableCell2 = _interopRequireDefault(_MdTableCell);

      var _MdTablePagination = __webpack_require__(502);

      var _MdTablePagination2 = _interopRequireDefault(_MdTablePagination);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component('MdTable', _MdTableContainer2.default);
        Vue.component(_MdTableToolbar2.default.name, _MdTableToolbar2.default);
        Vue.component(_MdTableEmptyState2.default.name, _MdTableEmptyState2.default);
        Vue.component(_MdTableRow2.default.name, _MdTableRow2.default);
        Vue.component(_MdTableHead2.default.name, _MdTableHead2.default);
        Vue.component(_MdTableCell2.default.name, _MdTableCell2.default);
        Vue.component(_MdTablePagination2.default.name, _MdTablePagination2.default);
      };
      /***/

    },
    /* 470 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _MdTable = __webpack_require__(471);

      var _MdTable2 = _interopRequireDefault(_MdTable);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      function processChildren(children, createElement) {
        var slotNames = ['md-table-toolbar', 'md-table-empty-state', 'md-table-pagination'];
        var nodes = Array.from(children);
        var namedSlots = {};

        function getTag(_ref) {
          var componentOptions = _ref.componentOptions;
          return componentOptions && componentOptions.tag;
        }

        nodes.forEach(function (node, index) {
          if (node && node.tag) {
            var tag = getTag(node);

            if (tag && slotNames.includes(tag)) {
              node.data.slot = tag;
              node.data.attrs = node.data.attrs || {};

              namedSlots[tag] = function () {
                return node;
              };

              nodes.splice(index, 1);
            }
          }
        });
        return {
          childNodes: nodes,
          slots: namedSlots
        };
      }

      exports.default = {
        name: 'MdTableContainer',
        functional: true,
        render: function render(createElement, _ref2) {
          var data = _ref2.data,
              props = _ref2.props,
              children = _ref2.children;
          var slotChildren = [];
          var scopedSlots = data.scopedSlots;

          if (children) {
            var _processChildren = processChildren(children, createElement),
                childNodes = _processChildren.childNodes,
                slots = _processChildren.slots;

            slotChildren = childNodes;
            scopedSlots = _extends({}, scopedSlots, slots);
          }

          return createElement(_MdTable2.default, _extends({}, data, {
            props: props,
            scopedSlots: scopedSlots
          }), [slotChildren]);
        }
      };
      /***/
    },
    /* 471 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTable_vue__ = __webpack_require__(158);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTable_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTable_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTable_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTable_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_aaeced82_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTable_vue__ = __webpack_require__(490);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(472);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTable_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_aaeced82_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTable_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTable/MdTable.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-aaeced82", Component.options);
          } else {
            hotAPI.reload("data-v-aaeced82", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 472 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 473 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTagSwitcher_vue__ = __webpack_require__(159);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTagSwitcher_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTagSwitcher_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTagSwitcher_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTagSwitcher_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */


      var __vue_template__ = null;
      /* template functional */

      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTagSwitcher_vue___default.a, __vue_template__, __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTagSwitcher/MdTagSwitcher.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-6f07a399", Component.options);
          } else {
            hotAPI.reload("data-v-6f07a399", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 474 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableThead_vue__ = __webpack_require__(160);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableThead_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableThead_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableThead_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableThead_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8a8392f6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableThead_vue__ = __webpack_require__(481);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableThead_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8a8392f6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableThead_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTable/MdTableThead.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-8a8392f6", Component.options);
          } else {
            hotAPI.reload("data-v-8a8392f6", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 475 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 476 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdUpwardIcon_vue__ = __webpack_require__(162);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdUpwardIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdUpwardIcon_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdUpwardIcon_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdUpwardIcon_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_235f197a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdUpwardIcon_vue__ = __webpack_require__(477);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdUpwardIcon_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_235f197a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdUpwardIcon_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/core/icons/MdUpwardIcon.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-235f197a", Component.options);
          } else {
            hotAPI.reload("data-v-235f197a", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 477 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm._m(0);
      };

      var staticRenderFns = [function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-icon", {
          staticClass: "md-icon-image"
        }, [_c("svg", {
          attrs: {
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }
        }, [_c("path", {
          attrs: {
            d: "M0 0h24v24H0V0z",
            fill: "none"
          }
        }), _vm._v(" "), _c("path", {
          attrs: {
            d: "M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
          }
        })])]);
      }];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-235f197a", esExports);
        }
      }
      /***/

    },
    /* 478 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("th", {
          staticClass: "md-table-head",
          class: _vm.headClasses,
          style: _vm.headStyles,
          attrs: {
            id: _vm.id
          },
          on: {
            click: _vm.changeSort
          }
        }, [_vm.$slots.default ? _c("div", {
          staticClass: "md-table-head-container"
        }, [_c("div", {
          staticClass: "md-table-head-label"
        }, [_vm._t("default")], 2)]) : _c("md-ripple", {
          staticClass: "md-table-head-container",
          attrs: {
            "md-disabled": !_vm.hasSort
          }
        }, [_c("div", {
          staticClass: "md-table-head-label"
        }, [_vm.hasSort ? _c("md-upward-icon", {
          staticClass: "md-table-sortable-icon"
        }, [_vm._v("arrow_upward")]) : _vm._e(), _vm._v("\n\n      " + _vm._s(_vm.label) + "\n\n      "), _vm.tooltip ? _c("md-tooltip", [_vm._v(_vm._s(_vm.tooltip))]) : _vm._e()], 1)])], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-98ddc082", esExports);
        }
      }
      /***/

    },
    /* 479 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableHeadSelection_vue__ = __webpack_require__(163);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableHeadSelection_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableHeadSelection_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableHeadSelection_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableHeadSelection_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7fa31cbd_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableHeadSelection_vue__ = __webpack_require__(480);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableHeadSelection_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7fa31cbd_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableHeadSelection_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTable/MdTableHeadSelection.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-7fa31cbd", Component.options);
          } else {
            hotAPI.reload("data-v-7fa31cbd", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 480 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm.selectableCount ? _c("md-table-head", {
          staticClass: "md-table-cell-selection"
        }, [_c("div", {
          staticClass: "md-table-cell-container"
        }, [_c("md-checkbox", {
          attrs: {
            model: _vm.allSelected,
            disabled: _vm.isDisabled
          },
          on: {
            change: _vm.onChange
          }
        })], 1)]) : _vm._e();
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-7fa31cbd", esExports);
        }
      }
      /***/

    },
    /* 481 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("thead", [_c("tr", [_c("md-table-head-selection"), _vm._v(" "), _vm._l(_vm.MdTable.items, function (item, index) {
          return _c("md-table-head", _vm._b({
            key: index
          }, "md-table-head", item, false));
        })], 2)]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-8a8392f6", esExports);
        }
      }
      /***/

    },
    /* 482 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableAlternateHeader_vue__ = __webpack_require__(164);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableAlternateHeader_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableAlternateHeader_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableAlternateHeader_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableAlternateHeader_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4241c118_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableAlternateHeader_vue__ = __webpack_require__(484);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(483);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableAlternateHeader_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4241c118_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableAlternateHeader_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTable/MdTableAlternateHeader.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-4241c118", Component.options);
          } else {
            hotAPI.reload("data-v-4241c118", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 483 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 484 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("transition", {
          attrs: {
            name: "md-table-alternate-header"
          }
        }, [_c("div", {
          staticClass: "md-table-alternate-header"
        }, [_vm._t("default")], 2)]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-4241c118", esExports);
        }
      }
      /***/

    },
    /* 485 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 486 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 487 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _vm.mdSelectable ? _c("td", {
          staticClass: "md-table-cell md-table-cell-selection"
        }, [_c("div", {
          staticClass: "md-table-cell-container"
        }, [_c("md-checkbox", {
          attrs: {
            disabled: !_vm.mdSelectable || _vm.mdDisabled
          },
          on: {
            change: _vm.onChange
          },
          model: {
            value: _vm.isSelected,
            callback: function ($$v) {
              _vm.isSelected = $$v;
            },
            expression: "isSelected"
          }
        })], 1)]) : _vm._e();
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-50a4b70a", esExports);
        }
      }
      /***/

    },
    /* 488 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("tr", _vm._g({
          staticClass: "md-table-row",
          class: _vm.rowClasses,
          on: {
            click: _vm.onClick
          }
        }, _vm.$listeners), [_vm.selectableCount ? _c("md-table-cell-selection", {
          attrs: {
            value: _vm.isMultipleSelected,
            "md-disabled": _vm.mdDisabled,
            "md-selectable": _vm.mdSelectable === "multiple",
            "md-row-id": _vm.mdIndex
          },
          on: {
            input: function (selected) {
              return selected ? _vm.addSelection() : _vm.removeSelection();
            }
          }
        }) : _vm._e(), _vm._v(" "), _vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-00a4496a", esExports);
        }
      }
      /***/

    },
    /* 489 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableRowGhost_vue__ = __webpack_require__(169);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableRowGhost_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableRowGhost_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableRowGhost_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableRowGhost_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */


      var __vue_template__ = null;
      /* template functional */

      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableRowGhost_vue___default.a, __vue_template__, __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTable/MdTableRowGhost.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-b1d6a698", Component.options);
          } else {
            hotAPI.reload("data-v-b1d6a698", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 490 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-tag-switcher", {
          staticClass: "md-table",
          attrs: {
            "md-tag": _vm.contentTag
          }
        }, [_vm._t("md-table-toolbar"), _vm._v(" "), _c("keep-alive", [_vm.$scopedSlots["md-table-alternate-header"] && _vm.selectedCount ? _c("md-table-alternate-header", [_vm._t("md-table-alternate-header", null, {
          count: _vm.selectedCount
        })], 2) : _vm._e()], 1), _vm._v(" "), _vm.mdFixedHeader ? _c("div", {
          staticClass: "md-table-fixed-header",
          class: _vm.headerClasses,
          style: _vm.headerStyles
        }, [_c("div", {
          ref: "fixedHeaderContainer",
          staticClass: "md-table-fixed-header-container",
          on: {
            scroll: _vm.setHeaderScroll
          }
        }, [_c("table", {
          style: _vm.fixedHeaderTableStyles
        }, [_c("md-table-thead")], 1)])]) : _vm._e(), _vm._v(" "), _c("md-content", {
          staticClass: "md-table-content md-scrollbar",
          class: _vm.contentClasses,
          style: _vm.contentStyles,
          on: {
            scroll: _vm.setScroll
          }
        }, [_c("table", {
          ref: "contentTable"
        }, [!_vm.mdFixedHeader && _vm.$scopedSlots["md-table-row"] ? _c("md-table-thead", {
          class: _vm.headerClasses
        }) : _vm._e(), _vm._v(" "), !_vm.$scopedSlots["md-table-row"] ? _c("tbody", [_vm._t("default")], 2) : _vm.value.length ? _c("tbody", _vm._l(_vm.value, function (item, index) {
          return _c("md-table-row-ghost", {
            key: _vm.getRowId(item, _vm.mdModelId),
            attrs: {
              "md-id": _vm.getRowId(item, _vm.mdModelId),
              "md-index": index,
              "md-item": item
            }
          }, [_vm._t("md-table-row", null, {
            item: item,
            index: index
          })], 2);
        }), 1) : _vm.$scopedSlots["md-table-empty-state"] ? _c("tbody", [_c("tr", [_c("td", {
          attrs: {
            colspan: _vm.headerCount
          }
        }, [_vm._t("md-table-empty-state")], 2)])]) : _vm._e()], 1), _vm._v(" "), _vm._t("md-table-pagination")], 2), _vm._v(" "), !_vm.hasValue && _vm.$scopedSlots["md-table-row"] ? _vm._t("default") : _vm._e()], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-aaeced82", esExports);
        }
      }
      /***/

    },
    /* 491 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableToolbar_vue__ = __webpack_require__(170);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableToolbar_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableToolbar_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableToolbar_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableToolbar_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3f6f4028_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableToolbar_vue__ = __webpack_require__(495);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(492);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableToolbar_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3f6f4028_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableToolbar_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTable/MdTableToolbar.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-3f6f4028", Component.options);
          } else {
            hotAPI.reload("data-v-3f6f4028", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 492 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 493 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 494 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-toolbar",
          class: [_vm.$mdActiveTheme, "md-elevation-" + _vm.mdElevation]
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-38a0b4d9", esExports);
        }
      }
      /***/

    },
    /* 495 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-toolbar", {
          staticClass: "md-table-toolbar md-transparent",
          attrs: {
            "md-elevation": 0
          }
        }, [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-3f6f4028", esExports);
        }
      }
      /***/

    },
    /* 496 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableEmptyState_vue__ = __webpack_require__(173);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableEmptyState_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableEmptyState_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableEmptyState_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableEmptyState_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6f84743a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableEmptyState_vue__ = __webpack_require__(498);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(497);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableEmptyState_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6f84743a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableEmptyState_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTable/MdTableEmptyState.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-6f84743a", Component.options);
          } else {
            hotAPI.reload("data-v-6f84743a", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 497 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 498 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-empty-state", _vm._b({
          staticClass: "md-table-empty-state"
        }, "md-empty-state", _vm.$props, false), [_vm._t("default")], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-6f84743a", esExports);
        }
      }
      /***/

    },
    /* 499 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableCell_vue__ = __webpack_require__(174);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableCell_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableCell_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableCell_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableCell_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_813d6b7e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableCell_vue__ = __webpack_require__(501);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(500);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTableCell_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_813d6b7e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTableCell_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTable/MdTableCell.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-813d6b7e", Component.options);
          } else {
            hotAPI.reload("data-v-813d6b7e", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 500 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 501 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("td", {
          staticClass: "md-table-cell",
          class: _vm.cellClasses
        }, [_c("div", {
          staticClass: "md-table-cell-container"
        }, [_vm._t("default")], 2)]);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-813d6b7e", esExports);
        }
      }
      /***/

    },
    /* 502 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTablePagination_vue__ = __webpack_require__(175);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTablePagination_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTablePagination_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTablePagination_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTablePagination_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4165698e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTablePagination_vue__ = __webpack_require__(504);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(503);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTablePagination_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4165698e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTablePagination_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTable/MdTablePagination.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-4165698e", Component.options);
          } else {
            hotAPI.reload("data-v-4165698e", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 503 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 504 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-table-pagination"
        }, [_vm.mdPageOptions !== false ? [_c("span", {
          staticClass: "md-table-pagination-label"
        }, [_vm._v(_vm._s(_vm.mdLabel))]), _vm._v(" "), _c("md-field", [_c("md-select", {
          attrs: {
            "md-dense": "",
            "md-class": "md-pagination-select"
          },
          on: {
            changed: _vm.setPageSize
          },
          model: {
            value: _vm.currentPageSize,
            callback: function ($$v) {
              _vm.currentPageSize = $$v;
            },
            expression: "currentPageSize"
          }
        }, _vm._l(_vm.mdPageOptions, function (amount) {
          return _c("md-option", {
            key: amount,
            attrs: {
              value: amount
            }
          }, [_vm._v(_vm._s(amount))]);
        }), 1)], 1)] : _vm._e(), _vm._v(" "), _c("span", [_vm._v(_vm._s(_vm.currentItemCount) + "-" + _vm._s(_vm.currentPageCount) + " " + _vm._s(_vm.mdSeparator) + " " + _vm._s(_vm.mdTotal))]), _vm._v(" "), _c("md-button", {
          staticClass: "md-icon-button md-table-pagination-previous",
          attrs: {
            disabled: _vm.mdPage === 1
          },
          on: {
            click: function ($event) {
              return _vm.goToPrevious();
            }
          }
        }, [_c("md-icon", [_vm._v("keyboard_arrow_left")])], 1), _vm._v(" "), _c("md-button", {
          staticClass: "md-icon-button md-table-pagination-next",
          on: {
            click: function ($event) {
              return _vm.goToNext();
            }
          }
        }, [_c("md-icon", [_vm._v("keyboard_arrow_right")])], 1)], 2);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-4165698e", esExports);
        }
      }
      /***/

    },
    /* 505 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdTabs = __webpack_require__(506);

      var _MdTabs2 = _interopRequireDefault(_MdTabs);

      var _MdTab = __webpack_require__(509);

      var _MdTab2 = _interopRequireDefault(_MdTab);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdTabs2.default.name, _MdTabs2.default);
        Vue.component(_MdTab2.default.name, _MdTab2.default);
      };
      /***/

    },
    /* 506 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTabs_vue__ = __webpack_require__(176);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTabs_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTabs_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTabs_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTabs_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_733c1bef_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTabs_vue__ = __webpack_require__(508);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(507);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTabs_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_733c1bef_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTabs_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTabs/MdTabs.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-733c1bef", Component.options);
          } else {
            hotAPI.reload("data-v-733c1bef", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 507 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 508 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("div", {
          staticClass: "md-tabs",
          class: [_vm.tabsClasses, _vm.$mdActiveTheme]
        }, [_c("div", {
          ref: "navigation",
          staticClass: "md-tabs-navigation",
          class: _vm.navigationClasses
        }, [_vm._l(_vm.MdTabs.items, function (ref, index) {
          var label = ref.label;
          var props = ref.props;
          var icon = ref.icon;
          var disabled = ref.disabled;
          var data = ref.data;
          var events = ref.events;
          return _c("md-button", _vm._g(_vm._b({
            key: index,
            staticClass: "md-tab-nav-button",
            class: {
              "md-active": !_vm.mdSyncRoute && index === _vm.activeTab,
              "md-icon-label": icon && label
            },
            attrs: {
              disabled: disabled
            },
            nativeOn: {
              click: function ($event) {
                return _vm.setActiveTab(index);
              }
            }
          }, "md-button", props, false), events), [_vm.$scopedSlots["md-tab"] ? _vm._t("md-tab", null, {
            tab: {
              label: label,
              icon: icon,
              data: data
            }
          }) : [!icon ? [_vm._v(_vm._s(label))] : [_vm.isAssetIcon(icon) ? _c("md-icon", {
            staticClass: "md-tab-icon",
            attrs: {
              "md-src": icon
            }
          }) : _c("md-icon", {
            staticClass: "md-tab-icon"
          }, [_vm._v(_vm._s(icon))]), _vm._v(" "), _c("span", {
            staticClass: "md-tab-label"
          }, [_vm._v(_vm._s(label))])]]], 2);
        }), _vm._v(" "), _c("span", {
          ref: "indicator",
          staticClass: "md-tabs-indicator",
          class: _vm.indicatorClass,
          style: _vm.indicatorStyles
        })], 2), _vm._v(" "), _c("md-content", {
          directives: [{
            name: "show",
            rawName: "v-show",
            value: _vm.hasContent,
            expression: "hasContent"
          }],
          ref: "tabsContent",
          staticClass: "md-tabs-content",
          style: _vm.contentStyles
        }, [_c("div", {
          staticClass: "md-tabs-container",
          style: _vm.containerStyles
        }, [_vm._t("default")], 2)])], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-733c1bef", esExports);
        }
      }
      /***/

    },
    /* 509 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTab_vue__ = __webpack_require__(177);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTab_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTab_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTab_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTab_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);

      var disposed = false;

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */


      var __vue_template__ = null;
      /* template functional */

      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = null;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTab_vue___default.a, __vue_template__, __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTabs/MdTab.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-4b620898", Component.options);
          } else {
            hotAPI.reload("data-v-4b620898", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 510 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdToolbar = __webpack_require__(171);

      var _MdToolbar2 = _interopRequireDefault(_MdToolbar);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdToolbar2.default.name, _MdToolbar2.default);
      };
      /***/

    },
    /* 511 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _material = __webpack_require__(2);

      var _material2 = _interopRequireDefault(_material);

      var _MdTooltip = __webpack_require__(512);

      var _MdTooltip2 = _interopRequireDefault(_MdTooltip);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (Vue) {
        (0, _material2.default)(Vue);
        Vue.component(_MdTooltip2.default.name, _MdTooltip2.default);
      };
      /***/

    },
    /* 512 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTooltip_vue__ = __webpack_require__(178);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTooltip_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTooltip_vue__);
      /* harmony namespace reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTooltip_vue__) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTooltip_vue__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_03252be9_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTooltip_vue__ = __webpack_require__(514);

      var disposed = false;

      function injectStyle(ssrContext) {
        if (disposed) return;

        __webpack_require__(513);
      }

      var normalizeComponent = __webpack_require__(0);
      /* script */

      /* template */

      /* template functional */


      var __vue_template_functional__ = false;
      /* styles */

      var __vue_styles__ = injectStyle;
      /* scopeId */

      var __vue_scopeId__ = null;
      /* moduleIdentifier (server only) */

      var __vue_module_identifier__ = null;
      var Component = normalizeComponent(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MdTooltip_vue___default.a, __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_03252be9_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MdTooltip_vue__["a"
      /* default */
      ], __vue_template_functional__, __vue_styles__, __vue_scopeId__, __vue_module_identifier__);
      Component.options.__file = "src/components/MdTooltip/MdTooltip.vue";
      /* hot reload */

      if (false) {
        (function () {
          var hotAPI = require("vue-hot-reload-api");

          hotAPI.install(require("vue"), false);
          if (!hotAPI.compatible) return;
          module.hot.accept();

          if (!module.hot.data) {
            hotAPI.createRecord("data-v-03252be9", Component.options);
          } else {
            hotAPI.reload("data-v-03252be9", Component.options);
          }

          module.hot.dispose(function (data) {
            disposed = true;
          });
        })();
      }
      /* harmony default export */


      __webpack_exports__["default"] = Component.exports;
      /***/
    },
    /* 513 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 514 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var render = function () {
        var _vm = this;

        var _h = _vm.$createElement;

        var _c = _vm._self._c || _h;

        return _c("md-popover", {
          attrs: {
            "md-settings": _vm.popperSettings,
            "md-active": _vm.shouldRender
          }
        }, [_vm.shouldRender ? _c("transition", {
          attrs: {
            name: "md-tooltip"
          }
        }, [_c("div", {
          staticClass: "md-tooltip",
          class: [_vm.tooltipClasses, _vm.$mdActiveTheme],
          style: _vm.tooltipStyles
        }, [_vm._t("default")], 2)]) : _vm._e()], 1);
      };

      var staticRenderFns = [];
      render._withStripped = true;
      var esExports = {
        render: render,
        staticRenderFns: staticRenderFns
        /* harmony default export */

      };
      __webpack_exports__["a"] = esExports;

      if (false) {
        module.hot.accept();

        if (module.hot.data) {
          require("vue-hot-reload-api").rerender("data-v-03252be9", esExports);
        }
      }
      /***/

    }])
  );
});
},{"vue":"node_modules/vue/dist/vue.runtime.esm.js","process":"node_modules/process/browser.js"}],"src/main.js":[function(require,module,exports) {
"use strict";

var _vue = _interopRequireDefault(require("vue"));

var _App = _interopRequireDefault(require("./App.vue"));

var _vueMaterial = _interopRequireDefault(require("vue-material"));

var _axios = _interopRequireDefault(require("axios"));

var _moment = _interopRequireDefault(require("moment"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//import 'vue-material/dist/vue-material.min.css'
//import 'vue-material/dist/theme/default.css'
_vue.default.prototype.$http = _axios.default;
_vue.default.prototype.$baseurl = "http://127.0.0.1:8080/";

_vue.default.prototype.$buildurl = function (url) {
  return this.$baseurl + url;
};

_vue.default.config.productionTip = false;

_vue.default.use(_vueMaterial.default);

_vue.default.prototype.moment = _moment.default;
new _vue.default({
  render: function render(h) {
    return h(_App.default);
  }
}).$mount("#app-placeholder");
},{"vue":"node_modules/vue/dist/vue.runtime.esm.js","./App.vue":"src/App.vue","vue-material":"node_modules/vue-material/dist/vue-material.js","axios":"node_modules/axios/index.js","moment":"node_modules/moment/moment.js"}],"node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "60590" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else {
        window.location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["node_modules/parcel-bundler/src/builtins/hmr-runtime.js","src/main.js"], null)
//# sourceMappingURL=/main.1e43358e.js.map